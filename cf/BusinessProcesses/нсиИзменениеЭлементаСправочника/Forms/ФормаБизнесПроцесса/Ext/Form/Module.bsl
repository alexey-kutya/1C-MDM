#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(Объект.Предмет) Тогда 
		Сообщение = "";
		Если нсиБизнесПроцессы.ОбъектОбрабатывается(Объект.Предмет, Сообщение) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение,,,,Отказ);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	нсиБизнесПроцессы.ЗаполнитьСписокДоступныхСправочников(Элементы.ИмяСправочника.СписокВыбора);
	
	Если ЗначениеЗаполнено(Объект.Предмет) И Не ЗначениеЗаполнено(Объект.ИмяСправочника) Тогда 
		Объект.ИмяСправочника = Объект.Предмет.Метаданные().Имя;
	КонецЕсли;	
	
	НачальныйПризнакСтарта = Объект.Стартован;
	ТолькоПросмотр = Объект.Стартован;
	Элементы.ГруппаСостояние.Видимость = Объект.Завершен;
	Если Объект.Завершен Тогда
		ДатаЗавершенияСтрокой = Формат(Объект.ДатаЗавершения, "ДЛФ=DT");
		ТекстСостояния = ?(Объект.Выполнено, 
			НСтр("en='Target complited %1.';ru='Задание выполнено %1.'"), 
			НСтр("en='Task canceled %1.';ru='Задание отменено %1.'"));	
		Элементы.ДекорацияТекст.Заголовок =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСостояния,	
				ДатаЗавершенияСтрокой);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Автор) и Не НачальныйПризнакСтарта Тогда 
		Объект.Автор = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда 
//	ITRR Кутья АА Локализация	
		//Объект.Наименование 	= "Изменить " + Объект.Предмет;
		//Объект.ОписаниеЗадания 	= "Изменить " + Объект.Предмет;
		Объект.Наименование 	= НСтр("ru = 'Изменить'; en = 'Change'")+" " 
		+ Объект.Предмет;
		Объект.ОписаниеЗадания 	= НСтр("ru = 'Изменить'; en = 'Change'")+" " 
		+ Объект.Предмет;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Объект.ГруппаПользователейБП = нсиБизнеспроцессы.ПолучитьГруппуПользователейБППоУмолчанию(Объект.Автор);
		Если НЕ ЗначениеЗаполнено(Объект.ГруппаПользователейБП) Тогда 
			Объект.ГруппаПользователейБП = Справочники.нсиГруппыПользователейБП.Основная;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда 
		Если НЕ ЗначениеЗаполнено(Объект.Дата) Тогда 
			Объект.Дата = ТекущаяДата();
		КонецЕсли;
		СоздатьМакетНаСервере();
	КонецЕсли;
	
	ПредметСтрокой = нсиБизнесПроцессы.ПредметСтрокой(Объект.Предмет);
	
	нсиРаботаСФормамиСервер.УстановитьТипПредмета(Объект.Предмет, Элементы.ПризнакЭлемента);
	
	УправлениеВидимостьюИДоступом();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Объект.ИмяСправочника) Тогда
		НастроитьПолеВыбораПредмета();
	КонецЕсли;	
	
	Если Параметры.Ключ.Пустая() тогда
		Модифицированность = Истина;
	КонецЕсли;	
	
	НастройкаВидаМакетаИОригинала();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ПараметрыЗаписи.Свойство("Старт") Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отправьте в службу НСИ.",,,,Отказ);
		Возврат;
	КонецЕсли;	
	
	// Проверяем на аналогичный запрос
	Сообщение = "";
	Если Объект.Предмет.ЭтоМакет Тогда 
		Если нсиБизнесПроцессы.ОбъектОбрабатывается(Объект.ПредметОригинал, Сообщение) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение,,,,Отказ);
			Возврат;
		КонецЕсли;
	Иначе
		Если нсиБизнесПроцессы.ОбъектОбрабатывается(Объект.Предмет, Сообщение) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение,,,,Отказ);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Проверяем заполнение и в остальных случаях при записи (помимо старта).
	ЗначениеСтарт = Ложь;
	Если ПараметрыЗаписи.Свойство("Старт", ЗначениеСтарт) И НЕ ЗначениеСтарт Тогда
		Отказ = НЕ ТекущийОбъект.ПроверитьЗаполнение();
	КонецЕсли;
	
	Если НЕ ТекущийОбъект.Предмет.ЭтоМакет Тогда 
		ТекущийОбъект.ПредметОригинал   = ТекущийОбъект.Предмет;
	КонецЕсли;
	
	ТекущийОбъект.Дата = ТекущаяДата();
	ТекущийОбъект.СрокИсполнения = нсиБизнесПроцессы.ОпределитьДатуОкончанияПоКалендарномуГрафику(
		ТекущаяДата(),
		ТекущийОбъект.НастройкаБП.ОбщееВремяВыполнения,
		Справочники.Пользователи.ПустаяСсылка()
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ИзменилсяСписокБП");
	Оповестить("ЗадачаИзменена", Неопределено);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ЭтоСтарт = Ложь;
	Если ПараметрыЗаписи.Свойство("Старт",ЭтоСтарт) Тогда 
		Если ЭтоСтарт Тогда 
			Если нсиБизнесПроцессы.НеВыполняютсяУсловияНаВсехЭтапахОбработки(ТекущийОбъект.Ссылка) Тогда 
				ТекстСообщения = 
					"Не выполняются условия ни на одном этапе шага ""Обработка"".
					|Отправка в службу НСИ не выполнена.";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Если Параметры.Ключ.Пустая() тогда
		Ошибка = Ложь;
		УдалитьМакетНаСервереПриЗакрытии(Ошибка);
		Если Ошибка тогда
			ПоказатьОповещениеПользователя("Удаление макета",, 
				"При удалении макета возникла ошибка. Подробнее смотрите в журнал регистрации.", БиблиотекаКартинок.Ошибка32);
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	МассивНастроек = нсиБизнесПроцессы.ПолучитьНастройкиБП(
		Объект.ИмяСправочника,
		"нсиИзменениеЭлементаСправочника",
		Объект.Предмет,
		Объект.Автор
	);
	
	Если МассивНастроек.Количество() = 1 Тогда 
		Объект.НастройкаБП = МассивНастроек[0];
	ИначеЕсли МассивНастроек.Количество() = 0 Тогда 
		ПоказатьПредупреждение(,
			"Отправка в службу НСИ невозможна.
			|Для Вас отсутствует настройка маршрута бизнес-процесса, 
			|соответствующая макету и типу бизнес-процесса
			|Обратитесь к администратору."
		);
		Возврат;
	Иначе
		СЗ = новый СписокЗначений;
		СЗ.ЗагрузитьЗначения(МассивНастроек);
		ОписаниеОповещения = новый ОписаниеОповещения("ОбработкаВыбораНастройкиБП",ЭтаФорма);
		СЗ.ПоказатьВыборЭлемента(ОписаниеОповещения,"Выберите настройку бизнес-процесса");
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПрохождениеЭтапов();
	
	Если ЗаписатьВыполнить() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораНастройкиБП(Результат,ДП) Экспорт
	Если Результат = Неопределено Тогда 
		ПоказатьПредупреждение(,
			"Не выбрана настройка маршрута бизнес-процесса.
			|Отправка в службу НСИ не выполнена"
		);
		Возврат;
	Иначе
		Объект.НастройкаБП = Результат.Значение;
	КонецЕсли;
	
	ЗаполнитьПрохождениеЭтапов();
	
	Если ЗаписатьВыполнить() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура Удалить(Команда)
	Если НЕ Объект.Стартован Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОтветаУдалитьЗаявку",ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, "Вы уверены, что хотите удалить заявку?",РежимДиалогаВопрос.ДаНет,,,"Подтверждение удаления");
	Иначе
		ПоказатьОповещениеПользователя("Запущенный бизнес-процесс удалить нельзя!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаУдалитьЗаявку(Ответ,ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Если УдалитьНаСервере() Тогда 
			ОповеститьОбИзменении(Тип("БизнесПроцессСсылка.нсиИзменениеЭлементаСправочника"));
			Оповестить("ИзменилсяСписокБП");
			Модифицированность = Ложь;
			Закрыть();
		КонецЕсли;
	Иначе
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Параметры(Команда)
	НаправленияОбработки = новый СписокЗначений;
	НаправленияОбработки.ЗагрузитьЗначения(нсиБизнеспроцессы.ПолучитьГруппыПользователейБП(Объект.Автор));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаЗакрытияФормыПараметровБП",ЭтаФорма);
	ОткрытьФорму(
		"ОбщаяФорма.нсиФормаПараметровБП",
		новый Структура("НаправленияОбработки,НаправлениеОбработки",НаправленияОбработки,Объект.ГруппаПользователейБП),
		ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗакрытияФормыПараметровБП(Результат,ДП) Экспорт
	Если Результат<>Неопределено Тогда 
		Объект.ГруппаПользователейБП = Результат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМакет(Команда)
	Если ЗначениеЗаполнено(Объект.Предмет) И нсиОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Предмет,"ЭтоМакет") Тогда 
		ПоказатьПредупреждение(,"Макет уже создан!");
	Иначе
		Отказ = Ложь;
		СоздатьМакетНаСервере(Отказ);
		Если Отказ Тогда 
			ПоказатьПредупреждение(,"Не удалось создать макет!");
		Иначе
			ПоказатьОповещениеПользователя("Макет создан!");
		КонецЕсли;
		УправлениеВидимостьюИДоступом();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяСправочникаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ИмяСправочника) Тогда 
		Если Объект.Предмет <> Неопределено Тогда 
			Если ТипЗнч(Объект.ИмяСправочника) = Тип("Строка") Тогда 
				Если ТипЗнч(Объект.Предмет) <> Тип("СправочникСсылка."+Объект.ИмяСправочника) Тогда 
					УдалитьМакет(Объект.Предмет);
					Объект.Предмет = Неопределено;
					Объект.ПредметОригинал = Неопределено;
				КонецЕсли;
			ИначеЕсли ТипЗнч(Объект.ИмяСправочника) = Тип("СправочникСсылка.нсиВидыСправочников") Тогда 
				Если (ТипЗнч(Объект.Предмет) <> Тип("СправочникСсылка.нсиУниверсальныйФункциональныйСправочник")
					И ТипЗнч(Объект.Предмет) <> Тип("СправочникСсылка.нсиУниверсальныйКлассификатор"))
					ИЛИ ТипЗнч(Объект.Предмет.Владелец) <> Объект.ИмяСправочника Тогда 
					УдалитьМакет(Объект.Предмет);
					Объект.Предмет = Неопределено;
					Объект.ПредметОригинал = Неопределено;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		НастроитьПолеВыбораПредмета();
		
	Иначе
		УдалитьМакет(Объект.Предмет);
		Объект.Предмет = Неопределено;
		Объект.ПредметОригинал = Неопределено;
	КонецЕсли;
	
	УправлениеВидимостьюИДоступом();
	
	НастройкаВидаМакетаИОригинала();
	НастройкаГиперссылкиПредмета();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаголовокЗаданияПриИзменении(Элемент)
	
	Объект.ОписаниеЗадания = Объект.Наименование;
		
КонецПроцедуры

&НаКлиенте
Процедура ПредметПриИзменении(Элемент)
	ПроверитьПредмет();
	
	Если ЗначениеЗаполнено(Объект.Предмет) Тогда
//	ITRR Кутья АА Локализация	
		//Объект.Наименование 	= "Изменить " + Объект.Предмет;
		//Объект.ОписаниеЗадания 	= "Изменить " +Объект.Предмет;
		Объект.Наименование 	= НСтр("ru = 'Изменить'; en = 'Change'")+" " 
		+ Объект.Предмет;
		Объект.ОписаниеЗадания 	= НСтр("ru = 'Изменить'; en = 'Change'")+" " 
		+ Объект.Предмет;
	Иначе
		Объект.Наименование 	= "";
		Объект.ОписаниеЗадания 	= "";
	КонецЕсли;
	
	ОбновитьТипПредметаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПредметСтрокойНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	
	ИмяФормыПредмета = нсиБизнесПроцессыРаботаСоСправочниками.ПолучитьИмяФормыОбъекта(Объект.ИмяСправочника, Объект.Предмет);
	ПараметрыФормы = Новый Структура("Ключ,ВременныйЭлемент", Объект.Предмет, Истина);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредметНажатиеЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(ИмяФормыПредмета, ПараметрыФормы, Элемент,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметНажатиеЗавершение(Результат,ДП) Экспорт
	ПредметСтрокой = нсиБизнесПроцессы.ПредметСтрокой(Объект.Предмет);
КонецПроцедуры

&НаКлиенте
Процедура ПредметОригиналПриИзменении(Элемент)
	НастройкаГиперссылкиПредмета();
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПредметНажатие(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.Предмет) Тогда
		Элементы.ГиперссылкаПредмет.Видимость = Ложь;
		Объект.Предмет = Объект.ПредметОригинал;
		СоздатьМакет(Неопределено);
		ПредметСтрокойНажатие(Неопределено,Истина);
		Элементы.ПредметОригинал.Вид = ВидПоляФормы.ПолеНадписи;
		Элементы.Предмет.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция УдалитьНаСервере()
	УстановитьПривилегированныйРежим(Истина);
	
	Если Объект.Ссылка.Стартован Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Запущенный бизнес-процесс удалить нельзя!");
		Возврат Ложь;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		УдалитьМакет(Объект.Предмет);
		Объект.Ссылка.ПолучитьОбъект().Удалить();
		ЗафиксироватьТранзакцию();
		Возврат Истина;
	Исключение
		ТекстСообщения = "Не удалось удалить! "+ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		ОтменитьТранзакцию();
		Прочитать();
		Возврат Ложь;
	КонецПопытки;
КонецФункции

&НаКлиенте
Функция ЗаписатьВыполнить()
	
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(
		"Регистрация заявки на изменение элемента справочника """+Строка(Объект.ИмяСправочника)+""""
	);
	
	ОчиститьСообщения();
	ПараметрСтарт = НЕ НачальныйПризнакСтарта И НЕ Объект.Стартован;
	УспешноЗаписано = Записать(Новый Структура("Старт", ПараметрСтарт));
	
	Если УспешноЗаписано И ПараметрСтарт Тогда
		
		НачальныйПризнакСтарта = Истина;
		ОтобразитьИзменениеДанных(Объект.Ссылка, ВидИзмененияДанных.Добавление);
		Оповестить("ЗадачаИзменена", Объект.Ссылка);
		
	КонецЕсли;
	Возврат УспешноЗаписано;
	
КонецФункции

&НаСервере
Процедура УправлениеВидимостьюИДоступом()
	ТолькоПросмотр = ТолькоПросмотр ИЛИ Объект.Стартован;
	Элементы.ЗаписатьИЗакрыть.Доступность = НЕ ТолькоПросмотр И НЕ Объект.Стартован;
	Элементы.Удалить.Доступность = НЕ ТолькоПросмотр И НЕ Объект.Стартован;
	Элементы.Записать.Доступность = НЕ ТолькоПросмотр И НЕ Объект.Стартован;
	Элементы.Предмет.Доступность = ЗначениеЗаполнено(Объект.ИмяСправочника);
	
	Элементы.НастройкаБП.Видимость = 
		Объект.Стартован
		И (РольДоступна("ПолныеПрава") ИЛИ РольДоступна("нсиСтаршийЭксперт"));
		
	Если ЗначениеЗаполнено(Объект.Предмет) Тогда 
		Элементы.ГруппаПредмет.Видимость = НЕ Объект.Предмет.ЭтоМакет;
		Элементы.ГруппаМакет.Видимость = Объект.Предмет.ЭтоМакет;
	Иначе
		Элементы.ГруппаПредмет.Видимость = Истина;
		Элементы.ГруппаМакет.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьПредмет()
	Если ЗначениеЗаполнено(Объект.Предмет) Тогда 
		Сообщение = "";
		Если нсиБизнесПроцессы.ОбъектОбрабатывается(Объект.Предмет, Сообщение) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение);
			Объект.Предмет = Неопределено;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьТипПредметаНаСервере()
 	нсиРаботаСФормамиСервер.УстановитьТипПредмета(Объект.Предмет, Элементы.ПризнакЭлемента);	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПрохождениеЭтапов()
	БПОбъект = РеквизитФормыВЗначение("Объект");
	БПОбъект.ЗаполнитьПрохождениеЭтапов();
	ЗначениеВРеквизитФормы(БПОбъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПолеВыбораПредмета()
	Если ЗначениеЗаполнено(Объект.ИмяСправочника) Тогда 
		Если ТипЗнч(Объект.ИмяСправочника) = Тип("Строка") Тогда 
			Элементы.Предмет.ДоступныеТипы 			= Новый ОписаниеТипов("СправочникСсылка."+Объект.ИмяСправочника);
			Элементы.Предмет.ОграничениеТипа 		= Новый ОписаниеТипов("СправочникСсылка."+Объект.ИмяСправочника);
			ПВ = новый Массив;
			ПВ.Добавить(новый ПараметрВыбора("Отбор.ЭтоМакет",Ложь));
			Элементы.Предмет.ПараметрыВыбора = новый ФиксированныйМассив(ПВ);
		ИначеЕсли ТипЗнч(Объект.ИмяСправочника) = Тип("СправочникСсылка.нсиВидыСправочников") Тогда 
			ИмяСправочникаУХ = нсиУниверсальноеХранилищеПовтИсп.ПолучитьИмяСправочникаХранилища(Объект.ИмяСправочника);
			Элементы.Предмет.ДоступныеТипы 			= Новый ОписаниеТипов("СправочникСсылка."+ИмяСправочникаУХ);
			Элементы.Предмет.ОграничениеТипа 		= Новый ОписаниеТипов("СправочникСсылка."+ИмяСправочникаУХ);
			ПВ = новый Массив;
			ПВ.Добавить(новый ПараметрВыбора("Отбор.ЭтоМакет",Ложь));
			ПВ.Добавить(новый ПараметрВыбора("Отбор.Владелец",Объект.ИмяСправочника));
			Элементы.Предмет.ПараметрыВыбора = новый ФиксированныйМассив(ПВ);
		КонецЕсли;
		Элементы.Предмет.РазрешитьСоставнойТип 	= Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СоздатьМакетНаСервере(Отказ = Ложь)
		
	ЗаданиеОбъект = РеквизитФормыВЗначение("Объект");
	ЗаданиеОбъект.СоздатьВременныйЭлемент(Отказ);
	
	Если Не Отказ тогда
		УстановитьПривилегированныйРежим(Истина);
		ЗначениеВРеквизитФормы(ЗаданиеОбъект,"Объект");
		ПредметСтрокой = нсиБизнесПроцессы.ПредметСтрокой(Объект.Предмет);
		нсиРаботаСФормамиСервер.УстановитьТипПредмета(Объект.Предмет, Элементы.ПризнакЭлемента);
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УдалитьМакет(Ссылка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда 
		Возврат;
	КонецЕсли;	
	
	Если НЕ Ссылка.ЭтоМакет Тогда 
		Возврат;
	КонецЕсли;	
	
	Если Объект.Ссылка.Стартован Тогда 
		Возврат;
	КонецЕсли;

	НачатьТранзакцию();
	Попытка
		Предмет = Ссылка.ПолучитьОбъект();
		ЗаблокироватьДанныеДляРедактирования(Ссылка);
		Предмет.Удалить();
		
		БПОбъект = РеквизитФормыВЗначение("Объект");
		БПОбъект.Предмет = Неопределено;
		БПОбъект.ОбменДанными.Загрузка = Истина;
		БПОбъект.Записать();
		ЗначениеВРеквизитФормы(БПОбъект,"Объект");
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось удалить макет: "+ОписаниеОшибки());
		ОтменитьТранзакцию();
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьМакетНаСервереПриЗакрытии(Ошибка = Ложь)
	
// ITRR Кутья АА	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Объект.Предмет) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Объект.Предмет.ЭтоМакет тогда
		Возврат
	КонецЕсли;	
	
	НачатьТранзакцию();
	Попытка
		Предмет = Объект.Предмет.ПолучитьОбъект();
		ЗаблокироватьДанныеДляРедактирования(Объект.Предмет);
		
		Если ТипЗнч(Объект.Предмет) = Тип("СправочникСсылка.нсиКлассификаторПродукции")
			ИЛИ ТипЗнч(Объект.Предмет) = Тип("СправочникСсылка.нсиКлассификаторУслуг")
			ИЛИ ТипЗнч(Объект.Предмет) = Тип("СправочникСсылка.нсиУниверсальныйКлассификатор") тогда
			 Предмет.УдалитьХарактеристики();
		КонецЕсли;	

		Предмет.Удалить();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();

		ИнформацияОбОшибке = ИнформацияОбОшибке(); 
		ЗаписьЖурналаРегистрации("Удаление макета", УровеньЖурналаРегистрации.Ошибка, , 
			Объект.Ссылка, "При удалении макета возникла ошибка: " + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура НастройкаВидаМакетаИОригинала()
	
	Если Не ЗначениеЗаполнено(Объект.ПредметОригинал) Тогда
		
		Элементы.Предмет.Видимость = Ложь;
		Элементы.СоздатьМакет.Видимость = Ложь;
		
		Если Не ЗначениеЗаполнено(Объект.ИмяСправочника) Тогда
			Элементы.ПредметОригинал.Доступность = Ложь;
			Возврат;
		Иначе	
			Элементы.ПредметОригинал.Доступность = Истина;
		КонецЕсли;			
		
		Элементы.ГиперссылкаПредмет.Видимость = Истина;
		
		Элементы.ПредметОригинал.Вид = ВидПоляФормы.ПолеВвода;
		Если ТипЗнч(Объект.ИмяСправочника) = Тип("Строка") Тогда 
			Элементы.ПредметОригинал.ДоступныеТипы 			= Новый ОписаниеТипов("СправочникСсылка."+Объект.ИмяСправочника);
			Элементы.ПредметОригинал.ОграничениеТипа 		= Новый ОписаниеТипов("СправочникСсылка."+Объект.ИмяСправочника);
			ПВ = новый Массив;
			ПВ.Добавить(новый ПараметрВыбора("Отбор.ЭтоМакет",Ложь));
			Элементы.ПредметОригинал.ПараметрыВыбора = новый ФиксированныйМассив(ПВ);
		ИначеЕсли ТипЗнч(Объект.ИмяСправочника) = Тип("СправочникСсылка.нсиВидыСправочников") Тогда 
			ИмяСправочникаУХ = нсиУниверсальноеХранилищеПовтИсп.ПолучитьИмяСправочникаХранилища(Объект.ИмяСправочника);
			Элементы.ПредметОригинал.ДоступныеТипы 			= Новый ОписаниеТипов("СправочникСсылка."+ИмяСправочникаУХ);
			Элементы.ПредметОригинал.ОграничениеТипа 		= Новый ОписаниеТипов("СправочникСсылка."+ИмяСправочникаУХ);
			ПВ = новый Массив;
			ПВ.Добавить(новый ПараметрВыбора("Отбор.ЭтоМакет",Ложь));
			ПВ.Добавить(новый ПараметрВыбора("Отбор.Владелец",Объект.ИмяСправочника));
			Элементы.ПредметОригинал.ПараметрыВыбора = новый ФиксированныйМассив(ПВ);
		КонецЕсли;
		Элементы.ПредметОригинал.РазрешитьСоставнойТип 	= Ложь;
				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастройкаГиперссылкиПредмета()
	
	Если Не ЗначениеЗаполнено(Объект.ПредметОригинал) Тогда
		Элементы.ГиперссылкаПредмет.Заголовок = "Не выбран оригинал!";	
		Элементы.ГиперссылкаПредмет.Гиперссылка = Ложь;
	Иначе 
		Элементы.ГиперссылкаПредмет.Гиперссылка = Истина;
		Элементы.ГиперссылкаПредмет.Заголовок = "Начать редактирование элемента";	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
