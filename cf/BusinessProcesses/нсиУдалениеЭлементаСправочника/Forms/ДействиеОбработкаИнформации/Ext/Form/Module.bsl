
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НачальныйПризнакВыполнения = Объект.Выполнена;
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	Если Не ЗначениеЗаполнено(ЗадачаОбъект.БизнесПроцесс) Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	ЗаданиеОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	ЗначениеВРеквизитФормы(ЗаданиеОбъект, "Задание");	
	УстановитьСостояниеЭлементов();
	
	БизнесПроцессыИЗадачиСервер.ФормаЗадачиПриСозданииНаСервере(ЭтаФорма, Объект, 
		Элементы.ГруппаСостояние, Элементы.ДатаИсполнения);
		
	ПредметСтрокой = нсиБизнесПроцессы.ПредметСтрокой(Объект.Предмет);	
	нсиРаботаСФормамиСервер.УстановитьТипПредмета(Объект.Предмет, Элементы.ПризнакЭлемента);
	
	УправлениеВидимостьюИДоступом();
	
	нсиРаботаСФормамиСервер.ВывестиСообщениеПриОткрытииФормыЗадачи(ЭтаФорма);
	
	АвторСтрокой = Строка(Объект.Автор) + " ("+Строка(Задание.ГруппаПользователейБП)+")";

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СохранитьЗадание();
	
	ВыполнитьЗадачу = Ложь;
	Если НЕ (ПараметрыЗаписи.Свойство("ВыполнитьЗадачу", ВыполнитьЗадачу) И ВыполнитьЗадачу) Тогда
		Возврат;
	КонецЕсли;     	
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗадачаОбъект = ТекущийОбъект;
	ЗаданиеОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(ЗаданиеОбъект.Ссылка);
	ЗаданиеОбъект.Выполнено 		= Задание.Выполнено;
	ЗаданиеОбъект.ОтозватьЗаявку 	= Задание.ОтозватьЗаявку;
	ЗаданиеОбъект.ОтклонитьЗаявку 	= Задание.ОтклонитьЗаявку;
	ЗаданиеОбъект.НадоУточнить 		= Задание.НадоУточнить;
	ЗаданиеОбъект.Записать();
	ЗначениеВРеквизитФормы(ЗаданиеОбъект, "Задание");
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Выполнено(Команда)
	
	Если НайтиВспомогательныеПроцессы(Задание.Ссылка) Тогда 
// ITRR Кутья АА Локализация		
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		//	" Для этого задания есть запросы на доп. информацию.
		//	| обработка информации не может быть закончена.");
		Текст1 = НСтр("ru = 'Для этого задания есть запросы на доп. информацию.'; en = 'For this task there are requests for additional information.'");
		Текст2 = НСтр("ru = 'обработка информации не может быть закончена.'; en = 'information processing can''t be completed.'");
		
		СтрокаСообщения = 
			" %Текст1
			| %Текст2";
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		Возврат;
	КонецЕсли;	
	
	Задание.Выполнено 		= Истина;
	Задание.НадоУточнить 	= Ложь;
	Задание.ОтклонитьЗаявку	= Ложь;
	Задание.ОтозватьЗаявку	= Ложь;
	Объект.Обработано 		= Истина;
	Объект.Результат = ПредопределенноеЗначение("Перечисление.нсиРезультатыВыполненияЗадач.Выполнена");
	
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьЗаявку(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.РезультатВыполнения) Тогда 
// ITRR Кутья АА Локализация		                       
//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указана причина отмены.",,"РезультатВыполнения","Объект");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указана причина отмены.'; en = 'The reason for the cancellation is not specified.'"),,"РезультатВыполнения","Объект");
		Возврат;
	КонецЕсли;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОтветаОтклонитьЗаявку",ЭтаФорма);
// ITRR Кутья АА Локализация		                       
	//ПоказатьВопрос(
	//	ОписаниеОповещения,
	//	"Завершить бизнес-процесс без сохранения изменений в справочнике?",
	//	РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет,"Внимание"
	//);
	ПоказатьВопрос(
		ОписаниеОповещения,
		НСтр("ru = 'Завершить бизнес-процесс без сохранения изменений в справочнике?'; en = 'Complete the business process without saving the changes in the directory?'"),
		РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет,НСтр("ru = 'Внимание'; en = 'Attention'")
	);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаОтклонитьЗаявку(Результат,ДП) Экспорт
	Если  Результат = КодВозвратаДиалога.Да Тогда 
		Задание.Выполнено 		= Ложь;
		Задание.НадоУточнить	= Ложь;
		Задание.ОтозватьЗаявку 	= Ложь;
		Задание.ОтклонитьЗаявку	= Истина;
		Объект.Отклонена 		= Истина;
		Объект.Результат = ПредопределенноеЗначение("Перечисление.нсиРезультатыВыполненияЗадач.Отклонена");
		БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТребуетсяУточнение(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.РезультатВыполнения) Тогда 
// ITRR Кутья АА Локализация		                       
//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указано, что необходимо уточнить.",,"РезультатВыполнения","Объект");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не указано, что необходимо уточнить.'; en = 'Not Provided, that should be clarified.'"),,"РезультатВыполнения","Объект");
		Возврат;
	КонецЕсли;	
	
	Задание.Выполнено 		= Ложь;
	Задание.НадоУточнить 	= Истина;
	Задание.ОтозватьЗаявку 	= Ложь;
	Задание.ОтклонитьЗаявку	= Ложь;
	Объект.Результат = ПредопределенноеЗначение("Перечисление.нсиРезультатыВыполненияЗадач.ЗапрошеноУточнение");
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьЗначение(,Объект.Предмет);
	
КонецПроцедуры

&НаКлиенте
Процедура АвторНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Объект.Автор);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеВидимостьюИДоступом()
	ТолькоПросмотр = ТолькоПросмотр ИЛИ Объект.Выполнена ИЛИ Объект.Исполнитель<>ПараметрыСеанса.ТекущийПользователь;
	
	Элементы.Выполнено.Доступность = Не ЭтаФорма.ТолькоПросмотр;
	Элементы.ТребуетсяУточнение.Доступность = Не ЭтаФорма.ТолькоПросмотр;
	Элементы.ОтклонитьЗаявку.Доступность = Не ЭтаФорма.ТолькоПросмотр;
	Элементы.ОписаниеРезультата.ТолькоПросмотр = ЭтаФорма.ТолькоПросмотр;
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеЭлементов()
	
	БизнесПроцессы.Задание.УстановитьСостояниеЭлементовФормыЗадачи(ЭтаФорма);
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция НайтиВспомогательныеПроцессы(БП)

	Возврат нсиБизнесПроцессы.НайтиВспомогательныеПроцессы(БП);
		
КонецФункции	

&НаСервере
Процедура СохранитьЗадание()
	УстановитьПривилегированныйРежим(Истина);
	ЗаблокироватьДанныеДляРедактирования(Задание.Ссылка);
	ЗаданиеОбъект = РеквизитФормыВЗначение("Задание");
	ЗаданиеОбъект.Записать();
	ЗначениеВРеквизитФормы(ЗаданиеОбъект,"Задание");
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

#КонецОбласти
