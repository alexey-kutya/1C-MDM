#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НачальныйПризнакВыполнения = Объект.Выполнена;
	ЗадачаОбъект = РеквизитФормыВЗначение("Объект");
	Если Не ЗначениеЗаполнено(ЗадачаОбъект.БизнесПроцесс) Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	ЗаданиеОбъект = ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
	ЗначениеВРеквизитФормы(ЗаданиеОбъект, "Задание");	
	УстановитьСостояниеЭлементов();
	
	БизнесПроцессыИЗадачиСервер.ФормаЗадачиПриСозданииНаСервере(ЭтаФорма, Объект, 
		Элементы.ГруппаСостояние, Элементы.ДатаИсполнения);
		
		
	ПредметСтрокой = нсиБизнесПроцессы.ПредметСтрокой(Объект.Предмет);	
	нсиРаботаСФормамиСервер.УстановитьТипПредмета(Объект.Предмет, Элементы.ПризнакЭлемента);
	
	УправлениеВидимостьюИДоступом();
	
	нсиРаботаСФормамиСервер.ВывестиСообщениеПриОткрытииФормыЗадачи(ЭтаФорма);
	
	АвторСтрокой = Строка(Объект.Автор) + " ("+Строка(Задание.ГруппаПользователейБП)+")";

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СохранитьЗадание();
	
	ВыполнитьЗадачу = Ложь;
	Если НЕ (ПараметрыЗаписи.Свойство("ВыполнитьЗадачу", ВыполнитьЗадачу) И ВыполнитьЗадачу) Тогда
		Возврат;
	КонецЕсли;   	
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗадачаОбъект = ТекущийОбъект;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выполнено(Команда)
	Задание.Выполнено 		= Истина;
	Задание.НадоУточнить 	= Ложь;
	Задание.ОтозватьЗаявку 	= Ложь;
	Задание.ОтклонитьЗаявку	= Ложь;
	Задание.ЕстьОшибки 		= Ложь;
	Объект.Результат = ПредопределенноеЗначение("Перечисление.нсиРезультатыВыполненияЗадач.Выполнена");
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьЗаявку(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.РезультатВыполнения) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указана причина отмены.",, "РезультатВыполнения", "Объект");
		Возврат;
	КонецЕсли;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОтветаОтозватьЗаявку",ЭтаФорма);
	ПоказатьВопрос(
		ОписаниеОповещения,
		"Завершить бизнес-процесс без сохранения изменений в справочнике?",
		РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет,"Внимание"
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаОтозватьЗаявку(Результат,ДП) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		Задание.Выполнено 		= Ложь;
		Задание.НадоУточнить 	= Ложь;
		Задание.ОтозватьЗаявку 	= Ложь;
		Задание.ОтклонитьЗаявку	= Истина;
		Задание.ЕстьОшибки 		= Ложь;
		Объект.Отклонена 		= Истина;
		Объект.Результат = ПредопределенноеЗначение("Перечисление.нсиРезультатыВыполненияЗадач.Отклонена");
		БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма, Истина);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура НайденыОшибки(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.РезультатВыполнения) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указаны ошибки.",,"РезультатВыполнения","Объект");
		Возврат;
	КонецЕсли;	
	
	Задание.Выполнено 		= Ложь;
	Задание.НадоУточнить 	= Ложь;
	Задание.ОтозватьЗаявку 	= Ложь;
	Задание.ОтклонитьЗаявку	= Ложь;
	Задание.ЕстьОшибки 		= Истина;
	Объект.Результат = ПредопределенноеЗначение("Перечисление.нсиРезультатыВыполненияЗадач.ВозвращенаНаДоработку");
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()	
	БизнесПроцессыИЗадачиКлиент.ЗаписатьИЗакрытьВыполнить(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ПоказатьЗначение(,Объект.Предмет);
	
КонецПроцедуры

&НаКлиенте
Процедура АвторНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Объект.Автор);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеВидимостьюИДоступом()
	пТолькоПросмотр = ТолькоПросмотр ИЛИ Объект.Выполнена ИЛИ Объект.Исполнитель<>ПараметрыСеанса.ТекущийПользователь;
	
	Элементы.Выполнено.Доступность = Не пТолькоПросмотр;
	Элементы.НайденыОшибки.Доступность = Не пТолькоПросмотр;
	Элементы.ОтклонитьЗаявку.Доступность = Не пТолькоПросмотр;
	Элементы.ОписаниеРезультата.ТолькоПросмотр = пТолькоПросмотр;
	
	Элементы.ОписаниеРезультата.ТолькоПросмотр = пТолькоПросмотр;
	Элементы.ЗаписатьИЗакрыть.Доступность = НЕ пТолькоПросмотр;
	Элементы.Записать.Доступность = НЕ пТолькоПросмотр;
	
	Если Элементы.Найти("ЗадачаЗадачаИсполнителяПеренаправить")<>Неопределено Тогда 
		Элементы.ЗадачаЗадачаИсполнителяПеренаправить.Доступность =  НЕ пТолькоПросмотр ИЛИ РольДоступна("ПолныеПрава");
	КонецЕсли;
	
	Если Элементы.Найти("ЗадачаЗадачаИсполнителяПеренаправитьСтаршемуЭксперту")<>Неопределено Тогда 
		Элементы.ЗадачаЗадачаИсполнителяПеренаправитьСтаршемуЭксперту.Доступность =  НЕ пТолькоПросмотр;
	КонецЕсли;
	
	Если Элементы.Найти("ЗадачаЗадачаИсполнителяВзятьВОбработку")<>Неопределено Тогда 
		Элементы.ЗадачаЗадачаИсполнителяВзятьВОбработку.Доступность =  НЕ Объект.Выполнена;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеЭлементов()
	
	БизнесПроцессы.Задание.УстановитьСостояниеЭлементовФормыЗадачи(ЭтаФорма);
	
КонецПроцедуры	

&НаСервере
Процедура СохранитьЗадание()
	УстановитьПривилегированныйРежим(Истина);
	ЗаблокироватьДанныеДляРедактирования(Задание.Ссылка);
	ЗаданиеОбъект = РеквизитФормыВЗначение("Задание");
	ЗаданиеОбъект.Записать();
	ЗначениеВРеквизитФормы(ЗаданиеОбъект,"Задание");
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

#КонецОбласти

