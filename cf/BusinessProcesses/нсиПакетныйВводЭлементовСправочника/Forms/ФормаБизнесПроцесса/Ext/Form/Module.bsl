
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокВыбора = Элементы.ИмяСправочника.СписокВыбора;
	
	нсиБизнесПроцессы.ЗаполнитьСписокДоступныхСправочников(Элементы.ИмяСправочника.СписокВыбора);
	
	НачальныйПризнакСтарта = Объект.Стартован;
	Элементы.ГруппаСостояние.Видимость = Объект.Завершен;
	Если Объект.Завершен Тогда
		ДатаЗавершенияСтрокой = Формат(Объект.ДатаЗавершения, "ДЛФ=DT");
		ТекстСостояния = ?(Объект.Выполнено, 
			НСтр("en='Target complited %1.';ru='Задание выполнено %1.'"), 
			НСтр("en='Task canceled %1.';ru='Задание отменено %1.'"));	
		Элементы.ДекорацияТекст.Заголовок =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСостояния,	
				ДатаЗавершенияСтрокой);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Автор) и Не НачальныйПризнакСтарта Тогда 
		Объект.Автор = ПользователиКлиентСервер.ТекущийПользователь();
    КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Объект.ГруппаПользователейБП = нсиБизнеспроцессы.ПолучитьГруппуПользователейБППоУмолчанию(Объект.Автор);
		Если НЕ ЗначениеЗаполнено(Объект.ГруппаПользователейБП) Тогда 
			Объект.ГруппаПользователейБП = Справочники.нсиГруппыПользователейБП.Основная;
		КонецЕсли;
	КонецЕсли;
	
	УправлениеВидимостьюИДоступом();
	
	ЗаполнитьСписокВыбораЗаголовкаЗадания();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ПараметрыЗаписи.Свойство("Старт") Тогда 
		Возврат;
	КонецЕсли;	
	
	// Проверяем заполнение и в остальных случаях при записи (помимо старта).
	ЗначениеСтарт = Ложь;
	Если ПараметрыЗаписи.Свойство("Старт", ЗначениеСтарт) И НЕ ЗначениеСтарт Тогда
		Отказ = НЕ ТекущийОбъект.ПроверитьЗаполнение();
	КонецЕсли;
	
	Если Объект.Предметы.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указаны макеты.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ТекущийОбъект.Дата = ТекущаяДата();
	ТекущийОбъект.СрокИсполнения = нсиБизнесПроцессы.ОпределитьДатуОкончанияПоКалендарномуГрафику(
		ТекущаяДата(),
		ТекущийОбъект.НастройкаБП.ОбщееВремяВыполнения,
		Справочники.Пользователи.ПустаяСсылка()
	);
КонецПроцедуры
	
&НаКлиенте
Процедура ПриЗакрытии()

	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		
		Для Каждого СтрокаТЧ Из Объект.Предметы Цикл 
			Если ЗначениеЗаполнено(СтрокаТЧ.Предмет) И НЕ Объект.Стартован Тогда 
				УдалитьПредмет(СтрокаТЧ.Предмет);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ИзменилсяСписокБП");
	Оповестить("ЗадачаИзменена", Неопределено);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Удалить(Команда)
	Если НЕ Объект.Стартован Тогда 
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОтветаУдалить",ЭтаФорма);
			ПоказатьВопрос(
				ОписаниеОповещения,
				"Вы уверены, что хотите удалить заявку?",
				РежимДиалогаВопрос.ДаНет,,,"Подтверждение удаления"
			);
			Возврат;
		Иначе
			Модифицированность = Ложь;
			УдалитьПредметы();
			Закрыть();
		КонецЕсли;
	Иначе
		ПоказатьПредупреждение(,"Запущенный бизнес-процесс удалить нельзя!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаУдалить(Результат,ДП) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		УдалитьНаСервере();
		ОповеститьОбИзменении(Тип("БизнесПроцессСсылка.нсиПакетныйВводЭлементовСправочника"));
		Оповестить("ИзменилсяСписокБП");
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Параметры(Команда)
	НаправленияОбработки = новый СписокЗначений;
	НаправленияОбработки.ЗагрузитьЗначения(нсиБизнеспроцессы.ПолучитьГруппыПользователейБП(Объект.Автор));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаЗакрытияФормыПараметровБП",ЭтаФорма);
	ОткрытьФорму(
		"ОбщаяФорма.нсиФормаПараметровБП",
		новый Структура("НаправленияОбработки,НаправлениеОбработки",НаправленияОбработки,Объект.ГруппаПользователейБП),
		ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗакрытияФормыПараметровБП(Результат,ДП) Экспорт
	Если Результат<>Неопределено Тогда 
		Объект.ГруппаПользователейБП = Результат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	МассивНастроек = нсиБизнесПроцессы.ПолучитьНастройкиБП(
		Объект.ИмяСправочника,
		"нсиПакетныйВводЭлементовСправочника",
		Неопределено,
		Объект.Автор
	);
	
	Если МассивНастроек.Количество() = 1 Тогда 
		Объект.НастройкаБП = МассивНастроек[0];
	ИначеЕсли МассивНастроек.Количество() = 0 Тогда 
		ПоказатьПредупреждение(,
			"Отправка в службу НСИ невозможна.
			|Для Вас отсутствует настройка маршрута бизнес-процесса, 
			|соответствующая макету и типу бизнес-процесса
			|Обратитесь к администратору."
		);
		Возврат;
	Иначе
		СЗ = новый СписокЗначений;
		СЗ.ЗагрузитьЗначения(МассивНастроек);
		ОписаниеОповещения = новый ОписаниеОповещения("ОбработкаВыбораНастройкиБП",ЭтаФорма);
		СЗ.ПоказатьВыборЭлемента(ОписаниеОповещения,"Выберите настройку бизнес-процесса");
		Возврат;
	КонецЕсли;
	
	ЗавершитьЗапись();
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбработкаВыбораНастройкиБП(Результат, ДП) Экспорт
	Если Результат = Неопределено Тогда 
		ПоказатьПредупреждение(,
			"Не выбрана настройка маршрута бизнес-процесса.
			|Отправка в службу НСИ не выполнена"
		);
		Возврат;
	Иначе
		Объект.НастройкаБП = Результат.Значение;
	КонецЕсли;
	
	ЗавершитьЗапись();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗапись()
	ЗаполнитьПрохождениеЭтапов();
	
	Отказ = Ложь;
	Для Каждого Строка Из Объект.Предметы Цикл 
		Если НЕ ЗначениеЗаполнено(Строка.Предмет) Тогда 
			ТекстСообщения = "Строка "+Строка.НомерСтроки+": не заполнены реквизиты макета!";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ОписаниеДублей = "";
	Если ЕстьВозможныеДубли(ОписаниеДублей) Тогда 
		ОписаниеОповещения = новый ОписаниеОповещения("ОбработкаОтветаОбнаруженыДубли",ЭтаФорма);
		ПоказатьВопрос(
			ОписаниеОповещения,
			"Обнаружены возможные дубли :
			|"+ОписаниеДублей+"
			|Продолжить?", РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет,"Внимание"
		);
		Возврат;
	КонецЕсли;
	
	Если ЗаписатьВыполнить() Тогда
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура  ОбработкаОтветаОбнаруженыДубли(Результат,ДП) Экспорт
	Если  Результат = КодВозвратаДиалога.Да Тогда 
		
		Если ЗаписатьВыполнить() Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяСправочникаПриИзменении(Элемент)
	ИмяСправочникаПриИзмененииНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура ЗаголовокЗаданияПриИзменении(Элемент)
	
	Объект.ОписаниеЗадания = Объект.Наименование;
		
КонецПроцедуры

&НаКлиенте
Процедура ПредметыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	Если Не ЗначениеЗаполнено(Объект.ИмяСправочника) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено имя обрабатываемого справочника.");
		Возврат;
	КонецЕсли;	
	
	ОшибкаПриСозданииМакета = Ложь;
	Если Копирование Тогда 
		СоздатьВременныйЭлемент(ОшибкаПриСозданииМакета,Элементы.Предметы.ТекущиеДанные.Предмет);
	Иначе
		СоздатьВременныйЭлемент(ОшибкаПриСозданииМакета);
	КонецЕсли;
	
	Если ОшибкаПриСозданииМакета Тогда 
		ПоказатьПредупреждение(,"Не удалось создать макет!");
		Возврат;
	КонецЕсли;
	
	Макет = Объект.Предметы[Объект.Предметы.Количество()-1].Предмет;
	
	ИмяФормыПредмета = нсиБизнесПроцессыРаботаСоСправочниками.ПолучитьИмяФормыОбъекта(Объект.ИмяСправочника, Макет);
	ПараметрыФормы = Новый Структура("Ключ,ВременныйЭлемент", Макет, Истина);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредметыПередНачаломДобавленияЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(ИмяФормыПредмета, ПараметрыФормы, Элемент,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыПередНачаломДобавленияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Элементы.ИмяСправочника.ТолькоПросмотр = Объект.Предметы.Количество()<>0;
	
	Если Объект.Предметы.Количество()<>0 Тогда 
		Элементы.Предметы.ТекущаяСтрока = Объект.Предметы[Объект.Предметы.Количество()-1].ПолучитьИдентификатор();
	КонецЕсли;
	
	ЗаполнитьСписокВыбораЗаголовкаЗадания();
КонецПроцедуры	

&НаКлиенте
Процедура ПредметыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	ОписаниеОповещения = новый ОписаниеОповещения("ОбработкаОтветаУдалитьПредмет",ЭтаФорма);
	ПоказатьВопрос(
		ОписаниеОповещения,
		"Удалить макет?",
		РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет,"Внимание"
	);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаУдалитьПредмет(Результат,ДП) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда 
		УдалитьПредмет(Элементы.Предметы.ТекущиеДанные.Предмет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредметыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не Поле.Имя = "ПредметыПредмет" Тогда 
		Возврат;
	КонецЕсли;	
	
	ИмяФормыПредмета = нсиБизнесПроцессыРаботаСоСправочниками.ПолучитьИмяФормыОбъекта(Объект.ИмяСправочника, Элемент.ТекущиеДанные.Предмет);
	ПараметрыФормы = Новый Структура("Ключ,ВременныйЭлемент", Элемент.ТекущиеДанные.Предмет, Истина);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредметыВыборЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(ИмяФормыПредмета, ПараметрыФормы, Элемент,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ПредметыВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ЗаполнитьСписокВыбораЗаголовкаЗадания();	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыПриИзменении(Элемент)
	Элементы.ИмяСправочника.ТолькоПросмотр = Объект.Предметы.Количество()<>0;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИмяСправочникаПриИзмененииНаСервере()
	УдалитьРазнотипныйЭлемент();	
	УправлениеВидимостьюИДоступом();
	ЗаполнитьСписокВыбораЗаголовкаЗадания();
КонецПроцедуры	

&НаСервере
Функция ЕстьВозможныеДубли(ОписаниеДублей)
	ОписаниеДублей = "";
	Результат = Ложь;
	ТЗ = Новый ТаблицаЗначений;
	Если Объект.ИмяСправочника = "нсиКонтрагенты" Тогда 
		ТЗ.Колонки.Добавить("ИНН");
		ТЗ.Колонки.Добавить("КПП");
	ИначеЕсли Объект.ИмяСправочника = "нсиБанковскиеСчета" Тогда 
		ТЗ.Колонки.Добавить("Контрагент");
		ТЗ.Колонки.Добавить("НомерСчета");
		ТЗ.Колонки.Добавить("Банк");
	ИначеЕсли Объект.ИмяСправочника = "нсиМТР" Тогда 
		ТЗ.Колонки.Добавить("Наименование");
		ТЗ.Колонки.Добавить("Класс");
	ИначеЕсли Объект.ИмяСправочника = "нсиДоговорыСПоставщиками" ИЛИ Объект.ИмяСправочника = "нсиДоговорыСПокупателями" Тогда 
		ТЗ.Колонки.Добавить("НомерДоговора");
		ТЗ.Колонки.Добавить("ДатаДоговора");
		ТЗ.Колонки.Добавить("Контрагент");
		ТЗ.Колонки.Добавить("Организация");
	ИначеЕсли Объект.ИмяСправочника = "нсиУслуги" Тогда 
		ТЗ.Колонки.Добавить("Наименование");
		ТЗ.Колонки.Добавить("ЕдиницаИзмерения");
	Иначе
		ТЗ.Колонки.Добавить("Наименование");
	КонецЕсли;
	
	ПоляСвертки = "";
	СтруктураОтбора = Новый Структура;
	Для Каждого Колонка ИЗ ТЗ.Колонки Цикл 
		ПоляСвертки = ПоляСвертки + ?(ПустаяСтрока(ПоляСвертки),"",",")+Колонка.Имя;
		СтруктураОтбора.Вставить(Колонка.Имя);
	КонецЦикла;
	
	ТЗ.Колонки.Добавить("_Счетчик");
	ТЗ.Колонки.Добавить("_НомерСтроки");
	
	Для Каждого Строка Из Объект.Предметы Цикл 
		НС = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НС, Строка.Предмет);
		НС._НомерСтроки = Строка.НомерСтроки;
		НС._Счетчик = 1;
	КонецЦикла;
	
	
	ТЗ_Свернутая = ТЗ.Скопировать();
	ТЗ_Свернутая.Свернуть(ПоляСвертки,"_Счетчик");
	
	Для Каждого Строка ИЗ ТЗ_Свернутая Цикл 
		Если Строка._Счетчик > 1 Тогда 
			Результат = Истина;
			ЗаполнитьЗначенияСвойств(СтруктураОтбора,Строка);
			СтрокиДублей = ТЗ.НайтиСтроки(СтруктураОтбора);
			ОписаниеГруппыДублей = "";
			Для Каждого Стр Из СтрокиДублей Цикл 
				ОписаниеГруппыДублей = ОписаниеГруппыДублей + ?(ПустаяСтрока(ОписаниеГруппыДублей),"",", ")+Стр._НомерСтроки;
			КонецЦикла;
			ОписаниеДублей = ОписаниеДублей + ?(ПустаяСтрока(ОписаниеДублей),"",Символы.ПС)
				+ "возможные дубли в строках " + ОписаниеГруппыДублей + ";";
		КонецЕсли;
	КонецЦикла;
	
	
	Возврат Результат;
	

КонецФункции

&НаКлиенте
Функция ЗаписатьВыполнить()
	
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(
		"Регистрация заявки на пакетный ввод элементов справочника """+Строка(Объект.ИмяСправочника)+""""
	);
	
	ОчиститьСообщения();
	ПараметрСтарт = НЕ НачальныйПризнакСтарта И НЕ Объект.Стартован;
	УспешноЗаписано = ЗаписатьИСтартовать(ПараметрСтарт);
	
	Если УспешноЗаписано И ПараметрСтарт Тогда
		
		НачальныйПризнакСтарта = Истина;
		ОтобразитьИзменениеДанных(Объект.Ссылка, ВидИзмененияДанных.Добавление);
		Оповестить("ЗадачаИзменена", Объект.Ссылка);
		
	КонецЕсли;
	Возврат УспешноЗаписано;
	
КонецФункции

&НаСервере
Функция  ЗаписатьИСтартовать(ПараметрСтарт)
	УстановитьПривилегированныйРежим(Истина);
	Возврат Записать(Новый Структура("Старт", ПараметрСтарт));
	УстановитьПривилегированныйРежим(Ложь);
КонецФункции

&НаСервере
Процедура УдалитьНаСервере()
	УстановитьПривилегированныйРежим(Истина);
	НачатьТранзакцию();
	Попытка
		УдалитьПредметы();
		Объект.Ссылка.ПолучитьОбъект().Удалить();
		ЗафиксироватьТранзакцию();
	Исключение
		ТекстСообщения = "Не удалось удалить! "+ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		ОтменитьТранзакцию();
	КонецПопытки;
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УправлениеВидимостьюИДоступом()
	пТолькоПросмотр = ТолькоПросмотр ИЛИ Объект.Стартован;
	Элементы.ЗаписатьИЗакрыть.Доступность = НЕ пТолькоПросмотр И НЕ Объект.Стартован;
	Элементы.Удалить.Доступность = НЕ пТолькоПросмотр И НЕ Объект.Стартован;
	Элементы.Записать.Доступность = НЕ пТолькоПросмотр И НЕ Объект.Стартован;
	Элементы.ЗаголовокЗадания.ТолькоПросмотр = пТолькоПросмотр;
	Элементы.ИмяСправочника.ТолькоПросмотр = пТолькоПросмотр;
	Элементы.ТекстЗадания.ТолькоПросмотр = пТолькоПросмотр;
	Элементы.Предметы.ТолькоПросмотр = ТолькоПросмотр ИЛИ Объект.Завершен;
	
	Если ЗначениеЗаполнено(Объект.ИмяСправочника) тогда
		Элементы.СоздатьГруппу.Видимость = нсиБизнесПроцессыРаботаСоСправочниками.ЭтоИерархияГруппИЭлементов(Объект.ИмяСправочника);
	КонецЕсли;
	
	Элементы.НастройкаБП.Видимость = 
		Объект.Стартован
		И (РольДоступна("ПолныеПрава") ИЛИ РольДоступна("нсиСтаршийЭксперт"));

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПрохождениеЭтапов()
	БПОбъект = РеквизитФормыВЗначение("Объект");
	БПОбъект.ЗаполнитьПрохождениеЭтапов();
	ЗначениеВРеквизитФормы(БПОбъект,"Объект");
КонецПроцедуры

&НаСервере
Процедура УдалитьПредметы()
	
	Если НЕ Объект.Стартован Тогда
		Для Каждого СтрокаТЧ Из Объект.Предметы Цикл 
			ПредметОбъект = СтрокаТЧ.Предмет.ПолучитьОбъект();
			Если ПредметОбъект <> Неопределено Тогда 
				ПредметОбъект.Удалить();
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьПредмет(Ссылка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда 
		Возврат;
	КонецЕсли;	

	Если Объект.Ссылка.Стартован Тогда 
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		Предмет = Ссылка.ПолучитьОбъект();
		ЗаблокироватьДанныеДляРедактирования(Ссылка);
		Предмет.Удалить();
		
		Строки = Объект.Предметы.НайтиСтроки(новый Структура("Предмет",Ссылка));
		Для Каждого Строка ИЗ Строки Цикл 
			Объект.Предметы.Удалить(Строка);
		КонецЦикла;
		
		БПОбъект = РеквизитФормыВЗначение("Объект");
		Если НЕ ЗначениеЗаполнено(БПОбъект.Номер) Тогда 
			БПОбъект.УстановитьНовыйНомер("");
		КонецЕсли;
		БПОбъект.ОбменДанными.Загрузка = Истина;
		БПОбъект.Записать();
		ЗначениеВРеквизитФормы(БПОбъект,"Объект");
		
		ЗафиксироватьТранзакцию();
	Исключение
		ТекстСообщения = "Не удалось удалить макет: "+ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		ОтменитьТранзакцию();
	КонецПопытки;
	
	ЗаполнитьСписокВыбораЗаголовкаЗадания();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры	

&НаСервере
Процедура СоздатьВременныйЭлемент(Отказ,ДанныеЗаполнения = Неопределено)
	
	БПОбъект = РеквизитФормыВЗначение("Объект");
	БПОбъект.СоздатьВременныйЭлемент(Отказ,ДанныеЗаполнения);
	ЗначениеВРеквизитФормы(БПОбъект,"Объект");
	
КонецПроцедуры

&НаСервере
Процедура УдалитьРазнотипныйЭлемент()
	
	ИндексСтроки = Объект.Предметы.Количество()-1;
	Пока ИндексСтроки >= 0 Цикл
		Строка = Объект.Предметы[ИндексСтроки];
		
		Если ЗначениеЗаполнено(Объект.ИмяСправочника) Тогда 
			Если Объект.Предмет <> Неопределено Тогда 
				Если ТипЗнч(Объект.ИмяСправочника) = Тип("Строка") Тогда 
					Если ТипЗнч(Строка.Предмет) <> Тип("СправочникСсылка."+Объект.ИмяСправочника) Тогда 
						УдалитьПредмет(Строка.Предмет);
					КонецЕсли;
				ИначеЕсли ТипЗнч(Объект.ИмяСправочника) = Тип("СправочникСсылка.нсиВидыСправочников") Тогда 
					Если (ТипЗнч(Объект.Предмет) <> Тип("СправочникСсылка.нсиУниверсальныйФункциональныйСправочник")
						И ТипЗнч(Объект.Предмет) <> Тип("СправочникСсылка.нсиУниверсальныйКлассификатор"))
						ИЛИ ТипЗнч(Объект.Предмет.Владелец) <> Объект.ИмяСправочника Тогда 
						УдалитьПредмет(Объект.Предмет);
						Строка.Предмет = Неопределено;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если Строка.Предмет <> Неопределено Тогда 
				УдалитьПредмет(Строка.Предмет);
			КонецЕсли;
		КонецЕсли;
		
		ИндексСтроки = ИндексСтроки - 1;
		
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Функция СформироватьЗаголовокЗадания()
	Наименование = "";
	Если ЗначениеЗаполнено(Объект.ИмяСправочника) Тогда
		Если ТипЗнч(Объект.ИмяСправочника) = Тип("Строка") Тогда 
			Наименование 	= "Создать "+Строка(Объект.Предметы.Количество())+" позиций справочника """+Метаданные.Справочники[Объект.ИмяСправочника].Синоним+"""";
		ИначеЕсли ТипЗнч(Объект.ИмяСправочника) = Тип("СправочникСсылка.нсиВидыСправочников") Тогда 
			Наименование 	= "Создать "+Строка(Объект.Предметы.Количество())+" позиций справочника """+Объект.ИмяСправочника+"""";
		КонецЕсли;
		Если Объект.Предметы.Количество()>0 Тогда 
			Наименование = Наименование + ":" + Строка(Объект.Предметы[0].Предмет);
		КонецЕсли;
		Если Объект.Предметы.Количество()>1 Тогда 
			Наименование = Наименование + ", ...";
		КонецЕсли;
	КонецЕсли;
	Возврат Наименование;
КонецФункции

Процедура ЗаполнитьСписокВыбораЗаголовкаЗадания()
	Элементы.ЗаголовокЗадания.СписокВыбора.Очистить();
	Элементы.ЗаголовокЗадания.СписокВыбора.Добавить(СформироватьЗаголовокЗадания());
КонецПроцедуры	

#КонецОбласти

