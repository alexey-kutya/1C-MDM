Процедура ВыполнитьРегистрациюДляУПП(Ссылка) экспорт

	ПринадлежитУПП = Метаданные.ПланыОбмена.Обмен_МДМ_УПП.Состав.Содержит(Ссылка.Метаданные());
	
	Если НЕ ПринадлежитУПП Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаУзловОбмена = ПолучитьУзлыОбменаУПП(Ссылка);
	
	Если ТаблицаУзловОбмена.Количество() Тогда
		
		УзлыОбменаРегистрация = ПолучитьМассивУзлов(ТаблицаУзловОбмена, Истина);
		
		Если УзлыОбменаРегистрация.Количество() Тогда
			
			ПолнаяСинхронизация = ПолнаяСинхронизация(Ссылка);
			
			Если ПолнаяСинхронизация Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбменаРегистрация, Ссылка);
			Иначе
				ПланыОбмена.УдалитьРегистрациюИзменений(УзлыОбменаРегистрация, Ссылка);
			КонецЕсли; 
			
			РегистрацияСправочниковВладельца(Ссылка, УзлыОбменаРегистрация, ПолнаяСинхронизация);
			
			РегистрацияКонтактнойИнформации(Ссылка, УзлыОбменаРегистрация, ПолнаяСинхронизация);			
			
		КонецЕсли; 
		
		УзлыОбменаУдаление = ПолучитьМассивУзлов(ТаблицаУзловОбмена, Ложь);
		
		Если УзлыОбменаУдаление.Количество() Тогда
			
			ПланыОбмена.УдалитьРегистрациюИзменений(УзлыОбменаУдаление, Ссылка);
			
			РегистрацияСправочниковВладельца(Ссылка, УзлыОбменаУдаление,, Истина);
			
			РегистрацияКонтактнойИнформации(Ссылка, УзлыОбменаУдаление);
			
		КонецЕсли; 
		
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьМассивУзлов(ТаблицаУзловОбмена, Обмен)

	Отбор = Новый Структура;
	Отбор.Вставить("Обмен",Обмен);
	СтрокиДляРегистрации = ТаблицаУзловОбмена.НайтиСтроки(Отбор);
	МассивУзлов = Новый Массив;
	Для каждого СтрокаДляРегистрации Из СтрокиДляРегистрации Цикл
		МассивУзлов.Добавить(СтрокаДляРегистрации.Узел);
	КонецЦикла;
	
	Возврат МассивУзлов;

КонецФункции // ПолучитьМассивУзлов()

Функция ПолнаяСинхронизация(Ссылка)
	
	СсылкаДляОбработки = Ссылка;
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ЕдиницыИзмерения") Тогда
		СсылкаДляОбработки = Ссылка.Владелец;
	КонецЕсли;
	
	ЭлементСостава = Метаданные.ОбщиеРеквизиты.ПолнаяСинхронизацияMDM.Состав.Найти(СсылкаДляОбработки.Метаданные());
	
	Использование = ЭлементСостава.Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать;
	
	Возврат НЕ Использование
			ИЛИ (Использование И СсылкаДляОбработки.ПолнаяСинхронизацияMDM);
		
КонецФункции // СсылкаПолнаяСинхронизация()
 
Функция ПреобразоватьСсылкуПоВладельцу(Ссылка) Экспорт 

	СсылкаКопия = Ссылка;
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ЕдиницыИзмерения")
		ИЛИ ТипЗнч(Ссылка) = Тип("СправочникСсылка.алкПунктыРазгрузки") 
		ИЛИ ТипЗнч(Ссылка) = Тип("СправочникСсылка.алкЛицензии") 
		ИЛИ ТипЗнч(Ссылка) = Тип("СправочникСсылка.нсиБанковскиеСчета")
		Тогда
		СсылкаКопия=Ссылка.Владелец;    
	ИначеЕсли ТипЗнч(Ссылка) = Тип("РегистрСведенийНаборЗаписей.КонтактнаяИнформация") Тогда 
		СсылкаКопия=ПреобразоватьСсылкуПоВладельцу(Ссылка.Отбор.Объект.Значение);        
	КонецЕсли;
	
	Возврат СсылкаКопия; 

КонецФункции // ПреобразоватьСсылкуПоВладельцу()

Функция ПолучитьУзлыОбменаУПП(ОбъектОбмена) Экспорт 

	СсылкаВладелец = ПреобразоватьСсылкуПоВладельцу(ОбъектОбмена);
	
	Запрос=Новый Запрос;
	Если ТипЗнч(СсылкаВладелец) = Тип("СправочникСсылка.ДоговорыКонтрагентов")
		ИЛИ ТипЗнч(СсылкаВладелец) = Тип("СправочникСсылка.СпецификацииНоменклатуры") Тогда
		
		Запрос.Текст="ВЫБРАТЬ
		             |	УчастникиОбмена.УзелОбмена,
		             |	УчастникиОбмена.Обмен
		             |ПОМЕСТИТЬ УчастникиОбменаВладелец
		             |ИЗ
		             |	РегистрСведений.УчастникиОбмена КАК УчастникиОбмена
		             |ГДЕ
		             |	УчастникиОбмена.ОбъектОбмена = &ОбъектОбменаВладелец
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	УчастникиОбмена.УзелОбмена,
		             |	УчастникиОбмена.Обмен
		             |ПОМЕСТИТЬ УчастникиОбмена
		             |ИЗ
		             |	РегистрСведений.УчастникиОбмена КАК УчастникиОбмена
		             |ГДЕ
		             |	УчастникиОбмена.ОбъектОбмена = &ОбъектОбмена
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	ЕСТЬNULL(УчастникиОбмена.Обмен, ЛОЖЬ)
		             |		И УчастникиОбменаВладелец.Обмен КАК Обмен,
		             |	УчастникиОбменаВладелец.УзелОбмена КАК Узел
		             |ИЗ
		             |	УчастникиОбменаВладелец КАК УчастникиОбменаВладелец
		             |		ЛЕВОЕ СОЕДИНЕНИЕ УчастникиОбмена КАК УчастникиОбмена
		             |		ПО УчастникиОбменаВладелец.УзелОбмена = УчастникиОбмена.УзелОбмена";
		
		Если ТипЗнч(СсылкаВладелец) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			ИмяРеквизита = "Владелец";
		ИначеЕсли ТипЗнч(СсылкаВладелец) = Тип("СправочникСсылка.СпецификацииНоменклатуры") Тогда
			ИмяРеквизита = "Номенклатура";
		КонецЕсли; 
		Запрос.УстановитьПараметр("ОбъектОбменаВладелец", СсылкаВладелец[ИмяРеквизита]);
	Иначе
		
		Запрос.Текст="ВЫБРАТЬ
		             |	УчастникиОбмена.УзелОбмена КАК Узел,
		             |	УчастникиОбмена.Обмен
		             |ИЗ
		             |	РегистрСведений.УчастникиОбмена КАК УчастникиОбмена
		             |ГДЕ
		             |	УчастникиОбмена.ОбъектОбмена = &ОбъектОбмена"
		
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("ОбъектОбмена", СсылкаВладелец);
	Результат = Запрос.Выполнить().Выгрузить();
	
	УдалитьУзелSAP(Результат, ОбъектОбмена);
	
	Возврат Результат;

КонецФункции // ПолучитьУзлыОбмена()

Процедура УдалитьУзелSAP(ТаблицаУзлов, Ссылка) Экспорт 
	
	ЕдиницыИзмерения=Тип("СправочникСсылка.ЕдиницыИзмерения");
	Договоры=Тип("СправочникСсылка.ДоговорыКонтрагентов");
	Спецификации=Тип("СправочникСсылка.СпецификацииНоменклатуры");
	КонтактнаяИнформация = Тип("РегистрСведенийНаборЗаписей.КонтактнаяИнформация");
	
	Если ТипЗнч(Ссылка)=ЕдиницыИзмерения 
		ИЛИ ТипЗнч(Ссылка)=Договоры 
		ИЛИ ТипЗнч(Ссылка)=КонтактнаяИнформация 
		ИЛИ ТипЗнч(Ссылка)=Спецификации Тогда
		
		Если ТаблицаУзлов.Количество() Тогда
			УзелSAP = УзелSAP();
			Если ЗначениеЗаполнено(УзелSAP) Тогда
				НайденнаяСтрока = ТаблицаУзлов.Найти(УзелSAP,"Узел");
				Если НЕ НайденнаяСтрока = Неопределено Тогда
					ТаблицаУзлов.Удалить(НайденнаяСтрока);
				КонецЕсли;
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 

КонецПроцедуры

Функция УзелSAP() Экспорт 

	Возврат ПланыОбмена.Обмен_МДМ_УПП.НайтиПоРеквизиту("SAP", Истина);

КонецФункции // УзелSAP()
 
Процедура ВыполнитьРегистрациюКонтактнойИнформации(НаборЗаписейКИ, УзлыОбмена, Регистрация) Экспорт 

	ИзмеренияТЗ = НаборЗаписейКИ.Выгрузить(,"Объект, Вид, Тип");
	ИзмеренияТЗ.Свернуть("Объект, Вид, Тип");
	
	Для каждого СтрокаИзмерений Из ИзмеренияТЗ Цикл
		
		Для каждого КолонкаТЗ Из ИзмеренияТЗ.Колонки Цикл
			НаборЗаписейКИ.Отбор[КолонкаТЗ.Имя].Установить(СтрокаИзмерений[КолонкаТЗ.Имя]);
		КонецЦикла; 
		
		Если Регистрация Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, НаборЗаписейКИ);
		Иначе
			ПланыОбмена.УдалитьРегистрациюИзменений(УзлыОбмена, НаборЗаписейКИ);
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры // ВыполнитьРегистрациюКонтактнойИнформации(УзелОбмена, ОбъектОбмена, Обмен)()

Процедура РегистрацияКонтактнойИнформации(ОбъектОбмена, УзлыОбмена = Неопределено, Регистрация = Ложь) Экспорт 

	Если ТипЗнч(ОбъектОбмена) = Тип("СправочникСсылка.нсиКонтрагенты")
		ИЛИ ТипЗнч(ОбъектОбмена) = Тип("СправочникСсылка.Организации") 
		ИЛИ ТипЗнч(ОбъектОбмена) = Тип("СправочникСсылка.алкПунктыРазгрузки") 
		Тогда	
		
		НаборЗаписейКИ = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
		НаборЗаписейКИ.Отбор.Объект.Установить(ОбъектОбмена);
		НаборЗаписейКИ.Прочитать();
		
		ВыполнитьРегистрациюКонтактнойИнформации(НаборЗаписейКИ, УзлыОбмена, Регистрация);
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьРегистрациюКонтактнойИнформации(УзелОбмена, ОбъектОбмена, Обмен)()

Процедура РегистрацияСправочниковВладельца(Владелец, УзлыОбмена = Неопределено, Регистрация = Ложь, УдалениеИзУзловОбмена = Ложь) Экспорт 

	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.нсиМТР") Тогда
		
		ВыполнитьРегистрациюПодчиненногоСправочника(Владелец, УзлыОбмена, Регистрация, "ЕдиницыИзмерения");
		
	ИначеЕсли ТипЗнч(Владелец) = Тип("СправочникСсылка.нсиКонтрагенты")
		ИЛИ ТипЗнч(Владелец) = Тип("СправочникСсылка.Организации") 
		Тогда	
		
		ВыполнитьРегистрациюПодчиненногоСправочника(Владелец, УзлыОбмена, Регистрация, "нсиБанковскиеСчета", УдалениеИзУзловОбмена);
		
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьРегистрациюПодчиненногоСправочника(Владелец, УзлыОбмена, Регистрация, ИмяСправочника, УдалениеИзУзловОбмена = Ложь)

	Выборка = Справочники[ИмяСправочника].Выбрать(,Владелец);
	Пока Выборка.Следующий() Цикл
			
		ПолнаяСинхронизация = Регистрация;
		Если ТипЗнч(Выборка.Ссылка) = Тип("СправочникСсылка.нсиБанковскиеСчета") Тогда
			ПолнаяСинхронизация = ПолнаяСинхронизация(Выборка.Ссылка);
		КонецЕсли;
		
		Если ПолнаяСинхронизация 
			И НЕ УдалениеИзУзловОбмена Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(УзлыОбмена, Выборка.Ссылка);
		Иначе
			ПланыОбмена.УдалитьРегистрациюИзменений(УзлыОбмена, Выборка.Ссылка);
		КонецЕсли;
			
	КонецЦикла; 

КонецПроцедуры
 
