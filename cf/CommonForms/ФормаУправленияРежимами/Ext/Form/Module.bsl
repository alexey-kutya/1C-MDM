
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиЗагрузка = Константы.ОбменДаннымиЗагрузка.Получить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Обмен_МДМ_УПП.Организация,
		|	Обмен_МДМ_УПП.Организация.BaseID КАК BaseID
		|ИЗ
		|	ПланОбмена.Обмен_МДМ_УПП КАК Обмен_МДМ_УПП
		|ГДЕ
		|	Обмен_МДМ_УПП.SAP = ЛОЖЬ
		|	И Обмен_МДМ_УПП.ЭтотУзел = ЛОЖЬ
		|	И Обмен_МДМ_УПП.ПометкаУдаления = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	Обмен_МДМ_УПП.Организация";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	МассивБаз = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("BaseID");
	
	ТаблицаПараметровПодключения = MDMСервер.ПолучитьПараметрыПодключенияWS(МассивБаз);
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрока = ТаблицаКонстантБлокировок.Добавить();
		НоваяСтрока.Организация = ВыборкаДетальныеЗаписи.Организация;
		НоваяСтрока.BaseID = ВыборкаДетальныеЗаписи.BaseID;
		
		ТекстОшибки = "";
		Ответ = ПолучитьКонстантуПоОрганизации(ТаблицаПараметровПодключения.Найти(ВыборкаДетальныеЗаписи.BaseID, "BaseID"), ТекстОшибки);
		
		Если ТекстОшибки = "" Тогда
			НоваяСтрока.Блокировка = Ответ;
			НоваяСтрока.Состояние = "OK";
		Иначе
			НоваяСтрока.Состояние = ТекстОшибки;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКонстантуПоОрганизации(СтрокаПодключения, ТекстОшибки)

	Ответ = Ложь;
	
	Если СтрокаПодключения = Неопределено Тогда
		ТекстОшибки = "Не задана строка подключения.";
		Возврат Ответ;
	КонецЕсли;
	
	Прокси = ПодготовитьВызовВебСервиса(СтрокаПодключения, ТекстОшибки);
	
	Если НЕ ТекстОшибки = "" Тогда
		Возврат Ответ;
	КонецЕсли;
	
	Попытка
		Ответ = Прокси.ПолучитьЗначениеКонстанты("БлокировкаДанныхMDM", ТекстОшибки);
	Исключение
		ЗаписатьСведенияВЖурналОбмена(СтрокаПодключения.BaseID,,,,Истина, "Ошибка выполнения веб-сервиса: "+ОписаниеОшибки());
		ТекстОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Возврат Ответ;

КонецФункции // ПолучитьКонстантуПоОрганизации()

&НаСервереБезКонтекста
Функция УстановитьКонстантуПоОрганизации(СтрокаПодключения, Значение)

	ТекстОшибки = "";
	
	Если СтрокаПодключения = Неопределено Тогда
		ТекстОшибки = "Не задана строка подключения.";
		Возврат ТекстОшибки;
	КонецЕсли;
	
	Прокси = ПодготовитьВызовВебСервиса(СтрокаПодключения, ТекстОшибки);
	
	Если НЕ ТекстОшибки = "" Тогда
		Возврат ТекстОшибки;
	КонецЕсли;
	
	Попытка
		ТекстОшибки = Прокси.УстановитьЗначениеКонстанты("БлокировкаДанныхMDM", Значение);
	Исключение
		ЗаписатьСведенияВЖурналОбмена(СтрокаПодключения.BaseID,,,,Истина, "Ошибка выполнения веб-сервиса: "+ОписаниеОшибки());
		ТекстОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Возврат ТекстОшибки;

КонецФункции // ПолучитьКонстантуПоОрганизации()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервереБезКонтекста
Функция ПодготовитьВызовВебСервиса(СтрокаПодключения, ТекстОшибки)

	Прокси = Неопределено;
	
	ПараметрыWS = Новый Структура("WSСсылка, WSПользователь, WSПароль");
	ПараметрыWS.WSСсылка = СтрокаПодключения.LocationWSDL;
	ПараметрыWS.WSПользователь = СтрокаПодключения.User;
	ПараметрыWS.WSПароль = СтрокаПодключения.Password;
	
	Попытка
		Определения = Новый WSОпределения(ПараметрыWS.WSСсылка, ПараметрыWS.WSПользователь, ПараметрыWS.WSПароль);
	Исключение
		ЗаписатьСведенияВЖурналОбмена(ПараметрыWS.WSСсылка,,,,Истина, "Ошибка при создании WSОпределения: "+ОписаниеОшибки());
		ТекстОшибки = "Ошибка при создании WSОпределения: "+ОписаниеОшибки();
		Возврат Прокси;
	КонецПопытки; 
	
	Попытка
		Прокси = Новый WSПрокси(Определения, "http://www.rusalco.com/xtdo", "WebRusAlco", "WebRusAlcoSoap");
		Прокси.Пользователь = ПараметрыWS.WSПользователь;
		Прокси.Пароль = ПараметрыWS.WSПароль;
	Исключение
		ЗаписатьСведенияВЖурналОбмена(ПараметрыWS.WSСсылка,,,,Истина, "Ошибка при создании WSПрокси: "+ОписаниеОшибки());
		ТекстОшибки = "Ошибка при создании WSПрокси: "+ОписаниеОшибки();
		Возврат Прокси;
	КонецПопытки;
	
	Возврат Прокси;

КонецФункции // ПодготовитьВызовВебСервиса()
  
&НаСервере
Процедура УстановитьСнятьБлокировкуДляВсехНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьБлокировкуДляВсех(Команда)
	УстановитьСнятьБлокировкуДляВсехНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТаблицаКонстантБлокировокБлокировкаПриИзмененииНаСервере()
	
	
	ТекущиеДанные = ТаблицаКонстантБлокировок[Элементы.ТаблицаКонстантБлокировок.ТекущаяСтрока];
	
	МассивБаз = Новый Массив();
	МассивБаз.Добавить(ТекущиеДанные.BaseID);
	
	ТаблицаПараметровПодключения = MDMСервер.ПолучитьПараметрыПодключенияWS(МассивБаз);
	
	СтрокаПодключения = ТаблицаПараметровПодключения.Найти(ТекущиеДанные.BaseID, "BaseID");

	ТекстОшибки = УстановитьКонстантуПоОрганизации(СтрокаПодключения, ТекущиеДанные.Блокировка);
	
	Если ТекстОшибки = "" Тогда
		ТекущиеДанные.Состояние = "OK";
	Иначе
		ТекущиеДанные.Блокировка = НЕ ТекущиеДанные.Блокировка;
		ТекущиеДанные.Состояние = ТекстОшибки;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонстантБлокировокБлокировкаПриИзменении(Элемент)
	ТаблицаКонстантБлокировокБлокировкаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьСведенияВЖурналОбмена(УзелОбмена, ВыгруженоОбъектов = 0, ЗагруженоОбъектов = 0, ПакетДанных = Неопределено, ОшибкаОбмена = Ложь, ОписаниеОшибкиОбмена = "")

	ЖурналОбменаMDM = РегистрыСведений.ЖурналОбменаMDM.СоздатьМенеджерЗаписи();
	ЖурналОбменаMDM.Период = ТекущаяДата();
	ЖурналОбменаMDM.УзелОбмена = УзелОбмена;
	ЖурналОбменаMDM.ВыгруженоОбъектов = ВыгруженоОбъектов;
	ЖурналОбменаMDM.ЗагруженоОбъектов = ЗагруженоОбъектов;
	ЖурналОбменаMDM.ПакетДанных = ПакетДанных;
	ЖурналОбменаMDM.ОшибкаОбмена = ОшибкаОбмена;
	ЖурналОбменаMDM.ОписаниеОшибкиОбмена = ОписаниеОшибкиОбмена;
	ЖурналОбменаMDM.Записать();
	
КонецПроцедуры // ЗаписатьСведенияВЖурналОбмена()

&НаСервереБезКонтекста
Процедура ОбменДаннымиЗагрузкаПриИзмененииНаСервере(ОбменДаннымиЗагрузка)
	Константы.ОбменДаннымиЗагрузка.Установить(ОбменДаннымиЗагрузка);
КонецПроцедуры

&НаКлиенте
Процедура ОбменДаннымиЗагрузкаПриИзменении(Элемент)
	ОбменДаннымиЗагрузкаПриИзмененииНаСервере(ОбменДаннымиЗагрузка);
КонецПроцедуры
