#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СоздатьСписокСправочников();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ОткрытьСправочник(Команда)
	ПараметрыФормы = Новый Структура;
	ВидСправочника = ПолучитьВидСправочника(Команда.Имя);
	ПараметрыФормы.Вставить("Отбор",новый Структура("Владелец", ВидСправочника));
	
	ОткрытьФорму(нсиУниверсальноеХранилище.ПолучитьИмяФормы(ВидСправочника)+".ФормаСписка", ПараметрыФормы, , ВидСправочника.УникальныйИдентификатор(), ПолучитьОкна()[0]);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьСправочник_ДублирующиеПозиции(Команда)
	ПараметрыФормы = Новый Структура;
	ВидСправочника = ПолучитьВидСправочника(Команда.Имя);
	ПараметрыФормы.Вставить("Отбор",новый Структура("Владелец", ВидСправочника));
	
	ОткрытьФорму(нсиУниверсальноеХранилище.ПолучитьИмяФормы(ВидСправочника)+"ФормаСпискаДублей", ПараметрыФормы, , ВидСправочника.УникальныйИдентификатор(), ПолучитьОкна()[0]);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьСправочник_ЭталонныеПозиции(Команда)
	ПараметрыФормы = Новый Структура;
	ВидСправочника = ПолучитьВидСправочника(Команда.Имя);
	ПараметрыФормы.Вставить("Отбор",
		новый Структура("Владелец,ТипПозиции", 
			ВидСправочника,
			ПредопределенноеЗначение("Перечисление.нсиТипыПозицийСправочников.ЭталоннаяПозиция")
		)
	);
	
	ОткрытьФорму(нсиУниверсальноеХранилище.ПолучитьИмяФормы(ВидСправочника)+".ФормаСписка", ПараметрыФормы, , ВидСправочника.УникальныйИдентификатор(), ПолучитьОкна()[0]);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьСправочник_КомплекснаяРаботаСЗаписями(Команда)
	ВидСправочника = ПолучитьВидСправочника(Команда.Имя);
	ПараметрыФормы = Новый Структура(
		"РежимРаботы, ВидСправочника",
		"Комплексная работа с записями",
		ВидСправочника
	);
	ОткрытьФорму(нсиУниверсальноеХранилище.ПолучитьИмяФормы(ВидСправочника)+"ФормаОбработкиИсходныхЗаписей", ПараметрыФормы, , ВидСправочника.УникальныйИдентификатор(), ПолучитьОкна()[0]);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьСправочник_ОбработкаБуфераЗаписей(Команда)
	ВидСправочника = ПолучитьВидСправочника(Команда.Имя);
	ПараметрыФормы = Новый Структура(
		"РежимРаботы, ВидСправочника",
		"Обработка буфера записей",
		ВидСправочника
	);
	ОткрытьФорму(нсиУниверсальноеХранилище.ПолучитьИмяФормы(ВидСправочника)+"ФормаОбработкиИсходныхЗаписей", ПараметрыФормы, , ВидСправочника.УникальныйИдентификатор(), ПолучитьОкна()[0]);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьСправочник_ПодборВБуферЗаписей(Команда)
	ВидСправочника = ПолучитьВидСправочника(Команда.Имя);
	ПараметрыФормы = Новый Структура(
		"РежимРаботы, ВидСправочника",
		"Подбор в буфер записей",
		ВидСправочника
	);
	ОткрытьФорму(нсиУниверсальноеХранилище.ПолучитьИмяФормы(ВидСправочника)+"ФормаОбработкиИсходныхЗаписей", ПараметрыФормы, , ВидСправочника.УникальныйИдентификатор(), ПолучитьОкна()[0]);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьСправочник_ПредварительнаяКлассификация(Команда)
	ВидСправочника = ПолучитьВидСправочника(Команда.Имя);
	ПараметрыФормы = Новый Структура(
		"РежимРаботы, ВидСправочника",
		"Предварительная классификация",
		ВидСправочника
	);
	ОткрытьФорму(нсиУниверсальноеХранилище.ПолучитьИмяФормы(ВидСправочника)+"ФормаОбработкиИсходныхЗаписей", ПараметрыФормы, , ВидСправочника.УникальныйИдентификатор(), ПолучитьОкна()[0]);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновить(Команда)
	СоздатьСписокСправочников();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СоздатьСписокСправочников()
	
	КУдалению = Новый Массив;
	Для каждого Команда Из Команды Цикл
		Если Лев(Команда.Имя, 1)="_" Тогда
			КУдалению.Добавить(Команда);
		КонецЕсли;
	КонецЦикла;
	Для каждого Команда Из КУдалению Цикл
		Элементы.Удалить(Элементы[Команда.Имя]);
		Команды.Удалить(Команда);
	КонецЦикла;
	
	Пока Элементы.ГруппаКлассификаторыПравая.ПодчиненныеЭлементы.Количество()>0 Цикл
		Элементы.Удалить(Элементы.ГруппаКлассификаторыПравая.ПодчиненныеЭлементы[0]);
	КонецЦикла;
	Пока Элементы.ГруппаФункциональныеСправочникиПравая.ПодчиненныеЭлементы.Количество()>0 Цикл
		Элементы.Удалить(Элементы.ГруппаФункциональныеСправочникиПравая.ПодчиненныеЭлементы[0]);
	КонецЦикла;
	РодителиНовыхЭлементов = Новый Соответствие;
	РодителиНовыхЭлементов.Вставить(Перечисления.нсиВидыСправочников.Классификатор				, Элементы.ГруппаКлассификаторыПравая);
	РодителиНовыхЭлементов.Вставить(Перечисления.нсиВидыСправочников.ФункциональныйСправочник	, Элементы.ГруппаФункциональныеСправочникиПравая);
	
	ЦветТекстаКнопок  = Новый Цвет(51,51,51); // Стиль: Текст формы
	ШрифтТекстаКнопок = ШрифтыСтиля.ОбычныйШрифтТекста;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Справочники.Ссылка КАК ВидСправочника,
		|	Справочники.Наименование КАК Наименование,
		|	ВЫРАЗИТЬ(Справочники.Пояснение КАК СТРОКА(1024)) КАК Пояснение,
		|	Справочники.ИспользоватьНормализацию,
		|	Справочники.ИспользоватьКлассификацию,
		|	МАКСИМУМ(ПраваДоступа.Добавление) КАК Добавление,
		|	МАКСИМУМ(ПраваДоступа.Редактирование) КАК Редактирование,
		|	Справочники.ВидСправочника КАК ТипСправочника
		|ИЗ
		|	Справочник.нсиВидыСправочников КАК Справочники
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Права.ВидСправочника КАК ВидСправочника,
		|			МАКСИМУМ(Права.Просмотр) КАК Просмотр,
		|			Права.Добавление КАК Добавление,
		|			Права.Редактирование КАК Редактирование
		|		ИЗ
		|			РегистрСведений.нсиПраваДоступаНаВидыСправочников КАК Права
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставГрупп
		|				ПО (СоставГрупп.ГруппаПользователей = Права.Пользователь)
		|					И (СоставГрупп.Используется)
		|		ГДЕ
		|			СоставГрупп.Пользователь = &ТекущийПользователь ИЛИ Права.Пользователь = &ТекущийПользователь
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Права.ВидСправочника,
		|			Права.Добавление,
		|			Права.Редактирование) КАК ПраваДоступа
		|		ПО (ПраваДоступа.ВидСправочника = Справочники.Ссылка)
		|ГДЕ
		|	ПраваДоступа.Просмотр = ИСТИНА
		|	И Справочники.ВидСправочника <> ЗНАЧЕНИЕ(Перечисление.нсиВидыСправочников.ТабличнаяЧасть)
		|	И Справочники.ВидСправочника <> ЗНАЧЕНИЕ(Перечисление.нсиВидыСправочников.ПустаяСсылка)
		|	И Справочники.ВидСправочника <> ЗНАЧЕНИЕ(Перечисление.нсиВидыСправочников.ПодчиненныйСправочник)
		|	И НЕ Справочники.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	Справочники.Ссылка,
		|	Справочники.Наименование,
		|	ВЫРАЗИТЬ(Справочники.Пояснение КАК СТРОКА(1024)),
		|	Справочники.ИспользоватьНормализацию,
		|	Справочники.ИспользоватьКлассификацию,
		|	Справочники.ВидСправочника
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	Выб = Запрос.Выполнить().Выбрать();
	Пока Выб.Следующий() Цикл                                                                    
		Имя = "_"+СтрЗаменить(XMLСтрока(Выб.ВидСправочника),"-","_");
		Если Выб.ТипСправочника = Перечисления.нсиВидыСправочников.ФункциональныйСправочник 
			И Выб.ИспользоватьНормализацию ИЛИ Выб.ИспользоватьКлассификацию Тогда 
			
			Группа = Элементы.Добавить("Группа"+Имя,Тип("ГруппаФормы"), РодителиНовыхЭлементов[Выб.ТипСправочника]);
			Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			Группа.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
			Группа.Заголовок = Выб.Наименование;
			Группа.ЦветТекстаЗаголовка = ЦветТекстаКнопок;
			Группа.ШрифтЗаголовка = Новый Шрифт(Группа.ШрифтЗаголовка,, 11);
			Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			
			Команда = Команды.Добавить(Имя);
			Команда.Действие = "Подключаемый_ОткрытьСправочник";
			Команда.Подсказка = Выб.Пояснение;
			Кнопка = Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), Группа);
			Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
			Кнопка.ИмяКоманды = Команда.Имя;
			Кнопка.Заголовок = Выб.Наименование;
			Кнопка.Шрифт = Новый Шрифт(Кнопка.Шрифт,, 11, Истина);
			Кнопка.ЦветТекста = ЦветТекстаКнопок;
			
			Если Выб.ИспользоватьНормализацию Тогда 
				Команда = Команды.Добавить(Имя+"_ДублирующиеПозиции");
				Команда.Действие = "Подключаемый_ОткрытьСправочник_ДублирующиеПозиции";
				Команда.Подсказка = Выб.Пояснение + " (дублирующие позиции)";
				Кнопка = Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), Группа);
				Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
				Кнопка.ИмяКоманды = Команда.Имя;
				Кнопка.Заголовок = "Дублирующие позиции";
				Кнопка.ЦветТекста = ЦветТекстаКнопок;
				
				Команда = Команды.Добавить(Имя+"_ЭталонныеПозиции");
				Команда.Действие = "Подключаемый_ОткрытьСправочник_ЭталонныеПозиции";
				Команда.Подсказка = Выб.Пояснение + " (эталонные позиции)";
				Кнопка = Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), Группа);
				Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
				Кнопка.ИмяКоманды = Команда.Имя;
				Кнопка.Заголовок = "Эталонные позиции";
				Кнопка.ЦветТекста = ЦветТекстаКнопок;
				
				Если Выб.Редактирование Тогда 
					Команда = Команды.Добавить(Имя+"_КомплекснаяРаботаСЗаписями");
					Команда.Действие = "Подключаемый_ОткрытьСправочник_КомплекснаяРаботаСЗаписями";
					Команда.Подсказка = Выб.Пояснение + " (комплексная работа с записями)";
					Кнопка = Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), Группа);
					Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
					Кнопка.ИмяКоманды = Команда.Имя;
					Кнопка.Заголовок = "Комплексная работа с записями";
					Кнопка.ЦветТекста = ЦветТекстаКнопок;
					
					Команда = Команды.Добавить(Имя+"_ОбработкаБуфераЗаписей");
					Команда.Действие = "Подключаемый_ОткрытьСправочник_ОбработкаБуфераЗаписей";
					Команда.Подсказка = Выб.Пояснение + " (обработка буфера записей)";
					Кнопка = Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), Группа);
					Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
					Кнопка.ИмяКоманды = Команда.Имя;
					Кнопка.Заголовок = "Обработка буфера записей";
					Кнопка.ЦветТекста = ЦветТекстаКнопок;
					
					Команда = Команды.Добавить(Имя+"_ПодборВБуферЗаписей");
					Команда.Действие = "Подключаемый_ОткрытьСправочник_ПодборВБуферЗаписей";
					Команда.Подсказка = Выб.Пояснение + " (подбор в буфер записей)";
					Кнопка = Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), Группа);
					Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
					Кнопка.ИмяКоманды = Команда.Имя;
					Кнопка.Заголовок = "Подбор в буфер записей";
					Кнопка.ЦветТекста = ЦветТекстаКнопок;
					
				КонецЕсли;
			КонецЕсли;
			
			Если Выб.ИспользоватьКлассификацию И Выб.Редактирование Тогда 
				Команда = Команды.Добавить(Имя+"_ПредварительнаяКлассификация");
				Команда.Действие = "Подключаемый_ОткрытьСправочник_ПредварительнаяКлассификация";
				Команда.Подсказка = Выб.Пояснение + " (предварительная классификация)";
				Кнопка = Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), Группа);
				Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
				Кнопка.ИмяКоманды = Команда.Имя;
				Кнопка.Заголовок = "Предварительная классификация";
				Кнопка.ЦветТекста = ЦветТекстаКнопок;
				
			КонецЕсли;
		Иначе
			Команда = Команды.Добавить(Имя);
			Команда.Действие = "Подключаемый_ОткрытьСправочник";
			Команда.Подсказка = Выб.Пояснение;
			Кнопка = Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), РодителиНовыхЭлементов[Выб.ТипСправочника]);
			Кнопка.Вид = ВидКнопкиФормы.Гиперссылка;
			Кнопка.ИмяКоманды = Команда.Имя;
			Кнопка.Заголовок = Выб.Наименование;
			Кнопка.ЦветТекста = ЦветТекстаКнопок;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВидСправочника(Имя)
	Возврат XMLЗначение(Тип("СправочникСсылка.нсиВидыСправочников"), СтрЗаменить(Сред(Имя, 2), "_", "-"));
КонецФункции

#КонецОбласти
