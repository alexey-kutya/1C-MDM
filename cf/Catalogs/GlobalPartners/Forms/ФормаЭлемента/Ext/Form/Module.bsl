
&НаКлиенте
Процедура GetPartnersID(Команда)
	
	Объект.ID = СформироватьИдентификаторНаСервере();
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Функция СформироватьИдентификаторНаСервере()
	
	ОбъектEntityКод = Объект.Entity.Код;
	Пока СтрДлина(ОбъектEntityКод)<6 Цикл
		ОбъектEntityКод = ОбъектEntityКод+"_";
	КонецЦикла;
	
	Возврат ОбъектEntityКод+"_"+
	Объект.ShortName+"_"+
	Объект.Market.Код;

КонецФункции // СформироватьИдентификаторНаСервере()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РежимЗаявки = Параметры.РежимЗаявки;
	
	РегистрыСведений.нсиСтатусыОбработкиСправочников.ОпределитьДоступКФорме(
		Объект.Ссылка, ЭтаФорма.ТолькоПросмотр, Объект.ЭтоМакет);
		
	нсиВыделениеИзменений.ОформитьВыделениеИзменений(ЭтотОбъект);
	
	Если Объект.Наименование = НСтр("ru = 'Новый элемент справочника'; en = 'New item'") Тогда
		Объект.Наименование = "";
	КонецЕсли;
	
	УстановитьВидимостьЭлементовФормыShortName();
	
	//Если РежимЗаявки Тогда
	//	Элементы.Intercompany.Видимость = Ложь;
	//КонецЕсли;
	
	Элементы.LocalID.Видимость = Объект.ЭтоМакет;
	Элементы.Status.Видимость = Объект.ЭтоМакет;
	
	Если Объект.ЭтоМакет
		И ЗначениеЗаполнено(ПараметрыСеанса.ГруппаУправленияНСИ) Тогда
		
		Объект.СтранаОрганизации = ПараметрыСеанса.ГруппаУправленияНСИ.СтранаОрганизации;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовФормыShortName()

	Элементы.ГруппаShortName.Видимость = Истина;
	
	Если Объект.Type = ПредопределенноеЗначение("Перечисление.GlobalPartnersTypes.DOMESTIC") Тогда
		Элементы.ShortName.ТолькоПросмотр = Истина;
		Элементы.ShortNameNumber.Видимость = Истина;
		Элементы.GetShortName.Видимость = Истина;
	ИначеЕсли Объект.Type = ПредопределенноеЗначение("Перечисление.GlobalPartnersTypes.INTERNATIONAL") Тогда
		Элементы.ShortName.ТолькоПросмотр = Ложь;
		Элементы.ShortNameNumber.Видимость = Ложь;
		Элементы.GetShortName.Видимость = Ложь;
	Иначе
		Элементы.ГруппаShortName.Видимость = Ложь;
	КонецЕсли; 

КонецПроцедуры // УстановитьВидимостьЭлементовФормы()

&НаКлиенте
Процедура EntityПриИзменении(Элемент)
	
	//Объект.Intercompany = ЗначениеРеквизитаОбъектаНаСервере(Объект.Entity, "Intercompany");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеРеквизитаОбъектаНаСервере(Ссылка, Реквизит)

	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, Реквизит);

КонецФункции // ЗначениеРеквизитаОбъектаНаСервере()

&НаКлиенте
Процедура GetShortName(Команда)
	
	Если НЕ Объект.Type = ПредопределенноеЗначение("Перечисление.GlobalPartnersTypes.DOMESTIC") Тогда
		Сообщить(НСтр("ru = 'Тип партнера должен быть ""ВНУТРЕННИЙ""'; en = 'Partner''s type should be ""DOMESTIC""'"));
		Возврат;
	КонецЕсли; 
	
	ПолучитьИУстановитьShortName();
	
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ПолучитьИУстановитьShortName()

	Объект.ShortNameNumber = GetShortNameOnServer(Объект.Ссылка, Объект.Entity);
	
	УстановитьShortName();

КонецПроцедуры // ПолучитьИУстановитьShortName()
 
// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура УстановитьShortName()

	Объект.ShortName = Формат(Объект.ShortNameNumber, "ЧЦ=6; ЧВН=; ЧГ=0");

КонецПроцедуры // УстановитьShortName()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервереБезКонтекста
Функция GetShortNameOnServer(Partner, Entity)

	ShortNameNumber = 1;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	GlobalPartners.ShortNameNumber КАК ShortNameNumber
		|ИЗ
		|	Справочник.GlobalPartners КАК GlobalPartners
		|ГДЕ
		|	GlobalPartners.Type = ЗНАЧЕНИЕ(Перечисление.GlobalPartnersTypes.DOMESTIC)
		|	И GlobalPartners.Entity = &Entity
		|	И НЕ GlobalPartners.Ссылка = &Partner
		|
		|УПОРЯДОЧИТЬ ПО
		|	ShortNameNumber УБЫВ";
	
	Запрос.УстановитьПараметр("Entity", Entity);
	Запрос.УстановитьПараметр("Partner", Partner);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		ShortNameNumber = ВыборкаДетальныеЗаписи.ShortNameNumber+1;
		
	КонецЕсли;  
	
	Возврат ShortNameNumber;

КонецФункции // GetShortNameOnServer()

&НаКлиенте
Процедура ShortNameNumberПриИзменении(Элемент)
	
	УстановитьShortName();
	
КонецПроцедуры

&НаКлиенте
Процедура TypeПриИзменении(Элемент)
	
	Объект.ShortName = "";
	Объект.ShortNameNumber = 0;
	
	УстановитьВидимостьЭлементовФормыShortName();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ЭтоМакет Тогда
	
		Ссылка = GlobalMDM.ЭлементСправочникаНайтиПоID(ИмяСправочникаLocal, Объект.LocalID);
		
		Если ТипЗнч(Ссылка) = Тип("Массив") Тогда
			ТекстОшибки = НСтр("ru = 'Существует более чем один элемент с таким локальным идентификатором.'; en = 'There is more than one item with such Local ID.'");
			Сообщить(ТекстОшибки, СтатусСообщения.Важное);
			СтатусТолькоПросмотр(Истина);
		Иначе
			СтатусТолькоПросмотр(ЗначениеЗаполнено(Ссылка));
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусТолькоПросмотр(ЭлементСуществует)

	Если ЗначениеЗаполнено(Объект.LocalID) Тогда
		Элементы.Status.ТолькоПросмотр = ЭлементСуществует;
	Иначе
		Элементы.Status.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры // СтатусТолькоПросмотр()

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.Status = ПредопределенноеЗначение("Перечисление.GlobalPartnersStatuses.INACTIVE") Тогда
		ТекстОшибки = НСтр("ru = 'Отказ! Статус должен быть ACTIVE.'; en = 'Failure! The status should be ACTIVE.'");
		Сообщить(ТекстОшибки, СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли; 
	
	Если РежимЗаявки Тогда
	
		Возврат;
	
	КонецЕсли; 
	
	Если Объект.Type = ПредопределенноеЗначение("Перечисление.GlobalPartnersTypes.DOMESTIC") 
		И НЕ ЗначениеЗаполнено(Объект.ShortNameNumber) Тогда
	
		ПолучитьИУстановитьShortName();

	
	КонецЕсли; 
	
	Объект.ID = СформироватьИдентификаторНаСервере();
	
	ТекстОшибки = "";
	
	Если GlobalMDM.СвязьМеждуЭлементамиСуществует(ИмяРегистраСоответствия,ИмяСправочникаLocal,ИмяСправочникаGlobal, Объект.LocalID, Объект.ID, ТекстОшибки, Отказ, Объект.Ссылка) Тогда
	// если связь существует Отказ = Истина	
		Сообщить(ТекстОшибки, СтатусСообщения.Важное);
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизитаНаСервере(Ссылка, ИмяРеквизита)

	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита);

КонецФункции // ПолучитьЗначениеРеквизитаНаСервере()

&НаКлиенте
Процедура LocalIDПриИзменении(Элемент)
	
	Ссылка = GlobalMDM.ЭлементСправочникаНайтиПоID(ИмяСправочникаLocal, Объект.LocalID);
	
	Если ТипЗнч(Ссылка) = Тип("Массив") Тогда
		ТекстОшибки = НСтр("ru = 'Существует более чем один элемент с таким локальным идентификатором.'; en = 'There is more than one item with such Local ID.'");
		Сообщить(ТекстОшибки, СтатусСообщения.Важное);
	Иначе
		
		Если ЗначениеЗаполнено(Ссылка) Тогда
			Объект.Status = ПолучитьЗначениеРеквизитаНаСервере(Ссылка, "Status");
		КонецЕсли;
		
		СтатусТолькоПросмотр(ЗначениеЗаполнено(Ссылка));
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура LocalIDАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Текст) Тогда
		
		ДанныеВыбора = GlobalMDM.НайтиПоLocalID(ИмяСправочникаLocal, Текст);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Текст) Тогда
		
		ДанныеВыбора = IntercompanyНайтиПоПолномуНаименованию(Текст);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция IntercompanyНайтиПоПолномуНаименованию(Текст)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	GlobalIntercompany.Наименование
	|ИЗ
	|	Справочник.GlobalIntercompany КАК GlobalIntercompany
	|ГДЕ
	|	GlobalIntercompany.Наименование ПОДОБНО &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Текст+"%");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Список = Новый СписокЗначений;
	
	Список.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Наименование"));
	
	Возврат Список;

КонецФункции // IntercompanyНайтиПоПолномуНаименованию()

&НаКлиенте
Процедура НаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры
 

ИмяРегистраСоответствия = "MappingGlobalAndLocalPartners";
ИмяСправочникаLocal = "нсиКонтрагенты";
ИмяСправочникаGlobal = "GlobalPartners";

 
