////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция читает данные производственного календаря из регистра
//
// Параметры
//	ПроизводственныйКалендарь			- Ссылка на текущий элемент справочника
//	НомерГода							- Номер года, за который необходимо прочитать производственный календарь
//
// Возвращаемое значение
//	ДанныеПроизводственногоКалендаря	- таблица значений, в которой хранятся сведения о виде дня на каждую дату календаря
//
Функция ДанныеПроизводственногоКалендаря(ПроизводственныйКалендарь, НомерГода) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ПроизводственныйКалендарь",	ПроизводственныйКалендарь);
	Запрос.УстановитьПараметр("ТекущийГод",	НомерГода);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеПроизводственногоКалендаря.Дата,
	|	ДанныеПроизводственногоКалендаря.ВидДня
	|ИЗ
	|	РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|ГДЕ
	|	ДанныеПроизводственногоКалендаря.Год = &ТекущийГод
	|	И ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь = &ПроизводственныйКалендарь";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Процедура записывает данные производственного календаря в регистр
//
// Параметры
//	ПроизводственныйКалендарь			- Ссылка на текущий элемент справочника
//	НомерГода							- Номер года, за который необходимо записать производственный календарь
//	ДанныеПроизводственногоКалендаря	- таблица значений, в которой хранятся сведения о виде дня на каждую дату календаря
//
// Возвращаемое значение
//	Нет
//
Процедура ЗаписатьДанныеПроизводственногоКалендаря(ПроизводственныйКалендарь, НомерГода, ДанныеПроизводственногоКалендаря) Экспорт
	
	НаборЗаписей = РегистрыСведений.ДанныеПроизводственногоКалендаря.СоздатьНаборЗаписей();
	
	Для Каждого КлючИЗначение Из ДанныеПроизводственногоКалендаря Цикл
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), КлючИЗначение);
	КонецЦикла;
	
	ЗначенияОтбора = Новый Структура("ПроизводственныйКалендарь, Год", ПроизводственныйКалендарь, НомерГода);
	
	Для Каждого КлючИЗначение Из ЗначенияОтбора Цикл
		НаборЗаписей.Отбор[КлючИЗначение.Ключ].Установить(КлючИЗначение.Значение);
	КонецЦикла;
	
	Для Каждого СтрокаНабора Из НаборЗаписей Цикл
		ЗаполнитьЗначенияСвойств(СтрокаНабора, ЗначенияОтбора);
	КонецЦикла;
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

// Функция определяет соответствие видов дня производственного календаря и цвета оформления
// этого дня в поле календаря
//
// Возвращаемое значение
//	ЦветаОформления - соответствие видов дня и цветов оформления
//
Функция ЦветаОформленияВидовДнейПроизводственногоКалендаря() Экспорт
	
	ЦветаОформления = Новый Соответствие;
	
	ЦветаОформления.Вставить(Перечисления.ВидыДнейПроизводственногоКалендаря.ПустаяСсылка(),	WebЦвета.Красный);
	ЦветаОформления.Вставить(Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий,			WebЦвета.Черный);
	ЦветаОформления.Вставить(Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота,			WebЦвета.ТемноКрасный);
	ЦветаОформления.Вставить(Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье,		WebЦвета.Красный);
	ЦветаОформления.Вставить(Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный,	WebЦвета.ЗеленаяЛужайка);
	ЦветаОформления.Вставить(Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник,			WebЦвета.Золотой);
	
	Возврат ЦветаОформления;
	
КонецФункции

Функция СписокВидовДня() Экспорт
	
	СписокВидовДня = Новый СписокЗначений;
	
	Для Каждого МетаданныеВидаДней Из Метаданные.Перечисления.ВидыДнейПроизводственногоКалендаря.ЗначенияПеречисления Цикл
		СписокВидовДня.Добавить(Перечисления.ВидыДнейПроизводственногоКалендаря[МетаданныеВидаДней.Имя], МетаданныеВидаДней.Синоним);
	КонецЦикла;
	
	Возврат СписокВидовДня;
	
КонецФункции


Процедура Печать(ТабДок,ПроизводственныйКалендарь,НомерГода) Экспорт
	Данные = ДанныеПроизводственногоКалендаря(ПроизводственныйКалендарь, НомерГода);
	Цвета = ЦветаОформленияВидовДнейПроизводственногоКалендаря();
	Макет = ПолучитьМакет("Макет");
	Макет.Параметры.Год = НомерГода;
	Макет.Параметры.Наименование = ПроизводственныйКалендарь.Наименование;
	ТабДок.Очистить();
	ТабДок.Вывести(Макет);
	Для Каждого Строка Из Данные Цикл
		Если Год(Строка.Дата) = НомерГода Тогда 
			Месяц = Месяц(Строка.Дата);
			СтрокаМ = Цел((Месяц-1)/3);
			КолонкаМ = (Месяц - 1)- СтрокаМ*3 ;
			
			СмещениеСтр = 6+СтрокаМ*9;
			СмещениеКол = КолонкаМ*8;
			
			ДеньНеделиНач = ДеньНедели(НачалоМесяца(Строка.Дата));
			ПревыйПонедельник = НачалоМесяца(Строка.Дата) - (ДеньНеделиНач-1)*3600*24;
			
			СтрокаВМес = Цел((Строка.Дата - ПревыйПонедельник)/(7*3600*24));
			КолонкаВМес = ДеньНедели(Строка.Дата);
			
			ТабДок.Область(СмещениеСтр+СтрокаВМес,СмещениеКол+КолонкаВМес).Текст = День(Строка.Дата);
			ТабДок.Область(СмещениеСтр+СтрокаВМес,СмещениеКол+КолонкаВМес).ЦветТекста = 
				Цвета[Строка.ВидДня];
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры