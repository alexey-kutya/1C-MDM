#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	КодВариантаЗагрузки = 1;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыборИсточника Тогда
		ЗагрузитьКлассификатор();
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаРезультат;
	ИначеЕсли Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаРезультат Тогда	
		Закрыть();
	КонецЕсли;
	
	УстановитьИзмененияВИнтерфейсе();

КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаРезультат Тогда
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыборИсточника;
	КонецЕсли;
	
	УстановитьИзмененияВИнтерфейсе();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Загружает в классификатор банков данные с диска ИТС.
//
// Параметры:
//	ПараметрыЗагрузкиФайловИТС 		 - Соответствие:
//	ИмяДискаИТС						 - Строка			  - имя диска ИТС;
//  ДанныеИТСАдресДвоичныхДанных 	 - ВременноеХранилище - файл данных классификатора БИК РФ с диска ИТС, 
//															помещенный во временное хранилище;
//  ПодготовкаИТСАдресДвоичныхДанных - ВременноеХранилище - файл обработки подготовки данных...
//															классификатора БИК РФ с диска ИТС, помещенный во временное хранилище;
//	Загружено 						 - Число 			  - Количество новых записей классификатора;
//	Обновлено						 - Число 			  - Количество обновленных записей классификатора;
//	ТекстСообщения					 - Строка			  - тест сообщения об ошибке.
//
&НаСервере
Процедура ЗагрузитьДанныеДискИТСНаСервере(ПараметрыЗагрузкиФайловИТС)
	РаботаСБанками.ЗагрузитьДанныеДискИТС(ПараметрыЗагрузкиФайловИТС);
КонецПроцедуры	

// Получает, сортирует, записывает данные классификатора БИК РФ с диска ИТС.
// 
// Параметры
//	ПараметрыЗагрузкиКлассификатора - Соответствие:
//	Загружено						- Число  - Количество новых записей классификатора;
//	Обновлено						- Число  - Количество обновленных записей классификатора;
//  ТекстСообщения					- Строка - тест сообщения об ошибке.
//
&НаКлиенте
Процедура ПолучитьДанныеБИКРФДискИТС(ПараметрыЗагрузкиКлассификатора) 
	
	ПараметрыЗагрузкиФайловИТС = Новый Соответствие;
	ПараметрыЗагрузкиФайловИТС.Вставить("ИмяДискаИТС", "");
	ПараметрыЗагрузкиФайловИТС.Вставить("ДанныеИТСАдресДвоичныхДанных", "");
	ПараметрыЗагрузкиФайловИТС.Вставить("ПодготовкаИТСАдресДвоичныхДанных", "");
	ПараметрыЗагрузкиФайловИТС.Вставить("Загружено", ПараметрыЗагрузкиКлассификатора["Загружено"]);
	ПараметрыЗагрузкиФайловИТС.Вставить("Обновлено", ПараметрыЗагрузкиКлассификатора["Обновлено"]);
	ПараметрыЗагрузкиФайловИТС.Вставить("ТекстСообщения", ПараметрыЗагрузкиКлассификатора["ТекстСообщения"]);
    	
	ПолучитьДанныеБИКДискИТС(ПараметрыЗагрузкиФайловИТС);
	
	Если Не ПустаяСтрока(ПараметрыЗагрузкиФайловИТС["ТекстСообщения"]) Тогда
		ПараметрыЗагрузкиКлассификатора.Вставить("ТекстСообщения", ПараметрыЗагрузкиФайловИТС["ТекстСообщения"]);
		Возврат;
	КонецЕсли;
	
	ПолучитьСортировщикДискИТС(ПараметрыЗагрузкиФайловИТС);
	
	Если Не ПустаяСтрока(ПараметрыЗагрузкиФайловИТС["ТекстСообщения"]) Тогда
		ПараметрыЗагрузкиКлассификатора.Вставить("ТекстСообщения", ПараметрыЗагрузкиФайловИТС["ТекстСообщения"]);
    	Возврат;
	КонецЕсли;
    
	ЗагрузитьДанныеДискИТСНаСервере(ПараметрыЗагрузкиФайловИТС);
	
	ПараметрыЗагрузкиКлассификатора.Вставить("Загружено", ПараметрыЗагрузкиФайловИТС["Загружено"]);
	ПараметрыЗагрузкиКлассификатора.Вставить("Обновлено", ПараметрыЗагрузкиФайловИТС["Обновлено"]);
		
КонецПроцедуры	

// Получает обработку сортировки классификатора БИК РФ с диска ИТС.
// 
// Параметры
//	ПараметрыЗагрузкиФайловИТС 		 - Соответствие:
//  ИмяДискаИТС						 - Символ			  - имя диска ИТС;
//  ДанныеИТСАдресДвоичныхДанных 	 - ВременноеХранилище - файл данных классификатора БИК РФ с диска ИТС, помещенный во временное хранилище;
//  ПодготовкаИТСАдресДвоичныхДанных - ВременноеХранилище - файл обработки подготовки данных классификатора БИК РФ с диска ИТС, помещенный во временное хранилище;
//  ТекстСообщения					 - Строка			  - текст сообщения об ошибке.
//
&НаКлиенте
Процедура ПолучитьСортировщикДискИТС(ПараметрыЗагрузкиФайловИТС)
	
	ТекстСообщения			  = "";
	ПодготовкаИТСАдресДвоичныхДанных = "";
	
	Результат = Новый Структура;
	
	ПодготовкаИТС = Новый Файл(ПараметрыЗагрузкиФайловИТС["ИмяДискаИТС"] + ":\1CITS\EXE\EXTDB\BIKr5v82_MA.epf");
	
	Если ПодготовкаИТС.Существует() Тогда
	    ПодготовкаИТСДвоичныеДанные		 = Новый ДвоичныеДанные(ПодготовкаИТС.ПолноеИмя);
		ПодготовкаИТСАдресДвоичныхДанных = ПоместитьВоВременноеХранилище(ПодготовкаИТСДвоичныеДанные);
    Иначе
		ТекстСообщения = НСтр("ru ='На диске ИТС не обнаружен файл обработки подготовки данных классификатора БИК РФ.'");
	КонецЕсли;
	
	ПараметрыЗагрузкиФайловИТС.Вставить("ПодготовкаИТСАдресДвоичныхДанных", ПодготовкаИТСАдресДвоичныхДанных);
	ПараметрыЗагрузкиФайловИТС.Вставить("ТекстСообщения", ТекстСообщения);
    			
КонецПроцедуры

// Получает данные классификатора БИК РФ с диска ИТС.
// 
// Параметры
//	ПараметрыЗагрузкиФайловИТС		 - Соответствие:
//  ИмяДискаИТС						 - Символ			  - имя диска ИТС;
//  ДанныеИТСАдресДвоичныхДанных	 - ВременноеХранилище - файл данных классификатора БИК РФ с диска ИТС, помещенный во временное хранилище;
//  ПодготовкаИТСАдресДвоичныхДанных - ВременноеХранилище - файл обработки подготовки данных классификатора БИК РФ с диска ИТС, помещенный во временное хранилище;
//  ТекстСообщения					 - Строка			  - текст сообщения об ошибке.
//
&НаКлиенте
Процедура ПолучитьДанныеБИКДискИТС(ПараметрыЗагрузкиФайловИТС)
    	
	ТекстСообщения				 = "";
	ИмяДиска					 = "";
    ДанныеИТС					 = "";
	ФайлНайден					 = Ложь;
	ДанныеИТСАдресДвоичныхДанных = "";
	
	Результат = Новый Структура;
	
	Для Индекс = 68 По 90 Цикл
		// с D по Z
		ДанныеИТС = Новый Файл(Символ(Индекс) + ":\Database\Garant\MorphDB\Morph.dlc");
		Если ДанныеИТС.Существует() Тогда
			ФайлНайден = Истина;
			Прервать;
		Иначе
			ДанныеИТС = "";
		КонецЕсли;
	КонецЦикла;
		
	Если ФайлНайден Тогда	
		ИмяДискаИТС					 = Символ(Индекс);
		ДанныеИТСДвоичныеДанные		 = Новый ДвоичныеДанные(ДанныеИТС.ПолноеИмя);
		ДанныеИТСАдресДвоичныхДанных = ПоместитьВоВременноеХранилище(ДанныеИТСДвоичныеДанные);
	Иначе
		ТекстСообщения = НСтр("ru ='На диске ИТС не обнаружены данные классификатора БИК РФ. Для установки требуется диск ИТС, на котором содержится база ""Гарант. Налоги, бухучет, предпринимательство.""'");
	КонецЕсли;
	
	ПараметрыЗагрузкиФайловИТС.Вставить("ИмяДискаИТС", ИмяДискаИТС);
	ПараметрыЗагрузкиФайловИТС.Вставить("ДанныеИТСАдресДвоичныхДанных", ДанныеИТСАдресДвоичныхДанных);
	ПараметрыЗагрузкиФайловИТС.Вставить("ТекстСообщения", ТекстСообщения);    		
	
КонецПроцедуры	

// Загружает классификатор банков с диска ИТС или с сайта РБК.
//
&НаКлиенте
Процедура ЗагрузитьКлассификатор()
	
	ПараметрыЗагрузкиКлассификатора = Новый Соответствие;
	ПараметрыЗагрузкиКлассификатора.Вставить("Загружено", 0);
	ПараметрыЗагрузкиКлассификатора.Вставить("Обновлено", 0);
	ПараметрыЗагрузкиКлассификатора.Вставить("ТекстСообщения", "");
	
	ВариантЗагрузки = "";
	
	Состояние(НСтр("ru ='Загружается классификатор банков РФ.'"));
	
	Если КодВариантаЗагрузки = 1 Тогда
		// с диска ИТС
		ВариантЗагрузки = НСтр("ru ='Диск ИТС'");
		ПолучитьДанныеБИКРФДискИТС(ПараметрыЗагрузкиКлассификатора);
	ИначеЕсли КодВариантаЗагрузки = 2 Тогда
		// с сайта РБК
		ВариантЗагрузки = НСтр("ru ='Сайт РБК'");
		ПолучитьДанныеРБК(ПараметрыЗагрузкиКлассификатора); 
	КонецЕсли;
	
	ИмяСобытия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		  НСтр("ru ='Загрузка классификатора банков. %1.'"), ВариантЗагрузки);
    			
	Если ПустаяСтрока(ПараметрыЗагрузкиКлассификатора["ТекстСообщения"]) Тогда
		ДополнитьТекстСообщения(ПараметрыЗагрузкиКлассификатора);
	КонецЕсли;
	Элементы.ПоясняющийТекст.Заголовок = ПараметрыЗагрузкиКлассификатора["ТекстСообщения"];
	
	Если (ПараметрыЗагрузкиКлассификатора["Обновлено"] > 0) или (ПараметрыЗагрузкиКлассификатора["Загружено"] > 0) Тогда
		ОповеститьОбИзменении(Тип("СправочникСсылка.нсиБанки"));
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДополнитьТекстСообщения(ПараметрыЗагрузкиКлассификатора)
		РаботаСБанками.ДополнитьТекстСообщения(ПараметрыЗагрузкиКлассификатора);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПолучитьДанныеРБК(ПараметрыЗагрузкиКлассификатора)
		РаботаСБанками.ПолучитьДанныеРБК(ПараметрыЗагрузкиКлассификатора);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Блок обработчиков событий формы и элементов формы
//
&НаКлиенте
Процедура УстановитьИзмененияВИнтерфейсе()
	
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыборИсточника Тогда
		Элементы.ФормаКнопкаНазад.Доступность  = Ложь;
		Элементы.ФормаКнопкаДалее.Заголовок	   = НСтр("ru ='Далее>>'");
		Элементы.ФормаКнопкаОтмена.Доступность = Истина;
	ИначеЕсли Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаРезультат Тогда
		Элементы.ФормаКнопкаНазад.Доступность  = Истина;
		Элементы.ФормаКнопкаДалее.Заголовок	   = НСтр("ru ='Закрыть'");
		Элементы.ФормаКнопкаОтмена.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
