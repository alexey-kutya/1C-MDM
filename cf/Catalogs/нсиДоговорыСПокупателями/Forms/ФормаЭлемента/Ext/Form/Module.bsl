#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеСвойства");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства

		
	РегистрыСведений.нсиСтатусыОбработкиСправочников.ОпределитьДоступКФорме(
		Объект.Ссылка, ЭтаФорма.ТолькоПросмотр, Объект.ЭтоМакет);
		
	УправлениеВидимостьюИДоступом();
	
	// @Комментарий: Вызовем процедуру установки функциональных опций.
	нсиРаботаСФормамиСервер.УправлениеВидимостьюОбработкиЗаявок(ЭтаФорма);
	
	нсиРаботаСФормамиСервер.УстановитьВидимостьКодов(ЭтаФорма);
	
	нсиВыделениеИзменений.ОформитьВыделениеИзменений(ЭтотОбъект);	
	
	Если ЗначениеЗаполнено(Объект.Ссылка) и Объект.ЭтоМакет Тогда
		нсиРаботаСФормамиСервер.УстановитьДоступностьПолей(ЭтаФорма, Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	ЗаполнитьСписокНаименованийСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ВладелецФормы = Неопределено Тогда 
		ВедетсяОбработка = Ложь; 
	Иначе 	
		ВедетсяОбработка = 
			(ВладелецФормы.Имя = "СписокБуфера" ИЛИ 
			ВладелецФормы.Имя = "СписокЗагруженных" ИЛИ 
			ВладелецФормы.Имя = "СписокОбработанных");
	КонецЕсли;	
		
	Если ВедетсяОбработка И Не ЗначениеЗаполнено(Объект.ТипПозиции) Тогда 
		Объект.ТипПозиции = ПредопределенноеЗначение("Перечисление.нсиТипыПозицийСправочников.ЭталоннаяПозиция");	
	КонецЕсли;	
			
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	нсиРаботаСФормами.СократитьПробелыТекстовыхПолей(ТекущийОбъект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ПеренестиДублиКНовомуЭталону();	
	
	Если ВедетсяОбработка Тогда 
		РегистрыСведений.нсиСтатусыОбработкиСправочников.УстановитьСтатусСправочника(ТекущийОбъект.Ссылка,
			Новый Структура("Пользователь,ОбработкаНачата", ПараметрыСеанса.ТекущийПользователь, Истина) );	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УправлениеВидимостьюИДоступом();
	
	нсиВыделениеИзменений.ОформитьВыделениеИзменений(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
	    ОбновитьЭлементыДополнительныхРеквизитов();
	    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.ЭтоМакет Тогда 
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("Запись макета элемента справочника ""Договоры с покупателями""");
	Иначе
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("Запись элемента справочника ""Договоры с покупателями""");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УправлениеВидимостьюИДоступом();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипПозицииПриИзменении(Элемент)
	
	УправлениеВидимостьюИДоступом();
	
КонецПроцедуры

&НаКлиенте
Процедура СобственныйКонтрагентНажатие(Элемент)
	
	ОткрытьФорму("Справочник.Организации.ФормаОбъекта",
		Новый Структура("Ключ", нсиРаботаСФормамиСервер.ПолучитьОрганизациюПоКонтрагенту(Объект.Контрагент)) );
	
КонецПроцедуры

&НаКлиенте
Процедура НомерДоговораПриИзменении(Элемент)
	ЗаполнитьСписокНаименованийКлиент();
КонецПроцедуры

&НаКлиенте
Процедура ДатаДоговораПриИзменении(Элемент)
	ЗаполнитьСписокНаименованийКлиент();
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДоговораПриИзменении(Элемент)
	ЗаполнитьСписокНаименованийКлиент();
КонецПроцедуры

&НаКлиенте
Процедура ПредметДоговораПриИзменении(Элемент)
	ЗаполнитьСписокНаименованийКлиент();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
    УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_ПоказатьОтличия(Команда)
	
	ПараметрыСравненияТаблиц = ВыделениеИзменений_ПараметрыСравненияТаблиц(Команда.Имя);
	
	Если ПараметрыСравненияТаблиц = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.нсиФормаСравненияТабличныхЧастей", ПараметрыСравненияТаблиц, ЭтаФорма);
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьСписокНаименованийКлиент()
	Элементы.Наименование.СписокВыбора.Очистить();
	Элементы.Наименование.СписокВыбора.Добавить(""+Объект.НомерДоговора+" от "+Формат(Объект.ДатаДоговора,"ДФ=dd.MM.yyyy"));
	Если ЗначениеЗаполнено(Объект.ВалютаДоговора) Тогда 
		Элементы.Наименование.СписокВыбора.Добавить(
			""+Объект.НомерДоговора+" от "+Формат(Объект.ДатаДоговора,"ДФ=dd.MM.yyyy")+", "+Объект.ВалютаДоговора);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ПредметДоговора) Тогда 
		Элементы.Наименование.СписокВыбора.Добавить(
			""+Объект.НомерДоговора+" от "+Формат(Объект.ДатаДоговора,"ДФ=dd.MM.yyyy")+", "+Объект.ПредметДоговора);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокНаименованийСервер()
	Элементы.Наименование.СписокВыбора.Очистить();
	Элементы.Наименование.СписокВыбора.Добавить(""+Объект.НомерДоговора+" от "+Формат(Объект.ДатаДоговора,"ДФ=dd.MM.yyyy"));
	Если ЗначениеЗаполнено(Объект.ВалютаДоговора) Тогда 
		Элементы.Наименование.СписокВыбора.Добавить(
			""+Объект.НомерДоговора+" от "+Формат(Объект.ДатаДоговора,"ДФ=dd.MM.yyyy")+", "+Объект.ВалютаДоговора);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ПредметДоговора) Тогда 
		Элементы.Наименование.СписокВыбора.Добавить(
			""+Объект.НомерДоговора+" от "+Формат(Объект.ДатаДоговора,"ДФ=dd.MM.yyyy")+", "+Объект.ПредметДоговора);
	КонецЕсли;	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура УправлениеВидимостьюИДоступом()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Элементы.ЭталоннаяПозиция.Доступность = 
		(Объект.ТипПозиции = Перечисления.нсиТипыПозицийСправочников.ДублирующаяПозиция);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка ИЗ Справочник.Организации ГДЕ Контрагент = &Контрагент";
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Элементы.СобственныйКонтрагент.Видимость = ВыборкаДетальныеЗаписи.Следующий();
	
КонецПроцедуры	

&НаСервере
Функция ВыделениеИзменений_ПараметрыСравненияТаблиц(ИмяКоманды)
	Возврат нсиВыделениеИзменений.ПараметрыСравненияТаблиц(ЭтотОбъект, ИмяКоманды);
КонецФункции

#КонецОбласти





