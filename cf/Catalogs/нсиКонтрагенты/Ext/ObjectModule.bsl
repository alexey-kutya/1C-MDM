#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	#Если Сервер ИЛИ ВнешнееСоединение тогда	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюВидаОбъекта(ЭтотОбъект, "Справочник_нсиКонтрагенты");
	// Конец СтандартныеПодсистемы.Свойства
	#КонецЕсли
	нсиСравнениеДанныхСобытия.ПроверитьТипПозицииПередЗаписьюФункциональногоСправочника(ЭтотОбъект,Отказ);
	
	Если ЭтоМакет тогда
		ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина); 
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.нсиКонтрагенты") Тогда
		
		// заполнение реквизитов
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, , "Владелец,Родитель,Код,ЭтоМакет");
		
		Если ЭтоГруппа Тогда 
			Возврат;
		КонецЕсли;	
		
		// заполнение табличных частей
		КонтактнаяИнформация.Загрузить(ДанныеЗаполнения.КонтактнаяИнформация.Выгрузить());
		ДополнительныеРеквизиты.Загрузить(ДанныеЗаполнения.ДополнительныеРеквизиты.Выгрузить());
		
		// заполнение регистров сведений
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Объект", ДанныеЗаполнения.Ссылка);
		Запрос.УстановитьПараметр("ОбъектЗагрузки", Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ &ОбъектЗагрузки КАК Объект, Свойство, Значение
		|ИЗ РегистрСведений.ДополнительныеСведения ГДЕ Объект = &Объект"; 
		Результат = Запрос.Выполнить().Выгрузить();
		Если Не Результат.Количество() = 0 Тогда 
			НаборЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
			НаборЗаписи.Отбор.Объект.Установить(Ссылка);
			НаборЗаписи.Загрузить(Результат);
			НаборЗаписи.Записать(Истина); 			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Перем ТекстСообщения;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли; 
	
	// проверяются эталоны и одиночные позиции не помеченные на удаление
	Если НЕ ПометкаУдаления И
		ТипПозиции = Перечисления.нсиТипыПозицийСправочников.ЭталоннаяПозиция
		Тогда 
		// все проверки
	ИначеЕсли ТипПозиции = Перечисления.нсиТипыПозицийСправочников.ДублирующаяПозиция Тогда 	
		Если Не ЗначениеЗаполнено(ЭталоннаяПозиция) Тогда 
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Для дублирующей позиции не указан эталон.",ЭтотОбъект, "ЭталоннаяПозиция");
		КонецЕсли;	
		ПроверяемыеРеквизиты.Очистить();
		ПроверяемыеРеквизиты.Добавить("Наименование");
		ПроверяемыеРеквизиты.Добавить("ТипПозиции");
		Возврат; // проверки не работают	
	Иначе 
// ITRR Кутья АА 
		//ПроверяемыеРеквизиты.Очистить();
		//ПроверяемыеРеквизиты.Добавить("Наименование");
		//ПроверяемыеРеквизиты.Добавить("ТипПозиции");
		//Возврат; // проверки не работают	
	КонецЕсли;	
	
// ITRR Кутья АА 
	Если ВходитВХолдинг Тогда
		ПроверяемыеРеквизиты.Добавить("ГоловнойКонтрагент");
	КонецЕсли; 
	
	ЭтоЮрЛицо = нсиОбщегоНазначенияВызовСервера.ЭтоЮрЛицо(ЮрФизЛицо);
	
	Если Не ЭтоНовый() Тогда
		ЗначенияРеквизитовВИнформационнойБазе = нсиОбщегоНазначения.ПолучитьЗначенияРеквизитов(Ссылка,"ИНН,КПП,КодПоОКПО,ОГРН");
	КонецЕсли;
	
	Если Нерезидент Тогда // иностранный контрагент
// ITRR Кутья АА 
		ПроверяемыеРеквизиты.Добавить("ИНН");
		ПроверяемыеРеквизиты.Добавить("КодСинхронизацииМСФО");
		
		Если ЭтоНовый() Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	нсиКонтрагенты.Код,
			|	нсиКонтрагенты.КодСинхронизацииМСФО
			|ИЗ
			|	Справочник.нсиКонтрагенты КАК нсиКонтрагенты
			|ГДЕ
			|	нсиКонтрагенты.Ссылка <> &Ссылка
			|	И нсиКонтрагенты.КодСинхронизацииМСФО = &КодСинхронизацииМСФО";
			
			Запрос.УстановитьПараметр("КодСинхронизацииМСФО", КодСинхронизацииМСФО);
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ТекстСообщения = "Контрагент с таким кодом МСФО уже существует в системе под кодом "+ВыборкаДетальныеЗаписи.Код;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				ЭтотОбъект,
				"КодСинхронизацииМСФО",
				,
				Отказ
				);
			КонецЦикла;
		КонецЕсли;
	Иначе // российский контрагент	
// ITRR Кутья АА 
		ПроверяемыеРеквизиты.Добавить("ИНН");
		Если ЮрФизЛицо = Перечисления.нсиЮрФизЛицо.ЮрЛицо Тогда
			ПроверяемыеРеквизиты.Добавить("КПП");
		КонецЕсли; 
		
		Если Константы.нсиПроверятьИННнаКонтрольноеЧисло.Получить() Тогда
			Если НЕ ПустаяСтрока(ИНН) Тогда 
				Если (ЭтоНовый() ИЛИ ЗначенияРеквизитовВИнформационнойБазе.ИНН <> ИНН)
					И НЕ РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН,ЭтоЮрЛицо,ТекстСообщения) Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					"ИНН",
					,
					Отказ
					);
				//Кутья АА ITRR	
				ИначеЕсли ЭтоНовый() Тогда
					Если ЮрФизЛицо = Перечисления.нсиЮрФизЛицо.ЮрЛицо Тогда
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
						"ВЫБРАТЬ
						|	нсиКонтрагенты.КПП,
						|	нсиКонтрагенты.Код
						|ИЗ
						|	Справочник.нсиКонтрагенты КАК нсиКонтрагенты
						|ГДЕ
						|	нсиКонтрагенты.Ссылка <> &Ссылка
						|	И нсиКонтрагенты.ИНН = &ИНН";
						
						Запрос.УстановитьПараметр("ИНН", ИНН);
						Запрос.УстановитьПараметр("Ссылка", Ссылка);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							Если ВыборкаДетальныеЗаписи.КПП = КПП Тогда
								ТекстСообщения = "Контрагент с таким ИНН и КПП уже существует в системе под кодом "+ВыборкаДетальныеЗаписи.Код;
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
								ТекстСообщения,
								ЭтотОбъект,
								"ИНН",
								,
								Отказ
								);
							Иначе
								ТекстСообщения = "Контрагент с таким же ИНН существует в системе под кодом "+ВыборкаДетальныеЗаписи.Код;
								ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
							КонецЕсли; 
						КонецЦикла;
						
					КонецЕсли;
				КонецЕсли;

			Конецесли;
			
			Если ЮрФизЛицо = Перечисления.нсиЮрФизЛицо.ЮрЛицо Тогда
				
				Если НЕ ПустаяСтрока(КПП) 
					И (ЭтоНовый() ИЛИ ЗначенияРеквизитовВИнформационнойБазе.КПП <> КПП)
					И НЕ РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(КПП, ТекстСообщения) Тогда
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					"КПП",
					,
					Отказ);
					
				КонецЕсли;
				
			Конецесли;
		
			Если ЮрФизЛицо = Перечисления.нсиЮрФизЛицо.ЮрЛицо Тогда
				
				Если НЕ ПустаяСтрока(КодПоОКПО) 
					И (ЭтоНовый() ИЛИ ЗначенияРеквизитовВИнформационнойБазе.КодПоОКПО <> КодПоОКПО)
					И НЕ РегламентированныеДанныеКлиентСервер.КодПоОКПОСоответствуетТребованиям(КодПоОКПО,ЭтоЮрЛицо,ТекстСообщения) Тогда
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					"КодПоОкпо",
					,
					Отказ);
					
				КонецЕсли;
					
			КонецЕсли;
		КонецЕсли;
		
		Если Не ПустаяСтрока(ОГРН) и Константы.нсиПроверятьОГРНнаКонтрольноеЧисло.Получить()  
			И (ЭтоНовый() Или ЗначенияРеквизитовВИнформационнойБазе.ОГРН <> ОГРН)
			И Не РегламентированныеДанныеКлиентСервер.ОГРНСоответствуетТребованиям(ОГРН, ЭтоЮрЛицо, ТекстСообщения) Тогда

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ОГРН",, Отказ);

		Конецесли;		
		
// ITRR Кутья АА отключено
		//Если ЮрФизЛицо = Перечисления.нсиЮрФизЛицо.ФизЛицо 
		//	И Не ЗначениеЗаполнено(ДокументУдостоверяющийЛичность) Тогда 
		//	Отказ = Истина;
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		//		"Для физ. лица должен быть заполнен документ удостоверяющий личность.",, "ДокументУдостоверяющийЛичность");
		//КонецЕсли;	
	КонецЕсли;
	
	//фыв++    пока так, нужно уточнить у отдела МД
	//Если СписокОрганизацийSAP.Количество()=0 Тогда
	//	Индекс=ПроверяемыеРеквизиты.Найти("КаналСбытаSAP");
	//	Если НЕ Индекс=Неопределено Тогда
	//		ПроверяемыеРеквизиты.Удалить(Индекс);
	//	КонецЕсли;
	//	
	//	Индекс=ПроверяемыеРеквизиты.Найти("СекторSAP");
	//	Если НЕ Индекс=Неопределено Тогда
	//		ПроверяемыеРеквизиты.Удалить(Индекс);
	//	КонецЕсли;
	//КонецЕсли;
	//--
	
// ITRR Кутья АА

	MDMСервер.ПроверитьСвязанныйСправочник(Ссылка, "нсиБанковскиеСчета", "ОсновнойБанковскийСчет",ПроверяемыеРеквизиты);
	MDMСервер.ПроверитьСвязанныйСправочник(Ссылка, "алкПунктыРазгрузки", "алкОсновнойПунктРазгрузки",ПроверяемыеРеквизиты);
	MDMСервер.ПроверитьСвязанныйСправочник(Ссылка, "алкЛицензии", "ОсновнаяЛицензия",ПроверяемыеРеквизиты);

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеДоговоры.ДоговорКонтрагента КАК ДоговорКонтрагента
		|ПОМЕСТИТЬ ОсновныеДоговораКонтрагентов
		|ИЗ
		|	&ОсновныеДоговоры КАК ОсновныеДоговоры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Организация,
		|	СУММА(ВЫБОР
		|			КОГДА ОсновныеДоговораКонтрагентов.ДоговорКонтрагента ЕСТЬ NULL
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК Счетчик
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОсновныеДоговораКонтрагентов КАК ОсновныеДоговораКонтрагентов
		|		ПО (ОсновныеДоговораКонтрагентов.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка)
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Владелец
		|	И ДоговорыКонтрагентов.ЭтоГруппа = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоговорыКонтрагентов.Организация";
	
	Запрос.УстановитьПараметр("Владелец", Ссылка);
	Запрос.УстановитьПараметр("ОсновныеДоговоры", ОсновныеДоговораКонтрагентов.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Счетчик = 0 Тогда
			ТекстСообщения = "По организации "+ВыборкаДетальныеЗаписи.Организация+" не установлен основной договор.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура - устанавливает для дублей новый эталон.
// храним 2х-уровневую таблицу мэппинга.
//
Процедура ПеренестиДублиКНовомуЭталону() Экспорт
	
	Если Не ТипПозиции = Перечисления.нсиТипыПозицийСправочников.ДублирующаяПозиция Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ Ссылка ИЗ Справочник.нсиКонтрагенты ГДЕ ЭталоннаяПозиция = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Справочник.нсиКонтрагенты");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДетальныеЗаписи.Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();         		
		
		ИзменяемыйДубль = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ИзменяемыйДубль.ЭталоннаяПозиция = ЭталоннаяПозиция;
		ИзменяемыйДубль.Записать();
				
	КонецЦикла;  	
	
КонецПроцедуры	

#КонецОбласти

