
#Область ПрограммныйИнтерфейс

// Процедура копирует характеристики из класса ПредметОригинал, копирует шаблон наименования.
// Параметры:
//	ПредметОригинал - ссылка на класс, с которого копируются характеристики.
//
Процедура СкопироватьХарактеристикиОригинала(ПредметОригинал) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	нсиХарактеристикиУниверсальногоСправочника.Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.нсиХарактеристикиУниверсальногоСправочника КАК нсиХарактеристикиУниверсальногоСправочника
		|ГДЕ
		|	нсиХарактеристикиУниверсальногоСправочника.Класс = &ПредметОригинал";
	
	Запрос.УстановитьПараметр("ПредметОригинал", ПредметОригинал);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		// Копия характеристики.
		НоваяХарактеристика = ПланыВидовХарактеристик.нсиХарактеристикиМТР.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НоваяХарактеристика, Выборка.Ссылка,, "Код,Класс,Родитель");
		НоваяХарактеристика.УстановитьНовыйКод();
		Если ЭтоНовый() тогда
			НоваяХарактеристика.Класс = ПолучитьСсылкуНового();
		Иначе 	
			НоваяХарактеристика.Класс = Ссылка;
		КонецЕсли;
		НоваяХарактеристика.Записать();
		
		// Замена характеристик в шаблонах наименований.
		НайденыеСтроки = НастройкиШаблоновНаименований.НайтиСтроки(Новый Структура("ЭлементНаименования", Выборка.Ссылка));
		Для Каждого НайденнаяСтрока Из НайденыеСтроки цикл
			НайденнаяСтрока.ЭлементНаименования = НоваяХарактеристика.Ссылка;
		КонецЦикла;	
	КонецЦикла;
		
КонецПроцедуры	

// Процедура копирует или изменяет характеристки текущего класса из класса ПредметМакет.
// Параметры:
//	ПредметМакет - ссылка на класс - источник характеристик.
//
Процедура ОбновитьХарактеристикиПоМакету(ПредметМакет) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	нсиХарактеристикиУниверсальногоСправочникаМакет.Ссылка КАК Макет,
		|	нсиХарактеристикиУниверсальногоСправочникаОригинал.Ссылка КАК Оригинал,
		|   нсиХарактеристикиУниверсальногоСправочникаОригинал.ПометкаУдаления КАК Порядок
		|ИЗ
		|	ПланВидовХарактеристик.нсиХарактеристикиУниверсальногоСправочника КАК нсиХарактеристикиУниверсальногоСправочникаМакет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.нсиХарактеристикиУниверсальногоСправочника КАК нсиХарактеристикиУниверсальногоСправочникаОригинал
		|		ПО нсиХарактеристикиУниверсальногоСправочникаМакет.НаименованиеПоКлассификатору = нсиХарактеристикиУниверсальногоСправочникаОригинал.НаименованиеПоКлассификатору
		|			И (нсиХарактеристикиУниверсальногоСправочникаОригинал.Класс = &ПредметОригинал)
		|ГДЕ
		|	нсиХарактеристикиУниверсальногоСправочникаМакет.Класс = &ПредметМакет
		|
		|УПОРЯДОЧИТЬ ПО
		|	Макет,
		|	Порядок
		|ИТОГИ ПО
		|	Макет";
	
	Запрос.УстановитьПараметр("ПредметМакет", ПредметМакет);
	Запрос.УстановитьПараметр("ПредметОригинал", Ссылка);
	
	ВыборкаМакет = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМакет.Следующий() Цикл
		
		ВыборкаОригинал = ВыборкаМакет.Выбрать();
		Если ВыборкаОригинал.Следующий() Тогда 
			
			Если ВыборкаОригинал.Оригинал = NULL тогда
				ХарактеристикаОбъект = ПланыВидовХарактеристик.нсиХарактеристикиУниверсальногоСправочника.СоздатьЭлемент();
				ЗаполнитьЗначенияСвойств(ХарактеристикаОбъект, ВыборкаМакет.Макет,, "Код,Класс,Родитель");
				ХарактеристикаОбъект.УстановитьНовыйКод();
				ХарактеристикаОбъект.Класс = Ссылка;
			Иначе 
				ХарактеристикаОбъект = ВыборкаОригинал.Оригинал.ПолучитьОбъект();
				ЗаполнитьЗначенияСвойств(ХарактеристикаОбъект, ВыборкаМакет.Макет,, "Код,Класс,Родитель");
			КонецЕсли;
			
			ХарактеристикаОбъект.Записать();
			
			// Замена характеристик в шаблонах наименований.
			НайденыеСтроки = НастройкиШаблоновНаименований.НайтиСтроки(Новый Структура("ЭлементНаименования", ВыборкаМакет.Макет));
			Для Каждого НайденнаяСтрока Из НайденыеСтроки цикл
				НайденнаяСтрока.ЭлементНаименования = ХарактеристикаОбъект.Ссылка;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры	

// Процедура удаляет характеристики объекта, если это макет.
//
Процедура УдалитьХарактеристики() Экспорт
	
	Если Не ЭтоМакет тогда
		Возврат
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	нсиХарактеристикиУниверсальногоСправочника.Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.нсиХарактеристикиУниверсальногоСправочника КАК нсиХарактеристикиУниверсальногоСправочника
		|ГДЕ
		|	нсиХарактеристикиУниверсальногоСправочника.Класс = &Предмет";
	
	Запрос.УстановитьПараметр("Предмет", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОбъектДляУдаления = Выборка.Ссылка.ПолучитьОбъект();	
		ОбъектДляУдаления.ОбменДанными.Загрузка = Истина;
		ОбъектДляУдаления.Удалить();
	КонецЦикла;
		
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиСобытийОбъекта

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.нсиУниверсальныйКлассификатор")
		И ДанныеЗаполнения.Владелец = Владелец Тогда
		
		// заполнение реквизитов
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения, , "Владелец,Родитель,Код,ЭтоМакет,Идентификатор");
		
		// заполнение табличных частей
		пМетаданные = нсиУниверсальноеХранилище.ПолучитьМетаданные(Владелец);

		ДополнительныеСвойства.Вставить("пМетаданные",пМетаданные);
		
		пОбъект = нсиУниверсальноеХранилище.ПолучитьОбъект(пМетаданные,ДанныеЗаполнения);
		ДополнительныеСвойства.Вставить("Данные",пОбъект);
		
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	нсиУниверсальноеХранилище.МодульОбъектаПередЗаписью(ЭтотОбъект,Отказ);
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли; 

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли; 
	
	нсиУниверсальноеХранилище.МодульОбъектаПриЗаписи(ЭтотОбъект);
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли; 
	
	нсиУниверсальноеХранилище.УдалитьОбъект(Ссылка);
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Идентификатор = Справочники.нсиУниверсальныйКлассификатор.ПустаяСсылка().УникальныйИдентификатор();
КонецПроцедуры

#КонецОбласти

