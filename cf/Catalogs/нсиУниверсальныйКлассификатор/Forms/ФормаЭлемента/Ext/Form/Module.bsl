
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	нсиУниверсальноеХранилищеФормыСервер.ПриСозданииНаСервере(ЭтаФорма);
	
	РегистрыСведений.нсиСтатусыОбработкиСправочников.ОпределитьДоступКФорме(
		Объект.Ссылка, ЭтотОбъект.ТолькоПросмотр, Объект.ЭтоМакет);
		
	нсиРаботаСФормамиСервер.УправлениеВидимостьюОбработкиЗаявок(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) и Объект.ЭтоМакет И пМетаданные.ИспользоватьЗаявки Тогда
		нсиРаботаСФормамиСервер.УстановитьДоступностьПолей(ЭтаФорма, Объект.Ссылка);
	КонецЕсли;	
	
	нсиВыделениеИзменений.ОформитьВыделениеИзменений(ЭтотОбъект);
	
	нсиРаботаСФормамиСервер.УстановитьВидимостьКодов(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	нсиУниверсальноеХранилищеФормыСервер.ПередЗаписьюНаСервере(ЭтаФорма,ТекущийОбъект)
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	нсиУниверсальноеХранилищеФормыСервер.ПриЧтенииНаСервере(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.ЭтоМакет Тогда 
		КлючеваяОперация = "Запись макета элемента универсального классификатора """+Строка(Объект.Владелец)+"""";
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	Иначе
		КлючеваяОперация = "Запись элемента универсального классификатора """+Строка(Объект.Владелец)+"""";
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(КлючеваяОперация);
	КонецЕсли;
	
	Если пМетаданные.СтандартныеРеквизиты.Свойство("Наименование") Тогда 
		Объект.Наименование = ЭтаФорма["Наименование"];
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	нсиУниверсальноеХранилищеФормыСервер.ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма,Отказ);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	нсиВыделениеИзменений.ОформитьВыделениеИзменений(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьШаблоны(Элементы.НастройкиШаблоновНаименований);
	ОбновитьШаблоны(Элементы.НастройкиШаблоновПолногоНаименования);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_СтрокуВверх(Команда)
	Имя = Сред(Команда.Имя, 25);
	ТЧ = ЭтаФорма[Имя];
	ТекСтрока = Элементы[Имя].ТекущаяСтрока;
	Если ТекСтрока=Неопределено Тогда
		Возврат;
	КонецЕсли;
	Индекс = ТЧ.Индекс(ТЧ.НайтиПоИдентификатору(ТекСтрока));
	Если Индекс=0 Тогда
		Возврат;
	КонецЕсли;
	Код = ТЧ[Индекс-1].Код;
	ТЧ[Индекс-1].Код = ТЧ[Индекс].Код;
	ТЧ[Индекс].Код = Код;
	ТЧ.Сдвинуть(Индекс, -1);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СтрокуВниз(Команда)
	Имя = Сред(Команда.Имя, 24);
	ТЧ = ЭтаФорма[Имя];
	ТекСтрока = Элементы[Имя].ТекущаяСтрока;
	Если ТекСтрока=Неопределено Тогда
		Возврат;
	КонецЕсли;
	Индекс = ТЧ.Индекс(ТЧ.НайтиПоИдентификатору(ТекСтрока));
	Если Индекс=ТЧ.Количество()-1 Тогда
		Возврат;
	КонецЕсли;
	Код = ТЧ[Индекс+1].Код;
	ТЧ[Индекс+1].Код = ТЧ[Индекс].Код;
	ТЧ[Индекс].Код = Код;
	ТЧ.Сдвинуть(Индекс, 1);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СортироватьВозр(Команда)
	Имя = Сред(Команда.Имя, 29);
	ТЧ = ЭтаФорма[Имя];
	ТекКолонка = Элементы[Имя].ТекущийЭлемент;
	ИмяРеквизита = Сред(ТекКолонка.Имя, СтрДлина(Имя)+1);
	ТЧ.Сортировать(ИмяРеквизита+" Возр");
	Номер = 1;
	Для каждого СтрокаТЧ Из ТЧ Цикл
		СтрокаТЧ.Код = Прав("    "+Формат(Номер, "ЧГ="), 4);
		Номер = Номер+1;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СортироватьУбыв(Команда)
	Имя = Сред(Команда.Имя, 29);
	ТЧ = ЭтаФорма[Имя];
	ТекКолонка = Элементы[Имя].ТекущийЭлемент;
	ИмяРеквизита = Сред(ТекКолонка.Имя, СтрДлина(Имя)+1);
	ТЧ.Сортировать(ИмяРеквизита+" Убыв");
	Номер = 1;
	Для каждого СтрокаТЧ Из ТЧ Цикл
		СтрокаТЧ.Код = Прав("    "+Формат(Номер, "ЧГ="), 4);
		Номер = Номер+1;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПоказатьОтличия(Команда)
	
	ПараметрыСравненияТаблиц = ВыделениеИзменений_ПараметрыСравненияТаблиц(Команда.Имя);
	
	Если ПараметрыСравненияТаблиц = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.нсиФормаСравненияТабличныхЧастей", ПараметрыСравненияТаблиц, ЭтаФорма);
	
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблица

&НаКлиенте
Процедура Подключаемый_ТаблицаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Копирование Тогда
		Элемент.ТекущиеДанные.пСсылка = нсиУниверсальноеХранилище.ПолучитьПустойИдентификатор();
	КонецЕсли;
	Если НоваяСтрока Тогда
		ТЧ = ЭтаФорма[Элемент.Имя];
		Элемент.ТекущиеДанные.Код = Прав("    "+Формат(ТЧ.Количество(), "ЧГ="), 4);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТаблицаПередУдалением(Элемент, Отказ)
	ТЧ = ЭтаФорма[Элемент.Имя];
	Индекс = ТЧ.Индекс(ТЧ.НайтиПоИдентификатору(Элемент.ТекущаяСтрока))+1;
	Пока Индекс<ТЧ.Количество() Цикл
		ТЧ[Индекс].Код = Прав("    "+Формат(Индекс, "ЧГ="), 4);
		Индекс = Индекс+1;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьПримеры(Команда)

	ОбновитьПримеры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиШаблоновНаименований

&НаКлиенте
Процедура НастройкиШаблоновНаименованийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока тогда
		ОпределитьТипЭлементаНаименования(Элемент.ТекущаяСтрока);
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Использование = "Наименование";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НастройкиШаблоновНаименованийТипЭлементаПриИзменении(Элемент)
	
	ОпределитьТипЭлементаНаименования(Элементы.НастройкиШаблоновНаименований.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиШаблоновНаименованийПриИзменении(Элемент)
	
	ОбновитьШаблоны(Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиШаблоновПолногоНаименования

&НаКлиенте
Процедура НастройкиШаблоновПолногоНаименованияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока тогда
		ОпределитьТипЭлементаПолногоНаименования(Элемент.ТекущаяСтрока);
	КонецЕсли;	
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Использование = "ПолноеНаименование";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаШаблоновПолногоНаименованияТипЭлементаПриИзменении(Элемент)
	
	ОпределитьТипЭлементаПолногоНаименования(Элементы.НастройкиШаблоновПолногоНаименования.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиШаблоновПолногоНаименованияПриИзменении(Элемент)
	
	ОбновитьШаблоны(Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОпределитьТипЭлементаНаименования(ИдСтроки)
	ДанныеСтроки = Объект.НастройкиШаблоновНаименований.НайтиПоИдентификатору(ИдСтроки);
	
	Если Элементы.НастройкиШаблоновНаименованийЭлементНаименования.СписокВыбора.Количество() тогда
		Элементы.НастройкиШаблоновНаименованийЭлементНаименования.СписокВыбора.Очистить();
	КонецЕсли;	
	Элементы.НастройкиШаблоновНаименованийЭлементНаименования.РежимВыбораИзСписка = Ложь;
	
	ЭлементНаименованияДоОпределенияТипа = ДанныеСтроки.ЭлементНаименования;
	
	Если ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.Реквизит") тогда
		
		ОписаниеТипа = Новый ОписаниеТипов("Строка");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		
		Для Каждого Строка Из СписокРеквизитов(Объект.Владелец) Цикл
			Элементы.НастройкиШаблоновНаименованийЭлементНаименования.СписокВыбора.Добавить(Строка.Значение, Строка.Представление);	
		КонецЦикла;
		Элементы.НастройкиШаблоновНаименованийЭлементНаименования.РежимВыбораИзСписка = Истина;
		
		Если ЗначениеЗаполнено(ДанныеСтроки.ЭлементНаименования) 
			И Элементы.НастройкиШаблоновНаименованийЭлементНаименования.СписокВыбора.НайтиПоЗначению(ДанныеСтроки.ЭлементНаименования) = Неопределено тогда
			ДанныеСтроки.ЭлементНаименования = "";	
		КонецЕсли;	
		
	ИначеЕсли ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.Характеристика") тогда
		
		ОписаниеТипа = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.нсиХарактеристикиУниверсальногоСправочника");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		Элементы.НастройкиШаблоновНаименованийЭлементНаименования.ОграничениеТипа = ОписаниеТипа;

		ЗаполнитьПараметрыВыбораЭлемента(Элементы.НастройкиШаблоновНаименованийЭлементНаименования, "Отбор.Класс", Объект.Ссылка);
		
	ИначеЕсли ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.ПредопределенноеНаименование") тогда		
		
		ОписаниеТипа = Новый ОписаниеТипов("Строка");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		Элементы.НастройкиШаблоновНаименованийЭлементНаименования.ОграничениеТипа = ОписаниеТипа;

		Если ЗначениеЗаполнено(ДанныеСтроки.ЭлементНаименования) 
			И НЕ ТипЗнч(ДанныеСтроки.ЭлементНаименования) = ТипЗнч(ЭлементНаименованияДоОпределенияТипа) тогда
			ДанныеСтроки.ЭлементНаименования = "";		
		КонецЕсли;	
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ЭлементНаименованияДоОпределенияТипа) 
		И НЕ ДанныеСтроки.ЭлементНаименования = ЭлементНаименованияДоОпределенияТипа тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Значение очищено. Элемент наименования '%1' не соответствует типу элемента.", ЭлементНаименованияДоОпределенияТипа),, "НастройкиШаблоновНаименований["+(ДанныеСтроки.НомерСтроки-1)+"].ЭлементНаименования", "Объект");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьТипЭлементаПолногоНаименования(ИдСтроки)
	ДанныеСтроки = Объект.НастройкиШаблоновНаименований.НайтиПоИдентификатору(ИдСтроки);
	
	Если Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.СписокВыбора.Количество() тогда
		Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.СписокВыбора.Очистить();
	КонецЕсли;	
	Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.РежимВыбораИзСписка = Ложь;
	
	ЭлементНаименованияДоОпределенияТипа = ДанныеСтроки.ЭлементНаименования;
	
	Если ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.Реквизит") тогда
		
		ОписаниеТипа = Новый ОписаниеТипов("Строка");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		
		Для Каждого Строка Из СписокРеквизитов(Объект.Владелец) Цикл
			Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.СписокВыбора.Добавить(Строка.Значение, Строка.Представление);	
		КонецЦикла;
		Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.РежимВыбораИзСписка = Истина;
		
		Если ЗначениеЗаполнено(ДанныеСтроки.ЭлементНаименования) 
			И Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.СписокВыбора.НайтиПоЗначению(ДанныеСтроки.ЭлементНаименования) = Неопределено тогда
			ДанныеСтроки.ЭлементНаименования = "";	
		КонецЕсли;	
		
	ИначеЕсли ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.Характеристика") тогда
		
		ОписаниеТипа = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.нсиХарактеристикиУниверсальногоСправочника");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.ОграничениеТипа = ОписаниеТипа;

		ЗаполнитьПараметрыВыбораЭлемента(Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования, "Отбор.Класс", Объект.Ссылка);
		
	ИначеЕсли ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.ПредопределенноеНаименование") тогда		
		
		ОписаниеТипа = Новый ОписаниеТипов("Строка");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.ОграничениеТипа = ОписаниеТипа;

		Если ЗначениеЗаполнено(ДанныеСтроки.ЭлементНаименования) 
			И НЕ ТипЗнч(ДанныеСтроки.ЭлементНаименования) = ТипЗнч(ЭлементНаименованияДоОпределенияТипа) тогда
			ДанныеСтроки.ЭлементНаименования = "";		
		КонецЕсли;	
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ЭлементНаименованияДоОпределенияТипа) 
		И НЕ ДанныеСтроки.ЭлементНаименования = ЭлементНаименованияДоОпределенияТипа тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Значение очищено. Элемент наименования '%1' не соответствует типу элемента.", ЭлементНаименованияДоОпределенияТипа),, "НастройкиШаблоновНаименований["+(ДанныеСтроки.НомерСтроки-1)+"].ЭлементНаименования", "Объект");
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокРеквизитов(Классификатор)
	
	СписокРеквизитов = Новый СписокЗначений;
	
	СписокРеквизитов.Добавить("Код", "Код");
	СписокРеквизитов.Добавить("Наименование", "Наименование");
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	нсиВидыСправочниковРеквизиты.Имя,
		|	нсиВидыСправочниковРеквизиты.Подсказка
		|ИЗ
		|	Справочник.нсиВидыСправочников.Реквизиты КАК нсиВидыСправочниковРеквизиты
		|ГДЕ
		|	нсиВидыСправочниковРеквизиты.Ссылка.Классификатор = &Классификатор"
	);
	Запрос.УстановитьПараметр("Классификатор",Классификатор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокРеквизитов.Добавить(Выборка.Имя, Выборка.Подсказка);
	КонецЦикла;	
	
	Возврат СписокРеквизитов
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПараметрыВыбораЭлемента(Элемент, Отбор, Значение)
	
	НовыйПараметр = Новый ПараметрВыбора(Отбор, Значение);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	
	Элемент.ПараметрыВыбора = НовыеПараметры;
	
КонецПроцедуры

&НаСервере
Функция ВыделениеИзменений_ПараметрыСравненияТаблиц(ИмяКоманды)
	Возврат нсиВыделениеИзменений.ПараметрыСравненияТаблиц(ЭтотОбъект, ИмяКоманды);
КонецФункции

&НаКлиенте
Процедура ПримерПриИзменении(Элемент)
	
	ОбновитьПримеры();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьШаблоны(Элемент)
	
	Если Элемент = Элементы.НастройкиШаблоновНаименований Тогда
		
		ШаблонНаименования = "";
		
		Для Каждого Строка Из Объект.НастройкиШаблоновНаименований Цикл
			
			Если Строка.Использование <> "Наименование" Тогда
				Продолжить;
			КонецЕсли;
			
			Если ПредопределенноеНаименование(Строка.ТипЭлемента) Тогда	
				ШаблонНаименования = ШаблонНаименования 
										+ Строка.ПрефиксЗначения 
										+ Строка.ЭлементНаименования
										+ Строка.ПостфиксЗначения;
			Иначе 
				ШаблонНаименования = ШаблонНаименования 
										+ Строка.ПрефиксЗначения 
										+ "[" 
										+ Строка.ЭлементНаименования
										+ "]" 
										+ Строка.ПостфиксЗначения;
			КонецЕсли;
			
		КонецЦикла;

		ШаблонНаименования = СокрЛП(ШаблонНаименования);
		
	ИначеЕсли Элемент = Элементы.НастройкиШаблоновПолногоНаименования Тогда
		
		ШаблонПолногоНаименования = "";
		
		Для Каждого Строка Из Объект.НастройкиШаблоновНаименований Цикл
			
			Если Строка.Использование <> "ПолноеНаименование" Тогда
				Продолжить;
			КонецЕсли;
			
			Если ПредопределенноеНаименование(Строка.ТипЭлемента) Тогда
				ШаблонПолногоНаименования = ШаблонПолногоНаименования 
										+ Строка.ПрефиксЗначения 
										+ Строка.ЭлементНаименования
										+ Строка.ПостфиксЗначения;
			Иначе 
				ШаблонПолногоНаименования = ШаблонПолногоНаименования 
										+ Строка.ПрефиксЗначения 
										+ "[" 
										+ Строка.ЭлементНаименования
										+ "]" 
										+ Строка.ПостфиксЗначения;
			КонецЕсли;										
									
		КонецЦикла;
		
		ШаблонПолногоНаименования = СокрЛП(ШаблонПолногоНаименования);

	КонецЕсли;
	
	ОбновитьПримеры();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПримеры()
	
	Если Не Пример.Пустая() Тогда
		коллекция 					= нсиФормированиеНаименований.ПолучитьНаименованиеПоШаблонуУниверсальноеХранилище(Пример, Пример, Пример.Класс, Пример.ТехническиеХарактеристики.Выгрузить(), Объект.НастройкиШаблоновНаименований.Выгрузить());
		ПримерНаименования 			= коллекция.Наименование;
		ПримерПолногоНаименования 	= коллекция.ПолноеНаименование;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПримерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ВидСправочникаПримера.Пустая() Тогда
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран вид справочника",,"ВидСправочникаПримера",,);
	 КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПредопределенноеНаименование(ТипЭлемента)
	
	Возврат ?(ТипЭлемента = Перечисления.нсиТипыЭлементовНаименования.ПредопределенноеНаименование, Истина, Ложь);
	
КонецФункции

#КонецОбласти
