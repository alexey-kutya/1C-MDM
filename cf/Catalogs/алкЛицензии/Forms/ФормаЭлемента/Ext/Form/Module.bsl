
&НаКлиенте
Процедура СерияПриИзменении(Элемент)
	ИзменитьНаименование()
КонецПроцедуры

&НаКлиенте
Процедура НомерПриИзменении(Элемент)
	ИзменитьНаименование()
КонецПроцедуры

&НаКлиенте
Процедура РегистрационныйНомерПриИзменении(Элемент)
	ИзменитьНаименование()
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаСрокаДействияПриИзменении(Элемент)
	ИзменитьНаименование()
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияСрокаДействияПриИзменении(Элемент)
	ИзменитьНаименование()
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНаименование()

	Объект.Наименование = СформироватьНаименование();

КонецПроцедуры

Функция СформироватьНаименование() Экспорт

	СтрокаНаименования = "";
	
	Если ЗначениеЗаполнено(Объект.Серия) Тогда
		СтрокаНаименования = СтрокаНаименования + ?(СокрЛП(СтрокаНаименования)="","",", ")
			+ СокрЛП(Объект.Серия);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Номер) Тогда
		СтрокаНаименования = СтрокаНаименования + ?(СокрЛП(СтрокаНаименования)="",""," ")
			+ СокрЛП(Объект.Номер);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда
		СтрокаНаименования = СтрокаНаименования + ?(СокрЛП(СтрокаНаименования)="",""," ")
			+ "рег.№ "+СокрЛП(Объект.РегистрационныйНомер);
	КонецЕсли;
	
	СтрокаНаименования = СтрокаНаименования + ?(СокрЛП(СтрокаНаименования)="",""," ")
		+ "("+Формат(Объект.ДатаНачалаСрокаДействия, "ДФ=dd.MM.yy")+"-"+Формат(Объект.ДатаОкончанияСрокаДействия, "ДФ=dd.MM.yy")+")";
	
	Возврат СтрокаНаименования;

КонецФункции // СформироватьНаименование()

&НаКлиенте
Процедура ДатаОкончанияСрокаДействияДОПриИзменении(Элемент)
	
	Если Объект[Элемент.Имя] Тогда
		Элемент.Заголовок = "до";
		Элемент.Подсказка = "до даты не включая";
	Иначе
		Элемент.Заголовок = "по";
		Элемент.Подсказка = "по дату включительно";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ДатаОкончанияСрокаДействияДО Тогда
		Элементы.ДатаОкончанияСрокаДействияДО.Заголовок = "до";
		Элементы.ДатаОкончанияСрокаДействияДО.Подсказка = "до даты не включая";
	Иначе
		Элементы.ДатаОкончанияСрокаДействияДО.Заголовок = "по";
		Элементы.ДатаОкончанияСрокаДействияДО.Подсказка = "по дату включительно";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьОтборПоВладельцу(ПунктыРазгрузки);
	
	// КутьяАА ITRR <<
	Если Параметры.Ключ.Пустая() Тогда
		Объект.ПолнаяСинхронизацияMDM = Истина;
	КонецЕсли; 
	GUID_MDM = Объект.Ссылка.УникальныйИдентификатор();
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоВладельцу(Список)

	//Если Список.Отбор.Элементы.Количество() Тогда
	//	Отбор = Список.Отбор.Элементы[0];
	//Иначе
	//	Отбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	Отбор.ЛевоеЗначение = Список.Отбор.ДоступныеПоляОтбора.Элементы.Найти("Владелец").Поле;
	//КонецЕсли; 
	//Отбор.ПравоеЗначение = Объект.Владелец;

	Если Список.Отбор.Элементы.Количество() Тогда
		Отбор = Список.Отбор.Элементы[0];
	Иначе
		Отбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Список.Отбор.ДоступныеПоляОтбора.Элементы.Найти("алкОсновнаяЛицензия").Поле;
	КонецЕсли; 
	Отбор.ПравоеЗначение = Объект.Ссылка;
	
КонецПроцедуры // 	УстановитьОтборПоВладельцу()


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	//КутьяАА ITRR <<
	УстановитьОтборПоВладельцу(ПунктыРазгрузки);
	
	УИ = Объект.Ссылка.УникальныйИдентификатор();
	Если НЕ GUID_MDM = УИ Тогда
		GUID_MDM = УИ;
	КонецЕсли; 
	//>>
КонецПроцедуры

