
#Область СлужебныйПрограммныйИнтерфейс

////////////////////////////////////////////////////////
// Выделение изменений

Функция СписокРеквизитовВыделенияИзменений() Экспорт
	Возврат Неопределено	
КонецФункции	

Функция СписокРеквизитовИсключенийВыделенияИзменений() Экспорт
	Возврат "Код"
КонецФункции	

Функция НастройкиОформленияВыделенияИзмененийТабличныхЧастей() Экспорт
	
	Настройки_ДополнительнаяКлассификация = Новый Структура;
	Настройки_ДополнительнаяКлассификация.Вставить("КлючСтроки", "ВидКлассификатора,Класс");
	Настройки_ДополнительнаяКлассификация.Вставить("Реквизиты" , "");
	Настройки_ДополнительнаяКлассификация.Вставить("Элемент"   , "ДополнительнаяКлассификация");
	
	НастройкиОформления = Новый Структура;
	НастройкиОформления.Вставить("ДополнительнаяКлассификация"   , Настройки_ДополнительнаяКлассификация);
	
	Возврат НастройкиОформления
	
КонецФункции

#КонецОбласти

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//Поля.Добавить("LocalID");
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//Представление = СокрЛП(Данные.LocalID);
КонецПроцедуры

#Область GlobalInterface

Функция РеквизитыДляЗапросаНового() Экспорт 

	РеквизитыДляЗапросаНового = Новый Структура;
	РеквизитыДляЗапросаНового.Вставить("BrandGroup",     Новый Структура("ПолеНового, АтрибутLocal, РеквизитАтрибута", "BrandGroupNew", "LocalBrand", "НаименованиеEN"));
	РеквизитыДляЗапросаНового.Вставить("Brand",          Новый Структура("ПолеНового, АтрибутLocal, РеквизитАтрибута", "BrandNew", "LocalBrand,РазновидностьВкус", "НаименованиеEN"));
	РеквизитыДляЗапросаНового.Вставить("AlcoholContent", Новый Структура("ПолеНового, АтрибутLocal, РеквизитАтрибута", "AlcoholContentNew", "LocalAlcoholContent", "AlcoholContentNumber"));
	РеквизитыДляЗапросаНового.Вставить("Volume",         Новый Структура("ПолеНового, АтрибутLocal, РеквизитАтрибута", "VolumeNew", "LocalVolume", "SizeNumber"));
	РеквизитыДляЗапросаНового.Вставить("Packing",        Новый Структура("ПолеНового, АтрибутLocal, РеквизитАтрибута", "PackingNew", "LocalPacking", "НаименованиеEN"));
	РеквизитыДляЗапросаНового.Вставить("Amount",         Новый Структура("ПолеНового, АтрибутLocal, РеквизитАтрибута", "AmountNew", "LocalAmount", "НаименованиеEN"));

	Возврат РеквизитыДляЗапросаНового;
	
КонецФункции // РеквизитыДляЗапросаНового()

Функция АтрибутыGlobal() Экспорт 

	АтрибутыGlobal = Новый Структура;
	АтрибутыGlobal.Вставить("BrandGroup", Новый Структура("Catalog, IsGroup", "GlobalBrand", Истина));
	АтрибутыGlobal.Вставить("Brand", Новый Структура("Catalog, IsGroup", "GlobalBrand", Ложь));
	АтрибутыGlobal.Вставить("Volume", Новый Структура("Catalog, IsGroup", "GlobalVolume", Ложь));
	АтрибутыGlobal.Вставить("AlcoholContent", Новый Структура("Catalog, IsGroup", "GlobalAlcoholContent", Ложь));
	АтрибутыGlobal.Вставить("Amount", Новый Структура("Catalog, IsGroup", "GlobalAmount", Ложь));
	АтрибутыGlobal.Вставить("Packing", Новый Структура("Catalog, IsGroup", "GlobalPacking", Ложь));
	
	Возврат АтрибутыGlobal;
	
КонецФункции // РеквизитыДляЗапросаНового()

Функция ИдентификаторыGlobal() Экспорт 

	ИдентификаторыGlobal = Новый Структура;
	ИдентификаторыGlobal.Вставить("GlobalID", "GlobalID");
	ИдентификаторыGlobal.Вставить("GlobalName", "Наименование");
	
	Возврат ИдентификаторыGlobal;
	
КонецФункции // РеквизитыДляЗапросаНового()

Функция ПоляАтрибутовDataSet() Экспорт 

	ПоляАтрибутовDataSet = Новый Структура;
	ПоляАтрибутовDataSet.Вставить("BrandGroup", Новый Структура("BrandGroupCode, BrandGroupName"));
	ПоляАтрибутовDataSet.Вставить("Brand", Новый Структура("BrandCode, BrandName"));
	ПоляАтрибутовDataSet.Вставить("Volume", Новый Структура("VolumeCode, VolumeValue"));
	ПоляАтрибутовDataSet.Вставить("AlcoholContent", Новый Структура("AlcoholContentCode, AlcoholContentValue"));
	ПоляАтрибутовDataSet.Вставить("Amount", Новый Структура("AmountCode, AmountName"));
	ПоляАтрибутовDataSet.Вставить("Packing", Новый Структура("PackingCode, PackingName"));
	
	Возврат ПоляАтрибутовDataSet;
	
КонецФункции // РеквизитыДляЗапросаНового()

Функция ЧисловыеПоляDataSet() Экспорт 

	Возврат Новый Структура("VolumeValue, AlcoholContentValue");
	
КонецФункции 

Функция СоответствияGlobalLocal() Экспорт 

	СоответствияGlobalLocal = Новый Структура;
	СоответствияGlobalLocal.Вставить("BrandGroup", Новый Структура("MappingTable,ИзмеренияLocal,ИзмерениеGlobal", "СоответствиеБрэндовИРазновидностейВкусов","LocalBrand", "Brand"));
	СоответствияGlobalLocal.Вставить("Brand", Новый Структура("MappingTable,ИзмеренияLocal,ИзмерениеGlobal", "СоответствиеБрэндовИРазновидностейВкусов","LocalBrand,РазновидностьВкус", "Brand"));
	СоответствияGlobalLocal.Вставить("Volume", Новый Структура("MappingTable,ИзмеренияLocal,ИзмерениеGlobal", "СоответствиеОбъемы","LocalVolume", "Volume"));
	СоответствияGlobalLocal.Вставить("AlcoholContent", Новый Структура("MappingTable,ИзмеренияLocal,ИзмерениеGlobal", "СоответствиеКрепости","LocalAlcoholContent", "AlcoholContent"));
	СоответствияGlobalLocal.Вставить("Amount", Новый Структура("MappingTable,ИзмеренияLocal,ИзмерениеGlobal", "СоответствиеТипУпаковки","LocalAmount", "Amount"));
	СоответствияGlobalLocal.Вставить("Packing", Новый Структура("MappingTable,ИзмеренияLocal,ИзмерениеGlobal", "СоответствиеМатериалыИФормыТары","LocalPacking", "Packing"));
	
	Возврат СоответствияGlobalLocal;
	
КонецФункции // РеквизитыДляЗапросаНового()

Функция ПоляКодовОтветаGlobal() Экспорт 

	АтрибутыGlobal = Новый Структура;
	АтрибутыGlobal.Вставить("BrandGroup", "BrandGroupCode");
	АтрибутыGlobal.Вставить("Brand", "BrandCode");
	АтрибутыGlobal.Вставить("Volume", "VolumeCode");
	АтрибутыGlobal.Вставить("Factory", "FactoryCode");
	АтрибутыGlobal.Вставить("AlcoholContent", "AlcoholContentCode");
	АтрибутыGlobal.Вставить("Amount", "AmountCode");
	АтрибутыGlobal.Вставить("Packing", "PackingCode");
	
	Возврат АтрибутыGlobal;

КонецФункции // ПоляКодовОтветаGlobal()
 
Функция GetDataSet(Ссылка) Экспорт 

	DataSet = Новый Структура;
	DataSet.Вставить("GUID", Строка(Ссылка.УникальныйИдентификатор()));
	DataSet.Вставить("LocalID", Ссылка.LocalEntity.Код);
	DataSet.Вставить("LocalName", Ссылка.LocalEntity.НаименованиеEN);
	DataSet.Вставить("AlcoholContentCode", ?(ЗначениеЗаполнено(Ссылка.AlcoholContent), Ссылка.AlcoholContent.Код, NULL));
	DataSet.Вставить("AlcoholContentValue", GlobEx.ФорматироватьЧисло(?(ЗначениеЗаполнено(Ссылка.AlcoholContent), Ссылка.AlcoholContent.Value, Ссылка.AlcoholContentNew)));
	DataSet.Вставить("AmountCode", ?(ЗначениеЗаполнено(Ссылка.Amount), Ссылка.Amount.Код, NULL));
	DataSet.Вставить("AmountName", ?(ЗначениеЗаполнено(Ссылка.Amount), Ссылка.Amount.Наименование, Ссылка.AmountNew));
	DataSet.Вставить("BrandCode", ?(ЗначениеЗаполнено(Ссылка.Brand), Ссылка.Brand.Код, NULL));
	DataSet.Вставить("BrandName", ?(ЗначениеЗаполнено(Ссылка.Brand), Ссылка.Brand.Наименование, Ссылка.BrandNew));
	DataSet.Вставить("BrandGroupCode", ?(ЗначениеЗаполнено(Ссылка.BrandGroup), Ссылка.BrandGroup.Код, NULL));
	DataSet.Вставить("BrandGroupName", ?(ЗначениеЗаполнено(Ссылка.BrandGroup), Ссылка.BrandGroup.Наименование, Ссылка.BrandGroupNew));
	DataSet.Вставить("FactoryCode", ?(ЗначениеЗаполнено(Ссылка.Factory), Ссылка.Factory.Код, NULL));
	DataSet.Вставить("FactoryName", ?(ЗначениеЗаполнено(Ссылка.Factory), Ссылка.Factory.Наименование, Ссылка.FactoryNew));
	DataSet.Вставить("LabelDescription", Ссылка.LabelDescription);
	DataSet.Вставить("LabelCode", Ссылка.Label.Код);
	DataSet.Вставить("LabelVersion", Ссылка.LabelVersion);
	DataSet.Вставить("MaterialGroupCode", Ссылка.MaterialType.MaterialGroup.Код);
	DataSet.Вставить("MaterialGroupName", Ссылка.MaterialType.MaterialGroup.Наименование);
	DataSet.Вставить("MaterialTypeCode", Ссылка.MaterialType.Код);
	DataSet.Вставить("MaterialTypeName", Ссылка.MaterialType.Наименование);
	DataSet.Вставить("PackingCode", ?(ЗначениеЗаполнено(Ссылка.Packing), Ссылка.Packing.Код, NULL));
	DataSet.Вставить("PackingName", ?(ЗначениеЗаполнено(Ссылка.Packing), Ссылка.Packing.Наименование, Ссылка.PackingNew));
	DataSet.Вставить("Version", Ссылка.Version);
	DataSet.Вставить("VersionDescription", Ссылка.VersionDescription);
	DataSet.Вставить("VolumeCode", ?(ЗначениеЗаполнено(Ссылка.Volume), Ссылка.Volume.Код, NULL));
	DataSet.Вставить("VolumeValue", GlobEx.ФорматироватьЧисло(?(ЗначениеЗаполнено(Ссылка.Volume), Ссылка.Volume.Value, Ссылка.VolumeNew)));
	
	Возврат DataSet;

КонецФункции // GetDataSet()

Функция ПолучитьСоответствияАтрибутовLocal(Атрибуты) Экспорт 

	Запрос = Новый Запрос;
	
	Для каждого АтрибутGlobal Из АтрибутыGlobal() Цикл
		АтрибутЗначение = Неопределено;
		Атрибуты.Свойство(АтрибутGlobal.Ключ, АтрибутЗначение);
		Запрос.УстановитьПараметр(АтрибутGlobal.Ключ, АтрибутЗначение);
	КонецЦикла;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеБрэндовИРазновидностейВкусов.LocalBrand,
		|	СоответствиеБрэндовИРазновидностейВкусов.РазновидностьВкус
		|ИЗ
		|	РегистрСведений.СоответствиеБрэндовИРазновидностейВкусов КАК СоответствиеБрэндовИРазновидностейВкусов
		|ГДЕ
		|	СоответствиеБрэндовИРазновидностейВкусов.Brand = &Brand
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеМатериалыИФормыТары.LocalPacking
		|ИЗ
		|	РегистрСведений.СоответствиеМатериалыИФормыТары КАК СоответствиеМатериалыИФормыТары
		|ГДЕ
		|	СоответствиеМатериалыИФормыТары.Packing = &Packing
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеКрепости.LocalAlcoholContent
		|ИЗ
		|	РегистрСведений.СоответствиеКрепости КАК СоответствиеКрепости
		|ГДЕ
		|	СоответствиеКрепости.AlcoholContent = &AlcoholContent
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеТипУпаковки.LocalAmount
		|ИЗ
		|	РегистрСведений.СоответствиеТипУпаковки КАК СоответствиеТипУпаковки
		|ГДЕ
		|	СоответствиеТипУпаковки.Amount = &Amount
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеОбъемы.LocalVolume
		|ИЗ
		|	РегистрСведений.СоответствиеОбъемы КАК СоответствиеОбъемы
		|ГДЕ
		|	СоответствиеОбъемы.Volume = &Volume";
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции // ПолучитьТекстЗапросаСоответствияGlobal()

Функция ВыполнитьПроверкуОтвета(ОтветСтрока) Экспорт 

	Результат = Новый Структура;
	
	Если СтрДлина(СокрЛП(ОтветСтрока.GlobalID)) = IDLenght() Тогда
		Результат.Вставить("result", Истина);
	Иначе
		ОписаниеОшибки = "Длина Global ID не соответствует шаблону.";
		Результат.Вставить("error", ОписаниеОшибки);
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции // ВыполнитьПроверкуОтвета()

Функция IDLenght() Экспорт 
	
	Возврат 32;
	
КонецФункции // IDLenght()
 
#КонецОбласти
