
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ВидСпецификации = ПредопределенноеЗначение("Перечисление.ВидыСпецификаций.Сборочная") Тогда
		ЗаполнитьВыходноеИзделиеВШапке();
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.КодВерсии = "00001";
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВыходноеИзделиеВШапке()
	
	Если Объект.ВыходныеИзделия.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТаблицы = Объект.ВыходныеИзделия.Получить(0);
	Объект.Номенклатура			= СтрокаТаблицы.Номенклатура;
	Количество 					= СтрокаТаблицы.Количество;
	ЕдиницаИзмерения 			= СтрокаТаблицы.ЕдиницаИзмерения;
	
КонецПроцедуры // ЗаполнитьВыходноеИзделиеВШапке()


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ЗаполнитьСтрокуВыходныхИзделий();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтрокуВыходныхИзделий()
	
	Если Объект.ВидСпецификации <> ПредопределенноеЗначение("Перечисление.ВидыСпецификаций.Сборочная") Тогда
		Возврат;
	КонецЕсли;
		
	Объект.ВыходныеИзделия.Очистить();
	
	НоваяСтрока = Объект.ВыходныеИзделия.Добавить();
	НоваяСтрока.Номенклатура = Объект.Номенклатура;
	НоваяСтрока.Количество = Количество;
	НоваяСтрока.ЕдиницаИзмерения = ЕдиницаИзмерения;
	
КонецПроцедуры // ПеренестиНоменклатуруВВыходныеИзделия()

&НаКлиенте
Процедура ИсходныеКомплектующиеНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ИсходныеКомплектующие.ТекущиеДанные;
	
	ТекущиеДанные.ЕдиницаИзмерения = НайтиЕдиницуИзмеренияПоБазовойНаСервере(ТекущиеДанные.Номенклатура);;
	ТекущиеДанные.СтатьяЗатрат = GlobalMDM.ПолучитьРеквизитНаСервере(ТекущиеДанные.Номенклатура, "СтатьяЗатрат");
	ТекущиеДанные.ГосНормативПотерь = НайтиГосНормативПотерьНаСервере(ТекущиеДанные.Номенклатура, Объект.ПроизводственнаяПлощадка);
	
КонецПроцедуры

// <Описание функции>
//
// Параметры:
//  Номенклатура  - СправочникСсылка.нсиМТР - Номенклатура
//  ПроизводственнаяПлощадка  - СправочникСсылка.Организации - Производственная площадка
//
// Возвращаемое значение:
//   Число   - значение гос. норматив потерь
//   0       - когда значение не найдено
&НаСервереБезКонтекста
Функция НайтиГосНормативПотерьНаСервере(Номенклатура, ПроизводственнаяПлощадка)

	Результат = 0;
	Если ЗначениеЗаполнено(Номенклатура) 
		И ЗначениеЗаполнено(ПроизводственнаяПлощадка) Тогда
		Отбор = Новый Структура();
		Отбор.Вставить("Производитель", ПроизводственнаяПлощадка);
		МассивСтрок = Номенклатура.РеквизитыПроизводителей.НайтиСтроки(Отбор);
		Если МассивСтрок.Количество() Тогда
			Результат = МассивСтрок[0].ГосНормативПотерь;
		КонецЕсли; 
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // НайтиГосНормативПотерьНаСервере(ТекущиеДанные.Номенклатура, Объект.ПроизводственнаяПлощадка)()
 
&НаСервереБезКонтекста
Функция НайтиЕдиницуИзмеренияПоБазовойНаСервере(НоменклатураСсылка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕдиницыИзмерения.Ссылка
		|ИЗ
		|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		|ГДЕ
		|	ЕдиницыИзмерения.Владелец = &Владелец
		|	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &ЕдиницаПоКлассификатору";
	
	Запрос.УстановитьПараметр("Владелец", НоменклатураСсылка);
	Запрос.УстановитьПараметр("ЕдиницаПоКлассификатору", НоменклатураСсылка.БазоваяЕдиницаИзмерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЕдиницаИзмерения = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Возврат ЕдиницаИзмерения;

КонецФункции // НайтиЕдиницуИзмеренияПоБазовойНаСервере()


&НаКлиенте
Процедура УчастникиОбменаПриИзменении(Элемент)
	//КутьяАА ITRR
	Если Элемент.ТекущийЭлемент.Имя = "УчастникиОбменаОбмен" Тогда
		Модифицированность = Истина;
	КонецЕсли; 
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//КутьяАА ITRR
	MDMСервер.ЗаполнитьУчастниковОбмена(ЭтаФорма);
	MDMСервер.УстановитьУсловноеОформление(ЭтаФорма);
	MDMСервер.ДоступностьУчастниковОбмена(ЭтаФорма);
	
	Если Параметры.Ключ.Пустая() Тогда
		Номенклатура = Справочники.нсиМТР.ПустаяСсылка();
		Если Параметры.ПараметрыВыбора.Свойство("Номенклатура", Номенклатура) Тогда
			Объект.Номенклатура = Номенклатура;
			НоменклатураПриИзмененииНаСервере();
			ЕдиницаИзмерения = НайтиЕдиницуИзмеренияПоБазовойНаСервере(Номенклатура);
		КонецЕсли; 
		Объект.ПолнаяСинхронизацияMDM = Истина;
	КонецЕсли; 
	
	GUID_MDM = Объект.Ссылка.УникальныйИдентификатор();
	
КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//КутьяАА ITRR
	Если НЕ Отказ И Модифицированность Тогда
		MDMСервер.ЗаписатьУчастниковОбмена(ЭтаФорма);
	КонецЕсли; 
КонецПроцедуры


&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	//КутьяАА ITRR <<
	MDMСервер.ДоступностьУчастниковОбмена(ЭтаФорма);
	
	УИ = Объект.Ссылка.УникальныйИдентификатор();
	Если НЕ GUID_MDM = УИ Тогда
		GUID_MDM = УИ;
	КонецЕсли; 
	//>>
КонецПроцедуры

//КутьяАА ITRR
&НаСервере
Процедура НоменклатураПриИзмененииНаСервере()
	Если НЕ ЗначениеЗаполнено(Объект.Дистрибьютор)
		И ЗначениеЗаполнено(Объект.Номенклатура.Дистрибьютор) Тогда
		Объект.Дистрибьютор = Объект.Номенклатура.Дистрибьютор;
	КонецЕсли; 
	
	MDMСервер.ЗаполнитьУчастниковОбмена(ЭтаФорма);
КонецПроцедуры

//КутьяАА ITRR
&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	НоменклатураПриИзмененииНаСервере();
	ЕдиницаИзмерения = НайтиЕдиницуИзмеренияПоБазовойНаСервере(Объект.Номенклатура);
КонецПроцедуры

&НаКлиенте
Процедура ИсходныеКомплектующиеНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ПроверитьВыбранноеЗначениеНаСервереОтказ(ВыбранноеЗначение,Объект.ПроизводственнаяПлощадка) Тогда
		Сообщить("Выбранная номенклатура не может быть использована для данной производственной площадки.", СтатусСообщения.Важное);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервереБезКонтекста
Функция ПроверитьВыбранноеЗначениеНаСервереОтказ(ВыбранноеЗначение,ПроизводственнаяПлощадка)

	Возврат ВыбранноеЗначение.LocalMaterialType.СухиеКомпоненты 
		И ВыбранноеЗначение.РеквизитыПроизводителей.Найти(ПроизводственнаяПлощадка) = Неопределено;

КонецФункции // ПроверитьВыбранноеЗначениеНаСервере()
 