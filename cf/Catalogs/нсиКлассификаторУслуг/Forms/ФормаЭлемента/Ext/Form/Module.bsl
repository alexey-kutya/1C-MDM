
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РегистрыСведений.нсиСтатусыОбработкиСправочников.ОпределитьДоступКФорме(
		Объект.Ссылка, ЭтаФорма.ТолькоПросмотр, Объект.ЭтоМакет);
		
	// @Комментарий: Вызовем процедуру установки функциональных опций.
	нсиРаботаСФормамиСервер.УправлениеВидимостьюОбработкиЗаявок(ЭтотОбъект);
	
	нсиВыделениеИзменений.ОформитьВыделениеИзменений(ЭтотОбъект);
	
	нсиРаботаСФормамиСервер.УстановитьВидимостьКодов(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) и Объект.ЭтоМакет Тогда
		нсиРаботаСФормамиСервер.УстановитьДоступностьПолей(ЭтотОбъект, Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если не Отказ Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	нсиКлассификаторУслуг.Ссылка
		               |ИЗ
		               |	Справочник.нсиКлассификаторУслуг КАК нсиКлассификаторУслуг
		               |ГДЕ
		               |	нсиКлассификаторУслуг.Ссылка В ИЕРАРХИИ(&Ссылка)
		               |	И НЕ нсиКлассификаторУслуг.Ссылка = &Ссылка
		               |	И (НЕ нсиКлассификаторУслуг.Методолог = &Методолог
		               |			ИЛИ НЕ нсиКлассификаторУслуг.Эксперт = &Эксперт)";
		Запрос.УстановитьПараметр("Ссылка", ТекущийОбъект.Ссылка);
		Запрос.УстановитьПараметр("Методолог", ТекущийОбъект.Методолог);
		Запрос.УстановитьПараметр("Эксперт", ТекущийОбъект.Эксперт);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() цикл
			ОбВыборка = Выборка.Ссылка.ПолучитьОбъект();
			ОбВыборка.Методолог = ТекущийОбъект.Методолог;
			ОбВыборка.Эксперт = ТекущийОбъект.Эксперт;
			
			Попытка
				ОбВыборка.Записать();
			Исключение
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Не удалось записать подчиненный элемент " + Строка(ОбВыборка.Наименование);
				Сообщение.Сообщить();
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	нсиВыделениеИзменений.ОформитьВыделениеИзменений(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.ЭтоМакет Тогда 
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("Запись макета элемента справочника ""Классификатор услуг""");
	Иначе
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("Запись элемента справочника ""Классификатор услуг""");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьШаблоны(Элементы.НастройкиШаблоновНаименований);
	ОбновитьШаблоны(Элементы.НастройкиШаблоновПолногоНаименования);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиШаблоновНаименований

&НаКлиенте
Процедура НастройкиШаблоновНаименованийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока тогда
		ОпределитьТипЭлементаНаименования(Элемент.ТекущиеДанные);
	КонецЕсли;	
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Использование = "Наименование";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаШаблоновНаименованийТипЭлементаПриИзменении(Элемент)
	
	ОпределитьТипЭлементаНаименования(Элементы.НастройкиШаблоновНаименований.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиШаблоновНаименованийПриИзменении(Элемент)
	
	ОбновитьШаблоны(Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиШаблоновПолногоНаименования

&НаКлиенте
Процедура НастройкиШаблоновПолногоНаименованияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока тогда
		ОпределитьТипЭлементаПолногоНаименования(Элемент.ТекущиеДанные);
	КонецЕсли;	
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Использование = "ПолноеНаименование";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаШаблоновПолногоНаименованияТипЭлементаПриИзменении(Элемент)
	
	ОпределитьТипЭлементаПолногоНаименования(Элементы.НастройкиШаблоновПолногоНаименования.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ПоказатьОтличия(Команда)
	
	ПараметрыСравненияТаблиц = ВыделениеИзменений_ПараметрыСравненияТаблиц(Команда.Имя);
	
	Если ПараметрыСравненияТаблиц = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.нсиФормаСравненияТабличныхЧастей", ПараметрыСравненияТаблиц, ЭтаФорма);
	
КонецПроцедуры	

&НаСервере
Функция ВыделениеИзменений_ПараметрыСравненияТаблиц(ИмяКоманды)
	Возврат нсиВыделениеИзменений.ПараметрыСравненияТаблиц(ЭтотОбъект, ИмяКоманды);
КонецФункции

&НаКлиенте
Процедура КомандаОбновитьПримеры(Команда)

	ОбновитьПримеры();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОпределитьТипЭлементаНаименования(ДанныеСтроки)
	
	Если Элементы.НастройкаШаблоновНаименованийЭлементНаименования.СписокВыбора.Количество() тогда
		Элементы.НастройкаШаблоновНаименованийЭлементНаименования.СписокВыбора.Очистить();
	КонецЕсли;	
	Элементы.НастройкаШаблоновНаименованийЭлементНаименования.РежимВыбораИзСписка = Ложь;
	
	ЭлементНаименованияДоОпределенияТипа = ДанныеСтроки.ЭлементНаименования;
	
	Если ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.Реквизит") тогда
		
		ОписаниеТипа = Новый ОписаниеТипов("Строка");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		
		Для Каждого Строка Из СписокРеквизитов() Цикл
			Элементы.НастройкаШаблоновНаименованийЭлементНаименования.СписокВыбора.Добавить(Строка.Значение, Строка.Представление);	
		КонецЦикла;
		Элементы.НастройкаШаблоновНаименованийЭлементНаименования.РежимВыбораИзСписка = Истина;
		
		Если Элементы.НастройкаШаблоновНаименованийЭлементНаименования.СписокВыбора.НайтиПоЗначению(ДанныеСтроки.ЭлементНаименования) = Неопределено тогда
			ДанныеСтроки.ЭлементНаименования = "";	
		КонецЕсли;	
		
	ИначеЕсли ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.Характеристика") тогда
		
		ОписаниеТипа = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.нсиХарактеристикиУслуг");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		Элементы.НастройкаШаблоновНаименованийЭлементНаименования.ОграничениеТипа = ОписаниеТипа;
		
		ЗаполнитьПараметрыВыбораЭлемента(Элементы.НастройкаШаблоновНаименованийЭлементНаименования, "Отбор.Класс", Объект.Ссылка);
		
	ИначеЕсли ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.ДополнительныйРеквизит") тогда	
		
		ОписаниеТипа = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		
		ЗаполнитьПараметрыВыбораЭлемента(Элементы.НастройкаШаблоновНаименованийЭлементНаименования, "Отбор.Ссылка", СписокДополнительныхРеквизитов());
		
	ИначеЕсли ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.ПредопределенноеНаименование") тогда		
		
		ОписаниеТипа = Новый ОписаниеТипов("Строка");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		Элементы.НастройкаШаблоновНаименованийЭлементНаименования.ОграничениеТипа = ОписаниеТипа;
		
		Если ЗначениеЗаполнено(ДанныеСтроки.ЭлементНаименования) 
			И НЕ ТипЗнч(ДанныеСтроки.ЭлементНаименования) = ТипЗнч(ЭлементНаименованияДоОпределенияТипа) тогда
			ДанныеСтроки.ЭлементНаименования = "";		
		КонецЕсли;	
					
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ЭлементНаименованияДоОпределенияТипа) 
		И НЕ ДанныеСтроки.ЭлементНаименования = ЭлементНаименованияДоОпределенияТипа тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Значение очищено. Элемент наименования '%1' не соответствует типу элемента.", ЭлементНаименованияДоОпределенияТипа),, "НастройкиШаблоновНаименований["+(ДанныеСтроки.НомерСтроки-1)+"].ЭлементНаименования", "Объект");
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОпределитьТипЭлементаПолногоНаименования(ДанныеСтроки)
	
	Если Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.СписокВыбора.Количество() тогда
		Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.СписокВыбора.Очистить();
	КонецЕсли;	
	Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.РежимВыбораИзСписка = Ложь;
	
	ЭлементНаименованияДоОпределенияТипа = ДанныеСтроки.ЭлементНаименования;
	
	Если ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.Реквизит") тогда
		
		ОписаниеТипа = Новый ОписаниеТипов("Строка");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		
		Для Каждого Строка Из СписокРеквизитов() Цикл
			Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.СписокВыбора.Добавить(Строка.Значение,Строка.Представление);
		КонецЦикла;
		Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.РежимВыбораИзСписка = Истина;
		
		Если ЗначениеЗаполнено(ДанныеСтроки.ЭлементНаименования) 
			И Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.СписокВыбора.НайтиПоЗначению(ДанныеСтроки.ЭлементНаименования) = Неопределено тогда
			ДанныеСтроки.ЭлементНаименования = "";	
		КонецЕсли;	
		
	ИначеЕсли ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.Характеристика") тогда
		
		ОписаниеТипа = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.нсиХарактеристикиУслуг");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.ОграничениеТипа = ОписаниеТипа;
		
		ЗаполнитьПараметрыВыбораЭлемента(Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования, "Отбор.Класс", Объект.Ссылка);
		
	ИначеЕсли ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.ДополнительныйРеквизит") тогда	
		
		ОписаниеТипа = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		
		ЗаполнитьПараметрыВыбораЭлемента(Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования, "Отбор.Ссылка", СписокДополнительныхРеквизитов());
		
	ИначеЕсли ДанныеСтроки.ТипЭлемента = ПредопределенноеЗначение("Перечисление.нсиТипыЭлементовНаименования.ПредопределенноеНаименование") тогда		
		
		ОписаниеТипа = Новый ОписаниеТипов("Строка");
		ДанныеСтроки.ЭлементНаименования = ОписаниеТипа.ПривестиЗначение(ДанныеСтроки.ЭлементНаименования);
		Элементы.НастройкиШаблоновПолногоНаименованияЭлементНаименования.ОграничениеТипа = ОписаниеТипа;

		Если ЗначениеЗаполнено(ДанныеСтроки.ЭлементНаименования) 
			И НЕ ТипЗнч(ДанныеСтроки.ЭлементНаименования) = ТипЗнч(ЭлементНаименованияДоОпределенияТипа) тогда
			ДанныеСтроки.ЭлементНаименования = "";		
		КонецЕсли;	
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ЭлементНаименованияДоОпределенияТипа) 
		И НЕ ДанныеСтроки.ЭлементНаименования = ЭлементНаименованияДоОпределенияТипа тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Значение очищено. Элемент наименования '%1' не соответствует типу элемента.", ЭлементНаименованияДоОпределенияТипа),, "НастройкиШаблоновНаименований["+(ДанныеСтроки.НомерСтроки-1)+"].ЭлементНаименования", "Объект");
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьПараметрыВыбораЭлемента(Элемент, Отбор, Значение)
	
	НовыйПараметр = Новый ПараметрВыбора(Отбор, Значение);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	
	Элемент.ПараметрыВыбора = НовыеПараметры;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокРеквизитов()
	
	СписокРеквизитов = Новый СписокЗначений;
	
	СписокРеквизитов.Добавить("Код", "Код");
	СписокРеквизитов.Добавить("Наименование", "Наименование");
	Для Каждого Реквизит из Метаданные.Справочники.нсиУслуги.Реквизиты цикл
		СписокРеквизитов.Добавить(Реквизит.Имя, Реквизит.Синоним);
	КонецЦикла;	
	
	Возврат СписокРеквизитов
	
КонецФункции	

&НаСервереБезКонтекста
Функция СписокДополнительныхРеквизитов()
	
	ДополнительныеРеквизиты = Новый Массив;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеРеквизиты.Свойство
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Ссылка = &Набор
	|	И НЕ ДополнительныеРеквизиты.Ссылка.ЭтоГруппа");
	
	Запрос.УстановитьПараметр("Набор", Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_нсиУслуги_Общие);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДополнительныеРеквизиты.Добавить(Выборка.Свойство);
	КонецЦикла;

	Возврат ДополнительныеРеквизиты
	
КонецФункции	

&НаКлиенте
Процедура ПримерПриИзменении(Элемент)
	
	ОбновитьПримеры();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьШаблоны(Элемент)
	
	Если Элемент = Элементы.НастройкиШаблоновНаименований Тогда
		
		ШаблонНаименования = "";
		
		Для Каждого Строка Из Объект.НастройкиШаблоновНаименований Цикл
			
			Если Строка.Использование <> "Наименование" Тогда
				Продолжить;
			КонецЕсли;
			
			Если ПредопределенноеНаименование(Строка.ТипЭлемента) Тогда	
				ШаблонНаименования = ШаблонНаименования 
										+ Строка.ПрефиксЗначения 
										+ Строка.ЭлементНаименования
										+ Строка.ПостфиксЗначения;
			Иначе 
				ШаблонНаименования = ШаблонНаименования 
										+ Строка.ПрефиксЗначения 
										+ "[" 
										+ Строка.ЭлементНаименования
										+ "]" 
										+ Строка.ПостфиксЗначения;
			КонецЕсли;
			
		КонецЦикла;

		ШаблонНаименования = СокрЛП(ШаблонНаименования);
		
	ИначеЕсли Элемент = Элементы.НастройкиШаблоновПолногоНаименования Тогда
		
		ШаблонПолногоНаименования = "";
		
		Для Каждого Строка Из Объект.НастройкиШаблоновНаименований Цикл
			
			Если Строка.Использование <> "ПолноеНаименование" Тогда
				Продолжить;
			КонецЕсли;
			
			Если ПредопределенноеНаименование(Строка.ТипЭлемента) Тогда
				ШаблонПолногоНаименования = ШаблонПолногоНаименования 
										+ Строка.ПрефиксЗначения 
										+ Строка.ЭлементНаименования
										+ Строка.ПостфиксЗначения;
			Иначе 
				ШаблонПолногоНаименования = ШаблонПолногоНаименования 
										+ Строка.ПрефиксЗначения 
										+ "[" 
										+ Строка.ЭлементНаименования
										+ "]" 
										+ Строка.ПостфиксЗначения;
			КонецЕсли;										
									
		КонецЦикла;
		
		ШаблонПолногоНаименования = СокрЛП(ШаблонПолногоНаименования);

	КонецЕсли;
	
	ОбновитьПримеры();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПримеры()
	
	Если Не Пример.Пустая() Тогда
		коллекция 					= нсиФормированиеНаименований.ПолучитьНаименованиеПоШаблону(Пример, Объект.НастройкиШаблоновНаименований.Выгрузить());
		ПримерНаименования 			= коллекция.Наименование;
		ПримерПолногоНаименования 	= коллекция.ПолноеНаименование;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ПредопределенноеНаименование(ТипЭлемента)
	
	Возврат ?(ТипЭлемента = Перечисления.нсиТипыЭлементовНаименования.ПредопределенноеНаименование, Истина, Ложь);
	
КонецФункции

#КонецОбласти
