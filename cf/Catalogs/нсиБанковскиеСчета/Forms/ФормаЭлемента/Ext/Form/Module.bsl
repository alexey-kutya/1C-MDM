#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеСвойства");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства

		
	РегистрыСведений.нсиСтатусыОбработкиСправочников.ОпределитьДоступКФорме(
		Объект.Ссылка, ЭтаФорма.ТолькоПросмотр, Объект.ЭтоМакет);
		
	УправлениеВидимостьюИДоступом();
	
	// @Комментарий: Вызовем процедуру установки функциональных опций.
	нсиРаботаСФормамиСервер.УправлениеВидимостьюОбработкиЗаявок(ЭтотОбъект);
	
	нсиВыделениеИзменений.ОформитьВыделениеИзменений(ЭтотОбъект);
	
	нсиРаботаСФормамиСервер.УстановитьВидимостьКодов(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) и Объект.ЭтоМакет Тогда
		нсиРаботаСФормамиСервер.УстановитьДоступностьПолей(ЭтотОбъект, Объект.Ссылка);
	КонецЕсли;
	
	//фыв++ заполняем владельца
	ПараметрыЗаполнения=Параметры.ЗначенияЗаполнения;
	Если ПараметрыЗаполнения.Свойство("Владелец") И ЗначениеЗаполнено(ПараметрыЗаполнения.Владелец) Тогда
		Объект.Владелец=ПараметрыЗаполнения.Владелец;
	КонецЕсли;  //--
	
	// КутьяАА ITRR <<
	Если Параметры.Ключ.Пустая() Тогда
		Объект.ПолнаяСинхронизацияMDM = Истина;
	КонецЕсли; 
	
	GUID_MDM = Объект.Ссылка.УникальныйИдентификатор();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	ЗаполнитьСписокНаименованийСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если ВладелецФормы = Неопределено Тогда 
		ВедетсяОбработка = Ложь; 
	Иначе 	
		ВедетсяОбработка = 
			(ВладелецФормы.Имя = "СписокБуфера" ИЛИ 
			ВладелецФормы.Имя = "СписокЗагруженных" ИЛИ 
			ВладелецФормы.Имя = "СписокОбработанных");
	КонецЕсли;	
	
	Если ВедетсяОбработка И Не ЗначениеЗаполнено(Объект.ТипПозиции) Тогда 
		Объект.ТипПозиции = ПредопределенноеЗначение("Перечисление.нсиТипыПозицийСправочников.ЭталоннаяПозиция");	
	КонецЕсли;	
		
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	//Кутья АА ITRR
	Если Параметры.Ключ.Пустая() Тогда
		ЗаполнитьНовыйЭлемент();
	КонецЕсли; 
	АвтоНаименование = СформироватьАвтоНаименование();

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	нсиРаботаСФормами.СократитьПробелыТекстовыхПолей(ТекущийОбъект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	ТекущийОбъект.ПеренестиДублиКНовомуЭталону();
	
	Если ВедетсяОбработка Тогда 
		РегистрыСведений.нсиСтатусыОбработкиСправочников.УстановитьСтатусСправочника(ТекущийОбъект.Ссылка,
			Новый Структура("Пользователь,ОбработкаНачата", ПараметрыСеанса.ТекущийПользователь, Истина) );	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УправлениеВидимостьюИДоступом();
	
	нсиВыделениеИзменений.ОформитьВыделениеИзменений(ЭтотОбъект);
	
	//КутьяАА ITRR <<
	УИ = Объект.Ссылка.УникальныйИдентификатор();
	Если НЕ GUID_MDM = УИ Тогда
		GUID_MDM = УИ;
	КонецЕсли; 
	//>>
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
	    ОбновитьЭлементыДополнительныхРеквизитов();
	    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.ЭтоМакет Тогда 
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("Запись макета элемента справочника ""Банковские счета""");
	Иначе
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("Запись элемента справочника ""Банковские счета""");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УправлениеВидимостьюИДоступом();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипПозицииПриИзменении(Элемент)
	
	УправлениеВидимостьюИДоступом();
	
КонецПроцедуры

&НаКлиенте
Процедура СобственныйКонтрагентНажатие(Элемент)
	
	ОткрытьФорму("Справочник.Организации.ФормаОбъекта",
		Новый Структура("Ключ", нсиРаботаСФормамиСервер.ПолучитьОрганизациюПоКонтрагенту(Объект.Владелец)) );
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСчетаПриИзменении(Элемент)
	//ЗаполнитьСписокНаименованийКлиент();
	
	//	Кутья АА ITRR ПроверкаПустогоНаименования = Ложь
	УстановитьНаименованиеСчета(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
//	ЗаполнитьСписокНаименованийКлиент();

//	Кутья АА ITRR ПроверкаПустогоНаименования = Ложь
	УстановитьНаименованиеСчета(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствПриИзменении(Элемент)
//	ЗаполнитьСписокНаименованийКлиент();

//	Кутья АА ITRR ПроверкаПустогоНаименования = Ложь
	УстановитьНаименованиеСчета(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	ЗаполнитьСписокНаименованийКлиент();
	
//	Кутья АА ITRR
	УстановитьНаименованиеСчета();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
    УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_ПоказатьОтличия(Команда)
	
	ПараметрыСравненияТаблиц = ВыделениеИзменений_ПараметрыСравненияТаблиц(Команда.Имя);
	
	Если ПараметрыСравненияТаблиц = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.нсиФормаСравненияТабличныхЧастей", ПараметрыСравненияТаблиц, ЭтаФорма);
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьСписокНаименованийКлиент()
	Элементы.Наименование.СписокВыбора.Очистить();
	Элементы.Наименование.СписокВыбора.Добавить(""+Объект.ВидСчета+", "+Объект.НомерСчета);
	Элементы.Наименование.СписокВыбора.Добавить(""+Объект.ВидСчета+", "+Объект.ВалютаДенежныхСредств+", "+Объект.НомерСчета);
	Элементы.Наименование.СписокВыбора.Добавить(""+Объект.Банк+", "+Объект.ВидСчета+", "+Объект.ВалютаДенежныхСредств+", "+Объект.НомерСчета);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокНаименованийСервер()
	Элементы.Наименование.СписокВыбора.Очистить();
	Элементы.Наименование.СписокВыбора.Добавить(""+Объект.ВидСчета+", "+Объект.НомерСчета);
	Элементы.Наименование.СписокВыбора.Добавить(""+Объект.ВидСчета+", "+Объект.ВалютаДенежныхСредств+", "+Объект.НомерСчета);
	Элементы.Наименование.СписокВыбора.Добавить(""+Объект.Банк+", "+Объект.ВидСчета+", "+Объект.ВалютаДенежныхСредств+", "+Объект.НомерСчета);		
КонецПроцедуры

//Кутья
&НаКлиенте
Процедура ЗаполнитьНовыйЭлемент()
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидСчета) Тогда
		Объект.ВидСчета = Элементы.ВидСчета.СписокВыбора[0];
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) Тогда
		мВалютаРегламентированногоУчета = ВалютаРегламентированногоУчета();
		Объект.ВалютаДенежныхСредств = мВалютаРегламентированногоУчета;
	КонецЕсли;
	
	Объект.Наименование = СформироватьАвтоНаименование();
	
КонецПроцедуры // ЗаполнитьНовыйЭлемент()

&НаКлиенте
Процедура УстановитьНаименованиеСчета(ПроверкаПустогоНаименования = Истина)
	
	Если (ПроверкаПустогоНаименования И ПустаяСтрока(Объект.Наименование)) ИЛИ Объект.Наименование = АвтоНаименование Тогда
		Объект.Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	АвтоНаименование = СформироватьАвтоНаименование();
	
КонецПроцедуры // УстановитьНаименование()

&НаКлиенте
Функция СформироватьАвтоНаименование()

	мВалютаРегламентированногоУчета = ВалютаРегламентированногоУчета();
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокаНаименования = Лев(Объект.ВидСчета 
	                   + ?(Объект.ВалютаДенежныхСредств <> мВалютаРегламентированногоУчета, " (" + Объект.ВалютаДенежныхСредств + ")", "")
	                   + ?(НЕ Объект.Банк.Пустая(), " в " + Объект.Банк, ""), 
					   100);
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	СтрокаНаименования = Лев(Объект.НомерСчета 
	                   + ?(НЕ Объект.Банк.Пустая(), ", " + Объект.Банк, ""), 
					   100);
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	СтрокаНаименования = Лев(
	                     ?(НЕ Объект.Банк.Пустая(),""+ Объект.Банк, "")
					   + " ("+ Объект.ВидСчета 
	                   + ?(Объект.ВалютаДенежныхСредств <> мВалютаРегламентированногоУчета, ", " + Объект.ВалютаДенежныхСредств , "")
					   +")", 
					   100);
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Возврат СтрокаНаименования;

КонецФункции // ()

&НаСервереБезКонтекста
Функция ВалютаРегламентированногоУчета()

	Возврат Константы.ВалютаРегламентированногоУчета.Получить();

КонецФункции // ВалютаРегламентированногоУчета()

// СтандартныеПодсистемы.Свойства 

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
    УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
    УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура УправлениеВидимостьюИДоступом()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Элементы.ЭталоннаяПозиция.Доступность = 
		(Объект.ТипПозиции = Перечисления.нсиТипыПозицийСправочников.ДублирующаяПозиция);
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Объект.Владелец);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка ИЗ Справочник.Организации ГДЕ Контрагент = &Контрагент";
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Элементы.СобственныйКонтрагент.Видимость = ВыборкаДетальныеЗаписи.Следующий();
	
КонецПроцедуры	

&НаСервере
Функция ВыделениеИзменений_ПараметрыСравненияТаблиц(ИмяКоманды)
	Возврат нсиВыделениеИзменений.ПараметрыСравненияТаблиц(ЭтотОбъект, ИмяКоманды);
КонецФункции

#КонецОбласти








