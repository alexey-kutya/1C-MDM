#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СпособРаспределенияПоРолям = Перечисления.нсиСпособыРаспределенияЗадач.ПоРоли;
	СпособРаспределенияПоРолямИГруппамПользователейБП = Перечисления.нсиСпособыРаспределенияЗадач.ПоРолиИГруппеПользователейБП;
	
	нсиБизнесПроцессы.ЗаполнитьСписокСправочниковВедущихсяПоЗаявкам(Элементы.ЭтапыБПУсловиеВыполненияТипПредмета.СписокВыбора);
	
	СформироватьПредставлениеНастроекВремени();
	УправлениеВидимостьюИДоступом();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ШагиБППриАктивизацииСтроки(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	СформироватьПредставлениеНастроекВремени();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыШаги

&НаКлиенте
Процедура ШагиБППриАктивизацииСтроки(Элемент)
	ТД = Элементы.ШагиБП.ТекущиеДанные;
	
	Если ТД<>Неопределено Тогда 
		стрОтбор = новый ФиксированнаяСтруктура("Шаг",ТД.Шаг);
		Элементы.ЭтапыБП.Заголовок = "Шаг """+ТД.Шаг+""". Этапы"
	Иначе
		стрОтбор = новый ФиксированнаяСтруктура("Шаг",Неопределено);
		Элементы.ЭтапыБП.Заголовок = "Этапы (шаг не выбран)"
	КонецЕсли;
	
	Элементы.ЭтапыБП.ОтборСтрок = стрОтбор;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЭтапы

&НаКлиенте
Процедура ЭтапыБППередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	ТД = Элементы.ШагиБП.ТекущиеДанные;
	Если ТД = Неопределено Тогда 
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТД.Шаг) Тогда 
		Отказ=Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыБППриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда 
		ТД = Элементы.ШагиБП.ТекущиеДанные;
		ТД1 = Элементы.ЭтапыБП.ТекущиеДанные;
		ТД1.Шаг = ТД.Шаг;
		Строки = Объект.ЭтапыБП.НайтиСтроки(новый Структура("Шаг",ТД.Шаг));
		ТД1.НомерЭтапа = Строки.Количество();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыБППриАктивизацииСтроки(Элемент)
	ТД = Элементы.ЭтапыБП.ТекущиеДанные;
	Если ТД<>Неопределено Тогда 
		Элементы.ЭтапыБПРольИсполнителя.ТолькоПросмотр =  
			НЕ ТД.СпособРаспределения = СпособРаспределенияПоРолям
			И НЕ ТД.СпособРаспределения = СпособРаспределенияПоРолямИГруппамПользователейБП;
	Иначе
		Элементы.ЭтапыБПРольИсполнителя.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыБППриИзменении(Элемент)
	ТД = Элементы.ШагиБП.ТекущиеДанные;
	Шаг = Неопределено;
	Если ТД<>Неопределено Тогда 
		Шаг = ТД.Шаг;
	КонецЕсли;
	Для Каждого Строка Из Объект.ЭтапыБП Цикл 
		Если НЕ ЗначениеЗаполнено(Строка.Шаг) Тогда 
			Строка.Шаг = Шаг;
		КонецЕсли;
	КонецЦикла;
	Объект.ЭтапыБП.Сортировать("Шаг,НомерСтроки");
	ТекШаг = Неопределено;
	Счетчик = 1;
	Для Каждого Строка ИЗ Объект.ЭтапыБП Цикл 
		Если Строка.Шаг<>ТекШаг Тогда 
			ТекШаг = Строка.Шаг;
			Счетчик = 1;
		КонецЕсли;
		Строка.НомерЭтапа = Счетчик;
		Счетчик = Счетчик+1;
	КонецЦикла;
	ШагиБППриАктивизацииСтроки(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыБПСпособРаспределенияПриИзменении(Элемент)
	ТД = Элементы.ЭтапыБП.ТекущиеДанные;
	Если ТД<>Неопределено Тогда 
		Если ТД.СпособРаспределения = СпособРаспределенияПоРолям
			ИЛИ ТД.СпособРаспределения = СпособРаспределенияПоРолямИГруппамПользователейБП
			Тогда 
			
			Элементы.ЭтапыБПРольИсполнителя.ТолькоПросмотр = Ложь;
		Иначе
			Элементы.ЭтапыБПРольИсполнителя.ТолькоПросмотр = Истина;
			ТД.РольИсполнителя = Неопределено;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыБППредставлениеНастроекВремениНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТД = Элементы.ЭтапыБП.ТекущиеДанные;
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = новый ОписаниеОповещения("ОбработкаЗакрытияФормыВводаВремени",ЭтаФорма);
	
	ОткрытьФорму(
		"Справочник.нсиНастройкиБП.Форма.ФормаВводаВремениОбработки",
		новый Структура(
			"ВремяОбработки,ВремяОжидания,ОповещатьПриОбработкеЗа,ОповещатьПриОжиданииЗа",
			ТД.ВремяОбработки,ТД.ВремяОжидания, ТД.ОповещатьПриОбработкеЗа,ТД.ОповещатьПриОжиданииЗа
		),
		ЭтаФорма,,,,
		ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗакрытияФормыВводаВремени(Результат, ДП) Экспорт
	Если Результат<>Неопределено Тогда 
		ТД = Элементы.ЭтапыБП.ТекущиеДанные;
		ЗаполнитьЗначенияСвойств(ТД,Результат);
		ТД.ПредставлениеНастроекВремени = ТД.ВремяОжидания+ТД.ВремяОбработки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыБППредставлениеУсловияВыполненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТД = Элементы.ЭтапыБП.ТекущиеДанные;
	
	ОписаниеОповещения = новый ОписаниеОповещения("ОбработкаЗакрытияФормыРедактированияУсловияВыполнения",ЭтаФорма);
	ОткрытьФорму(
		"Справочник.нсиНастройкиБП.Форма.ФормаРедактированияУсловияВыполнения",
		новый Структура("ИмяБП,Отбор,ТипПредмета",Объект.ИмяБП,ТД.УсловиеВыполнения,ТД.УсловиеВыполненияТипПредмета),
		ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗакрытияФормыРедактированияУсловияВыполнения(Результат, ДП) Экспорт
	Если Результат <> Неопределено Тогда 
		ТД = Элементы.ЭтапыБП.ТекущиеДанные;
		ТД.ПредставлениеУсловияВыполнения = Результат.Представление;
		ТД.УсловиеВыполнения = Результат.Отбор;
		ТД.УсловиеВыполненияТипПредмета = Результат.ТипПредмета;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыБППредставлениеУсловияВыполненияОчистка(Элемент, СтандартнаяОбработка)
	ТД = Элементы.ЭтапыБП.ТекущиеДанные;
	ТД.УсловиеВыполнения = "";
	ТД.ПредставлениеУсловияВыполнения = "";
КонецПроцедуры


&НаКлиенте
Процедура ЭтапыБППриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	РассчитатьОграничениеВремени();
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыБППослеУдаления(Элемент)
	РассчитатьОграничениеВремени();
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяБППриИзменении(Элемент)
	ЗаполнитьШаги();
	УправлениеВидимостьюИДоступом();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РассчитатьОбщееВремя(Команда)
	РассчитатьОграничениеВремени();		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьОграничениеВремени()
	ОбщееВремя = 0;
	Для Каждого Строка Из Объект.ЭтапыБП Цикл 
		ОбщееВремя = ОбщееВремя + Строка.ВремяОбработки + Строка.ВремяОжидания;
	КонецЦикла;
	Объект.ОбщееВремяВыполнения = ОбщееВремя;
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьШаги()
	Шаги = БизнесПроцессы[Объект.ИмяБП].ПолучитьШаги();
	Объект.ШагиБП.Очистить();
	Для Каждого Шаг Из Шаги Цикл 
		НС = Объект.ШагиБП.Добавить();
		НС.Шаг = Шаг;
	КонецЦикла;
	Сч = 0;
	Пока Сч < Объект.ЭтапыБП.Количество() Цикл 
		Если Шаги.Найти(Объект.ЭтапыБП[Сч].Шаг) = Неопределено Тогда 
			Объект.ЭтапыБП.Удалить(Сч);
		Иначе
			Сч = Сч+1;
		КонецЕсли;
	КонецЦикла;
	
	Если Объект.ИмяБП = "нсиПакетныйВводЭлементовСправочника" Тогда 
		Для Каждого Строка Из Объект.ЭтапыБП Цикл
			Строка.УсловиеВыполненияТипПредмета = Неопределено;
			Строка.ПредставлениеУсловияВыполнения = "";
			Строка.УсловиеВыполнения = "";
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеНастроекВремени()
	Для Каждого Строка Из Объект.ЭтапыБП Цикл
		Строка.ПредставлениеНастроекВремени = Строка.ВремяОжидания+Строка.ВремяОбработки;
	КонецЦикла
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостьюИДоступом()
	Элементы.ЭтапыБППредставлениеУсловияВыполнения.Видимость = Объект.ИмяБП<>"нсиПакетныйВводЭлементовСправочника";
	Элементы.ЭтапыБПУсловиеВыполненияТипПредмета.Видимость = Объект.ИмяБП<>"нсиПакетныйВводЭлементовСправочника";
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыБПУсловиеВыполненияТипПредметаПриИзменении(Элемент)
	ТД = Элементы.ЭтапыБП.ТекущиеДанные;
	ТД.ПредставлениеУсловияВыполнения = "";
	ТД.УсловиеВыполнения = "";
КонецПроцедуры

#КонецОбласти

