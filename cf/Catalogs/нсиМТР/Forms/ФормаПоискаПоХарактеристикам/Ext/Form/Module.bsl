#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ПараметрКласс") Тогда
		Если ТипЗнч(Параметры.ПараметрКласс) = Тип("СправочникСсылка.нсиМТР") Тогда
			Класс = Параметры.ПараметрКласс.Класс;
			ЗаполнитьТехХарактеристики();
		КонецЕсли;
	КонецЕсли;
	
	ИмяСправочника 										= "нсиМТР"; 
	
	СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("СсылкаНеОпределена", 	Истина);
	СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("Ссылка", Null);
	нсиСравнениеДанныхСервер.УстановитьПользователяВПараметрыИОформление(СписокНоменклатуры); 	
	СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("Класс", Класс);
	СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокСсылок", "");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НайтиАналоги(Команда)
	СоответствиеНаборов.Очистить();
	
	МассивХарактеристик = Новый Массив;
	Для каждого стр из СписокХарактеристик цикл
		Если стр.Использовать Тогда
			МассивХарактеристик.Добавить(стр.Характеристика);
		КонецЕсли;
	КонецЦикла;
	
	Если не МассивХарактеристик.Количество() = 0 Тогда

        ЗаполнитьПредставлениеАналогов(МассивХарактеристик);

		СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("Класс", Класс);
		Элементы.СписокНоменклатуры.Обновить();
	КонецЕсли;
	
	ТекДанные = Элементы.СоответствиеНаборов.ТекущиеДанные;
	Если не ТекДанные = Неопределено Тогда
		СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокСсылок", ТекДанные.СписокСсылок.ВыгрузитьЗначения());
	Иначе
		СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокСсылок", "");
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КлассПриИзменении(Элемент)
	ЗаполнитьТехХарактеристики();
КонецПроцедуры

&НаКлиенте
Процедура СоответствиеНаборовПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.СоответствиеНаборов.ТекущиеДанные;
	Если не ТекДанные = Неопределено Тогда
		СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокСсылок", ТекДанные.СписокСсылок.ВыгрузитьЗначения());
	Иначе
		СписокНоменклатуры.Параметры.УстановитьЗначениеПараметра("СписокСсылок", "");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТехХарактеристики()
	СписокХарактеристик.Очистить();
	
	Если ЗначениеЗаполнено(Класс) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	нсиХарактеристикиМТР.Ссылка КАК Характеристика,
			|	ИСТИНА КАК Использовать
			|ИЗ
			|	ПланВидовХарактеристик.нсиХарактеристикиМТР КАК нсиХарактеристикиМТР
			|ГДЕ
			|	нсиХарактеристикиМТР.Класс = &Класс";

		Запрос.УстановитьПараметр("Класс", Класс);

		Результат = Запрос.Выполнить();
		
		СписокХарактеристик.Загрузить(Результат.Выгрузить());
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПредставлениеАналогов(МассивХарактеристик)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	нсиМТРТехническиеХарактеристики.Ссылка КАК Ссылка,
		|	нсиМТРТехническиеХарактеристики.Характеристика.Представление КАК Характеристика,
		|	нсиМТРТехническиеХарактеристики.Значение
		|ИЗ
		|	Справочник.нсиМТР.ТехническиеХарактеристики КАК нсиМТРТехническиеХарактеристики
		|ГДЕ
		|	нсиМТРТехническиеХарактеристики.Ссылка.Класс = &Класс
		|	И нсиМТРТехническиеХарактеристики.Характеристика В(&СписокХарактеристик)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	Характеристика";

	Запрос.УстановитьПараметр("Класс", Класс);
	Запрос.УстановитьПараметр("СписокХарактеристик", МассивХарактеристик);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	ТекСсылка = "";
	СтрокаПредставления = "";
	ТаблИтог = Новый ТаблицаЗначений;
	ТаблИтог.Колонки.Добавить("Представление");
	ТаблИтог.Колонки.Добавить("СписокСсылок");
	ТаблИтог.Колонки.Добавить("Количество");
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если не ВыборкаДетальныеЗаписи.Ссылка = ТекСсылка Тогда
			Если не СтрокаПредставления = "" Тогда
				ТекСтрока = ТаблИтог.Найти(СтрокаПредставления, "Представление");
				Если ТекСтрока = Неопределено Тогда
					НовСтрока = ТаблИтог.Добавить();
					НовСтрока.Представление = СтрокаПредставления;
					НовСтрока.Количество = 1;
					НовСтрока.СписокСсылок = Новый СписокЗначений;
					НовСтрока.СписокСсылок.Добавить(ТекСсылка);
				Иначе
					ТекСтрока.Количество = ТекСтрока.Количество + 1;
					ТекСтрока.СписокСсылок.Добавить(ТекСсылка);
				КонецЕсли;
			КонецЕсли;
			СтрокаПредставления = Строка(ВыборкаДетальныеЗаписи.Характеристика) + "=" + Строка(ВыборкаДетальныеЗаписи.Значение);
			ТекСсылка = ВыборкаДетальныеЗаписи.Ссылка;	
		Иначе
			СтрокаПредставления = СтрокаПредставления + ";" + Строка(ВыборкаДетальныеЗаписи.Характеристика) + "=" + Строка(ВыборкаДетальныеЗаписи.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если не СтрокаПредставления = "" Тогда
		ТекСтрока = ТаблИтог.Найти(СтрокаПредставления, "Представление");
		Если ТекСтрока = Неопределено Тогда
			НовСтрока = ТаблИтог.Добавить();
			НовСтрока.Представление = СтрокаПредставления;
			НовСтрока.Количество = 1;
			НовСтрока.СписокСсылок = Новый СписокЗначений;
			НовСтрока.СписокСсылок.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		Иначе
			ТекСтрока.Количество = ТекСтрока.Количество + 1;
			ТекСтрока.СписокСсылок.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
	КонецЕсли;	
	
	СоответствиеНаборов.Загрузить(ТаблИтог);
КонецПроцедуры

#КонецОбласти


