
#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////
// Выделение изменений

Функция СписокРеквизитовВыделенияИзменений() Экспорт
	Возврат Неопределено	
КонецФункции	

Функция СписокРеквизитовИсключенийВыделенияИзменений() Экспорт
	Возврат "Код"
КонецФункции	

Функция НастройкиОформленияВыделенияИзмененийТабличныхЧастей() Экспорт
	
	Настройки_АльтернативныеЕдиницыИзмерения = Новый Структура;
	Настройки_АльтернативныеЕдиницыИзмерения.Вставить("КлючСтроки", "ЕдиницаИзмерения");
	Настройки_АльтернативныеЕдиницыИзмерения.Вставить("Реквизиты" , "Коэффициент,Назначение");
	Настройки_АльтернативныеЕдиницыИзмерения.Вставить("Элемент"   , "АльтернативныеЕдиницыИзмерения");
	
	Настройки_ДополнительнаяКлассификация = Новый Структура;
	Настройки_ДополнительнаяКлассификация.Вставить("КлючСтроки", "ВидКлассификатора,Класс");
	Настройки_ДополнительнаяКлассификация.Вставить("Реквизиты" , "");
	Настройки_ДополнительнаяКлассификация.Вставить("Элемент"   , "ДополнительнаяКлассификация");
	
	Настройки_Аналоги = Новый Структура;
	Настройки_Аналоги.Вставить("КлючСтроки", "Аналог");
	Настройки_Аналоги.Вставить("Реквизиты" , "");
	Настройки_Аналоги.Вставить("Элемент"   , "Аналоги");
	
	Настройки_Запчасти = Новый Структура;
	Настройки_Запчасти.Вставить("КлючСтроки", "Запчасть");
	Настройки_Запчасти.Вставить("Реквизиты" , "");
	Настройки_Запчасти.Вставить("Элемент"   , "Запчасти");
	
	Настройки_ТехническиеХарактеристики = Новый Структура;
	Настройки_ТехническиеХарактеристики.Вставить("КлючСтроки"     , "Характеристика");
	Настройки_ТехническиеХарактеристики.Вставить("Реквизиты"      , "Значение");
	Настройки_ТехническиеХарактеристики.Вставить("РеквизитФормы"  , "ТехническиеХарактеристикиФорма");
	Настройки_ТехническиеХарактеристики.Вставить("Элемент"        , "ТехническиеХарактеристикиФорма");
	
	НастройкиОформления = Новый Структура;
	НастройкиОформления.Вставить("АльтернативныеЕдиницыИзмерения", Настройки_АльтернативныеЕдиницыИзмерения);
	НастройкиОформления.Вставить("ДополнительнаяКлассификация"   , Настройки_ДополнительнаяКлассификация);
	НастройкиОформления.Вставить("Аналоги"                       , Настройки_Аналоги);
	НастройкиОформления.Вставить("Запчасти"                      , Настройки_Запчасти);
	НастройкиОформления.Вставить("ТехническиеХарактеристики"     , Настройки_ТехническиеХарактеристики);
	
	Возврат НастройкиОформления
	
КонецФункции

#КонецОбласти

Процедура РегистрацияAX(Узел, Ссылка) Экспорт 

	РегистрацияСтатус = НЕ Ссылка.Status = Перечисления.SKUStatuses.NPD;
	РегистрацияНеУдаленные = НЕ Ссылка.ПометкаУдаления;
	
	Если РегистрацияСтатус
		И РегистрацияНеУдаленные 
		Тогда
		
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, Ссылка);
		
		ГотоваяПродукция = Ссылка.LocalMaterialType.ГотоваяПродукция;
		ОсновнойПроизводитель = Справочники.Организации.ПустаяСсылка();
		Если ГотоваяПродукция Тогда
			ОсновнойПроизводитель = Ссылка.ОсновнойПроизводитель;
		КонецЕсли; 
		
		ЕдИзмВыборка = Справочники.ЕдиницыИзмерения.Выбрать(,Ссылка);
		Пока ЕдИзмВыборка.Следующий() Цикл
			
			ЕдиницаОсновногоПроизводителя = ГотоваяПродукция И НЕ ЕдИзмВыборка.ЕдиницыПроизводителей.Найти(ОсновнойПроизводитель, "Производитель") = Неопределено;
			
			УсловиеПоТипуТМЦ  = НЕ ГотоваяПродукция ИЛИ ЕдиницаОсновногоПроизводителя;
			
			Если НЕ ЕдИзмВыборка.ПометкаУдаления
				И НЕ ЕдИзмВыборка.ЕдиницаПоКлассификатору = Ссылка.БазоваяЕдиницаИзмерения 
				И УсловиеПоТипуТМЦ Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(Узел, ЕдИзмВыборка.Ссылка);
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЕсли; 
	
КонецПроцедуры

Функция ОбъемДКЛ(ОбъемЛ, Коэффициент) Экспорт

	Возврат (ОбъемЛ.SizeNumber*Коэффициент)/10;

КонецФункции // ОбъемДКЛ()

// Interface Global
Функция СтруктураСоответствияАтрибутовGlobal(НоменклатураСсылка, LocalFactory) Экспорт 
	
	СтруктураGlobalSKU = Новый Структура;
	
	СтруктураGlobalSKU.Вставить("LocalEntity", НоменклатураСсылка);
	СтруктураGlobalSKU.Вставить("MaterialType", Справочники.GlobalMaterialType.ПустаяСсылка());
	СтруктураGlobalSKU.Вставить("BrandGroup", Справочники.GlobalBrand.ПустаяСсылка());
	СтруктураGlobalSKU.Вставить("BrandGroupNew");
	СтруктураGlobalSKU.Вставить("Brand", Справочники.GlobalBrand.ПустаяСсылка());
	СтруктураGlobalSKU.Вставить("BrandNew");
	СтруктураGlobalSKU.Вставить("Factory", Справочники.GlobalFactory.ПустаяСсылка());
	СтруктураGlobalSKU.Вставить("Packing", Справочники.GlobalPacking.ПустаяСсылка());
	СтруктураGlobalSKU.Вставить("PackingNew");
	СтруктураGlobalSKU.Вставить("AlcoholContent", Справочники.GlobalAlcoholContent.ПустаяСсылка());
	СтруктураGlobalSKU.Вставить("AlcoholContentNew");
	СтруктураGlobalSKU.Вставить("Amount", Справочники.GlobalAmount.ПустаяСсылка());
	СтруктураGlobalSKU.Вставить("AmountNew");
	СтруктураGlobalSKU.Вставить("Volume", Справочники.GlobalVolume.ПустаяСсылка());
	СтруктураGlobalSKU.Вставить("VolumeNew");
	СтруктураGlobalSKU.Вставить("Label", Справочники.GlobalLabel.ПустаяСсылка());
	СтруктураGlobalSKU.Вставить("LabelVersion", 0);
	СтруктураGlobalSKU.Вставить("LabelDescription", "");
	СтруктураGlobalSKU.Вставить("Version", 0);
	СтруктураGlobalSKU.Вставить("VersionDescription", "");
	СтруктураGlobalSKU.Вставить("Status", Перечисления.SKUStatuses.ACTIVE);

	РеквизитыДляЗапросаНового = Справочники.GlobalSKU.РеквизитыДляЗапросаНового();
	
	СоответствиеАтрибутовРезультатыЗапроса = ПолучитьСоответствияАтрибутовGlobal(НоменклатураСсылка, LocalFactory);
	
	Для каждого РезультатЗапроса Из СоответствиеАтрибутовРезультатыЗапроса Цикл
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(СтруктураGlobalSKU, ВыборкаДетальныеЗаписи);
		Иначе
			ИмяАтрибута = РезультатЗапроса.Колонки[0].Имя;
			РеквизитНового = Неопределено;
			Если РеквизитыДляЗапросаНового.Свойство(ИмяАтрибута, РеквизитНового) Тогда
				
				ЗначениеАтрибутаРезультат = "";
				Для каждого АтрибутИмя Из СтрРазделить(РеквизитНового["АтрибутLocal"],",") Цикл
					ЗначениеАтрибутаНового = НоменклатураСсылка[АтрибутИмя][РеквизитНового["РеквизитАтрибута"]];
					Если ТипЗнч(ЗначениеАтрибутаНового) = Тип("Строка") 
						И НЕ СокрЛП(ВРег(ЗначениеАтрибутаНового)) = "N/A" Тогда
						ЗначениеАтрибутаРезультат = ЗначениеАтрибутаРезультат + ЗначениеАтрибутаНового + " ";
					КонецЕсли; 
				КонецЦикла;
				Если ТипЗнч(ЗначениеАтрибутаРезультат) = Тип("Строка") Тогда
					ЗначениеАтрибутаРезультат = СокрЛП(ЗначениеАтрибутаРезультат);
				КонецЕсли; 
				
				СтруктураGlobalSKU[РеквизитНового["ПолеНового"]] = ЗначениеАтрибутаРезультат;
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураGlobalSKU;
	
КонецФункции // СтруктураСоответствияКлючевыхАтрибутов()

Функция ПолучитьСоответствияАтрибутовGlobal(НоменклатураСсылка, LocalFactory)

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("LocalMaterialType", НоменклатураСсылка.LocalMaterialType);
	Запрос.УстановитьПараметр("LocalBrand", НоменклатураСсылка.LocalBrand);
	Запрос.УстановитьПараметр("РазновидностьВкус", НоменклатураСсылка.РазновидностьВкус);
	Запрос.УстановитьПараметр("LocalAlcoholContent", НоменклатураСсылка.LocalAlcoholContent);
	Запрос.УстановитьПараметр("LocalAmount", НоменклатураСсылка.LocalAmount);
	Запрос.УстановитьПараметр("LocalFactory", LocalFactory);
	Запрос.УстановитьПараметр("LocalLabel", НоменклатураСсылка.LocalLabel);
	Запрос.УстановитьПараметр("LocalPacking", НоменклатураСсылка.LocalPacking);
	Запрос.УстановитьПараметр("LocalVersion", НоменклатураСсылка.LocalVersion);
	Запрос.УстановитьПараметр("LocalVolume", НоменклатураСсылка.LocalVolume);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеТипыМатериалов.Global КАК MaterialType
		|ИЗ
		|	РегистрСведений.СоответствиеТипыМатериалов КАК СоответствиеТипыМатериалов
		|ГДЕ
		|	СоответствиеТипыМатериалов.Local = &LocalMaterialType
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеБрэндовИРазновидностейВкусов.Brand
		|ИЗ
		|	РегистрСведений.СоответствиеБрэндовИРазновидностейВкусов КАК СоответствиеБрэндовИРазновидностейВкусов
		|ГДЕ
		|	СоответствиеБрэндовИРазновидностейВкусов.LocalBrand = &LocalBrand
		|	И СоответствиеБрэндовИРазновидностейВкусов.РазновидностьВкус = &РазновидностьВкус
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеБрэндовИРазновидностейВкусов.Brand КАК BrandGroup
		|ИЗ
		|	РегистрСведений.СоответствиеБрэндовИРазновидностейВкусов КАК СоответствиеБрэндовИРазновидностейВкусов
		|ГДЕ
		|	СоответствиеБрэндовИРазновидностейВкусов.LocalBrand = &LocalBrand
		|	И СоответствиеБрэндовИРазновидностейВкусов.РазновидностьВкус = ЗНАЧЕНИЕ(Справочник.РазновидностиВкусы.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеПроизводителиИмпортеры.Factory
		|ИЗ
		|	РегистрСведений.СоответствиеПроизводителиИмпортеры КАК СоответствиеПроизводителиИмпортеры
		|ГДЕ
		|	СоответствиеПроизводителиИмпортеры.LocalFactory = &LocalFactory
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеМатериалыИФормыТары.Packing
		|ИЗ
		|	РегистрСведений.СоответствиеМатериалыИФормыТары КАК СоответствиеМатериалыИФормыТары
		|ГДЕ
		|	СоответствиеМатериалыИФормыТары.LocalPacking = &LocalPacking
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеКрепости.AlcoholContent
		|ИЗ
		|	РегистрСведений.СоответствиеКрепости КАК СоответствиеКрепости
		|ГДЕ
		|	СоответствиеКрепости.LocalAlcoholContent = &LocalAlcoholContent
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеТипУпаковки.Amount
		|ИЗ
		|	РегистрСведений.СоответствиеТипУпаковки КАК СоответствиеТипУпаковки
		|ГДЕ
		|	СоответствиеТипУпаковки.LocalAmount = &LocalAmount
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеОбъемы.Volume
		|ИЗ
		|	РегистрСведений.СоответствиеОбъемы КАК СоответствиеОбъемы
		|ГДЕ
		|	СоответствиеОбъемы.LocalVolume = &LocalVolume
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СоответствиеРегионыСбыта.LocalFactory = &LocalFactory
		|			ТОГДА СоответствиеРегионыСбыта.LabelFactory
		|		ИНАЧЕ СоответствиеРегионыСбыта.Label
		|	КОНЕЦ КАК Label,
		|	СоответствиеРегионыСбыта.LabelVersion,
		|	СоответствиеРегионыСбыта.LabelDescription
		|ИЗ
		|	РегистрСведений.СоответствиеРегионыСбыта КАК СоответствиеРегионыСбыта
		|ГДЕ
		|	СоответствиеРегионыСбыта.LocalLabel = &LocalLabel
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеМодификацииВерсии.Version,
		|	СоответствиеМодификацииВерсии.VersionDescription
		|ИЗ
		|	РегистрСведений.СоответствиеМодификацииВерсии КАК СоответствиеМодификацииВерсии
		|ГДЕ
		|	СоответствиеМодификацииВерсии.LocalVersion = &LocalVersion";

	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции // ПолучитьТекстЗапросаСоответствияGlobal()

