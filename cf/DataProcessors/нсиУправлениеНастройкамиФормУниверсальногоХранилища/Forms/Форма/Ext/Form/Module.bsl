#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ПравоДоступа("Администрирование", Метаданные) Тогда
		Для каждого ПользовательИБ Из ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл
			Элементы.Пользователь.СписокВыбора.Добавить(ПользовательИБ.Имя);
		КонецЦикла;
	Иначе
		Элементы.Пользователь.Доступность = Ложь;
		Элементы.ФормаСкопировать.Доступность = Ложь;
	КонецЕсли;
	Пользователь = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	
	ЗаполнитьФормы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	ЗаполнитьФормы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Скопировать(Команда)
	Если Элементы.Формы.ВыделенныеСтроки.Количество() = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Для копирования нужно выбрать настройки, которые требуется скопировать.'"));
		Возврат;
	КонецЕсли;
	
	СписокПользователей = Элементы.Пользователь.СписокВыбора.Скопировать();
	Если СписокПользователей.Количество() = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Невозможно скопировать настройки, так как в системе не заведен ни один пользователь.'"));
		Возврат;
	КонецЕсли;
	ЭлементСписка = СписокПользователей.НайтиПоЗначению(Пользователь);
	Если ЭлементСписка <> Неопределено Тогда
		СписокПользователей.Удалить(ЭлементСписка);
	КонецЕсли;
	
	ОписаниеОповещения = новый ОписаниеОповещения("ОбработкаОтметкиЭлементов",ЭтаФорма);
	СписокПользователей.ПоказатьОтметкуЭлементов(ОписаниеОповещения,НСтр("ru = 'Отметьте пользователей, которым нужно скопировать настройки'"));
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтметкиЭлементов(Список, ДП) Экспорт
	Если Список <> Неопределено Тогда
		ПользователиПриемник = Новый Массив;
		Для Каждого Элемент Из Список Цикл
			Элементы.Пользователь.СписокВыбора.НайтиПоЗначению(Элемент.Значение).Пометка = Элемент.Пометка;
			Если Элемент.Пометка Тогда
				ПользователиПриемник.Добавить(Элемент.Значение);
			КонецЕсли;
		КонецЦикла;
		
		Если ПользователиПриемник.Количество() = 0 Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Для копирования нужно отметить пользователей, которым требуется скопировать настройки.'"));
			Возврат;
		КонецЕсли;
		
		ТекстВопроса = НСтр("ru = 'После копирования настроек пользователю форма у пользователя будет открываться с настройками, которые ему скопируются. При этом его собственные настройки будут потеряны. Вы действительно хотите скопировать настройки выбранным пользователям?'");
		ОписаниеОповещения = новый ОписаниеОповещения("ОбработкаОтветаКопированиеНастроек",ЭтаФорма,ПользователиПриемник);
		ПоказатьВопрос(ОписаниеОповещения,ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаКопированиеНастроек(Результат,ПользователиПриемник) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		СкопироватьНастройки(ПользователиПриемник);
		ПоказатьОповещениеПользователя(НСтр("ru = 'Настройки скопированы'"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	Если Элементы.Формы.ВыделенныеСтроки.Количество() = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Для удаления нужно выбрать настройки, которые требуется удалить.'"));
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'После удаления настроек форма будет открываться с настройками по умолчанию. Вы действительно хотите удалить настройки?'");
	ОписаниеОповещения = новый ОписаниеОповещения("ОбработкаОтветаУдалениеНастроек",ЭтаФорма);
	ПоказатьВопрос(ОписаниеОповещения,ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да)
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаУдалениеНастроек(Результат,ДП) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		УдалитьНастройки();
		ЗаполнитьФормы();
		ПоказатьОповещениеПользователя(НСтр("ru = 'Настройки удалены'"));
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СкопироватьНастройки(СписокПользователей)
	// Обработка = Обработк.УправлениеНастройкамиФорм.Создать();
	// Обработка.СкопироватьНастройкиФорм(Пользователь, СписокПользователей, ПолучитьМассивНастроек());
КонецПроцедуры

&НаСервере
Процедура УдалитьНастройки()
	// Обработка = Обработки.УправлениеНастройкамиФорм.Создать();
	// Обработка.УдалитьНастройкиФорм(Пользователь, ПолучитьМассивНастроек());
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормы()
	Формы.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Виды.Наименование,
	|	Виды.Ссылка
	|ИЗ
	|	Справочник.нсиВидыСправочников КАК Виды
	|ГДЕ
	|	Виды.ВидСправочника <> ЗНАЧЕНИЕ(Перечисление.нсиВидыСправочников.ТабличнаяЧасть)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Виды.Наименование";
	
	Выб = Запрос.Выполнить().Выбрать();
	СтОтбора = Новый Структура("КлючОбъекта,Пользователь", Неопределено, Пользователь);
	Пока Выб.Следующий() Цикл
		ИмяФормыНастройки = "ВнешняяОбработка._"+СтрЗаменить(XMLСтрока(Выб.Ссылка), "-", "")+".Форма.ФормаСписка";
		СтОтбора.КлючОбъекта = ИмяФормыНастройки+"/НастройкиФормы";
		ВыбНастроек = ХранилищеСистемныхНастроек.Выбрать(СтОтбора);
		Если ВыбНастроек.Следующий() Тогда
			Формы.Добавить(ИмяФормыНастройки, Выб.Наименование+".Форма списка");
		КонецЕсли;
		
		ИмяФормыНастройки = "ВнешняяОбработка._"+СтрЗаменить(XMLСтрока(Выб.Ссылка), "-", "")+".Форма.ФормаЭлемента";
		СтОтбора.КлючОбъекта = ИмяФормыНастройки+"/НастройкиФормы";
		ВыбНастроек = ХранилищеСистемныхНастроек.Выбрать(СтОтбора);
		Если ВыбНастроек.Следующий() Тогда
			Формы.Добавить(ИмяФормыНастройки, Выб.Наименование+".Форма элемента");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
