
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДополнительныйРеквизитПриИзменении(Элемент)
	
	ЗаполнитьНаборыРеквизитовИСведений();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Очистить(Команда)
	
	Для Каждого СтрокаТЧ Из ПереченьСправочников Цикл 
		Если СтрокаТЧ.Очищать Тогда 
			Состояние("Очистка реквизита у справочника "+СтрокаТЧ.ИмяСправочника);
			ОчиститьРеквизитУСправочника(СтрокаТЧ.ИмяСправочника);
		КонецЕсли;
	КонецЦикла;	
	
	Состояние("Корректировка набора свойств и пометка на удаление свойства");
	Для Каждого СтрокаТЧ Из НаборыРеквизитовИСведений Цикл 
		Если СтрокаТЧ.Очищать Тогда 
			ОчиститьРеквизитУНабора(СтрокаТЧ.Набор);
		КонецЕсли;
	КонецЦикла;	
	
	ЗаполнитьНаборыРеквизитовИСведений();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура - заполняет таблицу набора и справочников.
//
Процедура ЗаполнитьНаборыРеквизитовИСведений()
	
	НаборыРеквизитовИСведений.Очистить();
	ПереченьСправочников.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Свойство", Объект.ДополнительныйРеквизит);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка КАК Набор,
		|	ЛОЖЬ КАК Очищать
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
		|ГДЕ
		|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство = &Свойство
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка,
		|	ЛОЖЬ
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения
		|ГДЕ
		|	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство = &Свойство";
	Результат = Запрос.Выполнить().Выгрузить();

    НаборыРеквизитовИСведений.Загрузить(Результат);	
	
	
	Для Каждого мСправочник Из Метаданные.Справочники Цикл 
		Если (Не мСправочник.Имя = "НаборыДополнительныхРеквизитовИСведений") И
			(Не мСправочник.ТабличныеЧасти.Найти("ДополнительныеРеквизиты") = Неопределено) Тогда 			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Свойство", Объект.ДополнительныйРеквизит);
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1 Ссылка КАК Ссылка
			|ИЗ Справочник."+мСправочник.Имя+".ДополнительныеРеквизиты
			|ГДЕ Свойство = &Свойство
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ Объект
			|ИЗ РегистрСведений.ДополнительныеСведения  
			|ГДЕ Свойство = &Свойство И ТИПЗНАЧЕНИЯ(Объект) = ТИП(Справочник."+мСправочник.Имя+")";
			ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
				СтрокаТЧ = ПереченьСправочников.Добавить();
				СтрокаТЧ.ИмяСправочника = мСправочник.Имя;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры	

// Процедура - очищает выделенные наборы и помечает на удаление свойство.
//
Процедура ОчиститьРеквизитУНабора(Набор)
	
	мОбъект = Набор.ПолучитьОбъект();
	НайденныеСтроки = мОбъект.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", Объект.ДополнительныйРеквизит) );
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
		мОбъект.ДополнительныеРеквизиты.Удалить(НайденнаяСтрока);
	КонецЦикла;	
	НайденныеСтроки = мОбъект.ДополнительныеСведения.НайтиСтроки(Новый Структура("Свойство", Объект.ДополнительныйРеквизит) );
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
		мОбъект.ДополнительныеСведения.Удалить(НайденнаяСтрока);
	КонецЦикла;	
	мОбъект.Записать();
	
	мОбъект = Объект.ДополнительныйРеквизит.ПолучитьОбъект();
	мОбъект.УстановитьПометкуУдаления(Истина);
	
КонецПроцедуры	

// Процедура - в зависимости от вида свойства - удаляет из ТЧ или из РС.
//
Процедура ОчиститьРеквизитУСправочника(ИмяСправочника)
	
	Если Объект.ДополнительныйРеквизит.ЭтоДополнительноеСведение Тогда 
		
		// удаление из регистра свойств
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Свойство", Объект.ДополнительныйРеквизит);
		Запрос.Текст = 
			"ВЫБРАТЬ Свойство, Объект
			|ИЗ РегистрСведений.ДополнительныеСведения 
			|ГДЕ Свойство = &Свойство И ТИПЗНАЧЕНИЯ(Объект) = ТИП(Справочник."+ИмяСправочника+")";
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			МенеджерЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Объект 	= ВыборкаДетальныеЗаписи.Объект;
			МенеджерЗаписи.Свойство = ВыборкаДетальныеЗаписи.Свойство;
			МенеджерЗаписи.Удалить();
		КонецЦикла;	
		
	Иначе  	
		
		// удаление из табличных частей
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Свойство", Объект.ДополнительныйРеквизит);
		Запрос.Текст = 
			"ВЫБРАТЬ Ссылка
			|ИЗ Справочник."+ИмяСправочника+".ДополнительныеРеквизиты  
			|ГДЕ Свойство = &Свойство";
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			мОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			НайденныеСтроки = мОбъект.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", Объект.ДополнительныйРеквизит) );
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				мОбъект.ДополнительныеРеквизиты.Удалить(НайденнаяСтрока);
			КонецЦикла;	
			мОбъект.Записать();
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти
