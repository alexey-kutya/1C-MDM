
&НаКлиенте
Процедура УстановитьНовыйСтатус(Команда)
	
	Если НЕ ЗначениеЗаполнено(LocalPartner) Тогда
		СообщениеПользователю = НСтр("ru = 'Не заполнено поле ""Партнер (Local)""'; en = 'The field ""Partner (Local)"" is empty'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеПользователю,, "GlobalSKU");
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(NewStatus) Тогда
		СообщениеПользователю = НСтр("ru = 'Не заполнено поле ""Новый статус""'; en = 'The field ""New status"" is empty'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеПользователю,, "NewStatus");
		Возврат;
	КонецЕсли; 
	
	Если NewStatus = ПредопределенноеЗначение("Перечисление.GlobalPartnersStatuses.INACTIVE") Тогда
		Если НЕ ЗначениеЗаполнено(Comments) Тогда
			СообщениеПользователю = Новый СообщениеПользователю();
			СообщениеПользователю.Текст = НСтр("ru = 'Для перевода статуса в неактивный укажите причину в поле Комментарии.'; en = 'To change the status to inactive, specify the reason in the Comments field.'");
			СообщениеПользователю.Поле = "Comments";
			СообщениеПользователю.Сообщить();
			Возврат;
		КонецЕсли; 
		ТекстВопроса = НСтр("ru = 'Статус будет изменен на неактивный без возможности обратной активации. Продолжить?'; en = 'The status will be changed to inactive without possibility to reactivate it. Are you sure you want to do it?'");
		Оповещение = Новый ОписаниеОповещения("ОбработатьОтвет", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		GlobalMDM.УстановитьНовыйСтатусНаСервере(LocalPartner, NewStatus, "MappingGlobalAndLocalPartners");
	
		ОтобразитьТекущийСтатусНаСервере();
		УстановитьДоступность();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтвет(Знач Результат, Знач ПараметрКоманды) Экспорт 

	Если Результат = КодВозвратаДиалога.Да Тогда
		GlobalMDM.УстановитьНовыйСтатусНаСервере(LocalPartner, NewStatus, "MappingGlobalAndLocalPartners", Comments);
		ОтобразитьТекущийСтатусНаСервере();
		УстановитьДоступность();
	Иначе	
		Возврат;
	КонецЕсли;	

КонецПроцедуры // ОбработатьОтвет()

//&НаСервереБезКонтекста
//Процедура УстановитьНовыйСтатусНаСервере(LocalPartner, NewStatus, Comments = "")

//	РеквизитыLocalSKU = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(LocalPartner, "Status");
//	
//	Если NewStatus = РеквизитыLocalSKU.Status Тогда
//		Сообщить(НСтр("ru = 'Новый статус не установлен! Новый статус должен отличаться от текущего.'; en = 'The status has NOT been changed, because it should be different from the current one!'"), СтатусСообщения.Внимание);
//		Возврат;
//	КонецЕсли; 
//	
//	УстановитьПривилегированныйРежим(Истина);
//	
//	LocalSKUОбъект = LocalPartner.ПолучитьОбъект();
//	LocalSKUОбъект.Status = NewStatus;
//	Попытка
//		LocalSKUОбъект.Записать();
//		
//		СоздатьБизнесПроцессыУведомление(LocalPartner, РеквизитыLocalSKU.Status, NewStatus, Comments);
//		
//		GlobalMDM.УстановитьСтатусВРегистреСоответствий(LocalPartner, NewStatus);
//		
//		Сообщить(НСтр("ru = 'Новый статус успешно установлен.'; en = 'The status has been changed successfully.'"));
//	Исключение
//		Сообщить(НСтр("ru = 'Не удалось установить новый статус. Смотрите сообщение об ошибке.'; en = 'Failed to set a new status. See the error message.'"), СтатусСообщения.ОченьВажное);	
//		Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);	
//	КонецПопытки; 

//КонецПроцедуры // УстановитьНовыйСтатусНаСервере()

//&НаСервереБезКонтекста
//Процедура СоздатьБизнесПроцессыУведомление(LocalPartner, CurrentStatus, NewStatus)
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	ИсполнителиЗадач.Исполнитель
//		|ИЗ
//		|	РегистрСведений.ИсполнителиЗадач КАК ИсполнителиЗадач
//		|ГДЕ
//		|	ИсполнителиЗадач.РольИсполнителя = &РольИсполнителя";
//	
//	Запрос.УстановитьПараметр("РольИсполнителя", ПредопределенноеЗначение("Справочник.РолиИсполнителей.GlobalMasterDataManager"));
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		
//		СоздатьБизнесПроцессУведомление(LocalPartner, CurrentStatus, NewStatus, ВыборкаДетальныеЗаписи.Исполнитель);
//		
//	КонецЦикла;
//	
//КонецПроцедуры // СоздатьБизнесПроцессУведомление()

//&НаСервереБезКонтекста
//Процедура СоздатьБизнесПроцессУведомление(LocalPartner, CurrentStatus, NewStatus, Исполнитель)

//	БП = БизнесПроцессы.Задание.СоздатьБизнесПроцесс();
//	БП.Дата = ТекущаяДата();
//	БП.Автор = Пользователи.АвторизованныйПользователь();
//	БП.Важность = Перечисления.ВариантыВажностиЗадачи.Обычная;
//	БП.Выполнено = Ложь;
//	БП.Исполнитель = Исполнитель;
//	
//	Наименование = НСтр("ru = 'Status changing %1'; en = 'Status changing %1'", "en");
//	Наименование = СтрЗаменить(Наименование,"%1",LocalPartner.LocalID);
//	
//	БП.Наименование = Наименование;
//	БП.НаПроверке = Ложь;
//	БП.Подтверждено = Ложь;
//	БП.Предмет = LocalPartner;
//	
//	ОписаниеЗадания = НСтр("ru = 'The status has been changed from ""%1"" to ""%2""'; en = 'The status has been changed from ""%1"" to ""%2""'", "en");
//	ОписаниеЗадания = СтрЗаменить(ОписаниеЗадания,"%1",CurrentStatus);
//	ОписаниеЗадания = СтрЗаменить(ОписаниеЗадания,"%2",NewStatus);
//	
//	БП.ОписаниеЗадания = ОписаниеЗадания;
//	БП.Состояние = Перечисления.СостоянияБизнесПроцессов.Активен;
//	//		БП.АвторСтрокой = ПользовательОтветственный.Наименование;
//	БП.ВнешнееЗадание = Ложь;
//	БП.ит_Назначение = ПредопределенноеЗначение("Перечисление.ВидыНазначенийБизнесПроцессов.Уведомление");
//	//		БП.СодержаниеПредмета = СодержаниеПредмета;
//	БП.Записать();
//	БП.Старт();

//КонецПроцедуры // ()
 
&НаСервере
Процедура ОтобразитьТекущийСтатусНаСервере()

	РеквизитыLocalPartner = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(LocalPartner, "Status");
	CurrentStatus = РеквизитыLocalPartner.Status;

КонецПроцедуры // ОтобразитьТекущийСтатусНаСервере()

&НаКлиенте
Процедура УстановитьДоступность()

	ДоступностьНовыйСтатус = НЕ CurrentStatus = ПредопределенноеЗначение("Перечисление.GlobalPartnersStatuses.INACTIVE");
	Элементы.NewStatus.Доступность = ДоступностьНовыйСтатус;
	Элементы.УстановитьНовыйСтатус.Доступность = ДоступностьНовыйСтатус;

КонецПроцедуры // УстановитьДоступность()

&НаКлиенте
Процедура LocalPartnerПриИзменении(Элемент)
	
	ОтобразитьТекущийСтатусНаСервере();
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура CommentsВидимость()

	ВидимостьComments = NewStatus = ПредопределенноеЗначение("Перечисление.SKUStatuses.INACTIVE");
	Элементы.Comments.Видимость = ВидимостьComments;

КонецПроцедуры // CommentsВидимость()

&НаКлиенте
Процедура NewStatusПриИзменении(Элемент)
	CommentsВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	CommentsВидимость();
КонецПроцедуры

 
 
