#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьБизнесПроцессыИЗадачи") Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", НачалоДня(ТекущаяДата()));
	Список.Параметры.УстановитьЗначениеПараметра("НезаполненнаяДата", Дата(1,1,1));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор, "Выполнена", Ложь);
			
	нсиБизнесПроцессы.УстановитьОформлениеЗадач(Список);
	
	Если Не Список.Параметры.Элементы.Найти("Пользователь") = Неопределено Тогда 
		Список.Параметры.УстановитьЗначениеПараметра("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗадачаВыполнена" ИЛИ ИмяСобытия = "ЗадачаИзменена" Тогда
		ОбновлениеОформления();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИнтервалОбновления = нсиРаботаСФормамиСервер.ПолучитьИнтервалОбновленияСпискаЗадач();
	Если ИнтервалОбновления >= 1 Тогда 
		ПодключитьОбработчикОжидания("ОбновлениеОформления",ИнтервалОбновления);
	Иначе
		ОбновлениеОформления();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОтключитьОбработчикОжидания("ОбновлениеОформления");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СгруппироватьПоВажности(Команда)
	СгруппироватьПоКолонке("Важность");
КонецПроцедуры

&НаКлиенте
Процедура СгруппироватьПоБезГруппировки(Команда)
	СгруппироватьПоКолонке("");
КонецПроцедуры

&НаКлиенте
Процедура СгруппироватьПоТочкеМаршрута(Команда)
	СгруппироватьПоКолонке("ТочкаМаршрута");
КонецПроцедуры

&НаКлиенте
Процедура СгруппироватьПоАвтору(Команда)
	СгруппироватьПоКолонке("Автор");
КонецПроцедуры

&НаКлиенте
Процедура СгруппироватьПоПредмету(Команда)
	СгруппироватьПоКолонке("ПредметСтрокой");
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// НСИ

&НаКлиенте
Процедура СоздатьЗадание(Команда)
	БизнесПроцессыИЗадачиКлиент.СоздатьЗадание(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВводНовогоЭлементаСправочника(Команда)
	ОткрытьФорму("БизнесПроцесс.нсиВводНовогоЭлементаСправочника.ФормаОбъекта", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеЭлементаСправочника(Команда)
	ОткрытьФорму("БизнесПроцесс.нсиИзменениеЭлементаСправочника.ФормаОбъекта", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура УдалениеЭлементаСправочника(Команда)
	ОткрытьФорму("БизнесПроцесс.нсиУдалениеЭлементаСправочника.ФормаОбъекта", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СгруппироватьПоТипуПредмета(Команда)
	СгруппироватьПоКолонке("ТипПредмета");
КонецПроцедуры

&НаКлиенте
Процедура ПакетныйВводЭлементовСправочника(Команда)
	ОткрытьФорму("БизнесПроцесс.нсиПакетныйВводЭлементовСправочника.ФормаОбъекта", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	ОбновлениеОформления();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	БизнесПроцессыИЗадачиКлиент.СписокЗадачПередНачаломДобавления(ЭтаФорма, Элемент, Отказ, Копирование, 
		Родитель, Группа);
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	нсиБизнесПроцессыИЗадачиКлиент.СписокЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	нсиБизнесПроцессыИЗадачиКлиент.СписокЗадачПередНачаломИзменения(Элемент, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура СгруппироватьПоКолонке(Знач ИмяКолонкиРеквизита)
	РежимГруппировки = ИмяКолонкиРеквизита;
	Список.Группировка.Элементы.Очистить();
	Если НЕ ПустаяСтрока(ИмяКолонкиРеквизита) Тогда
		ПолеГруппировки = Список.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных(ИмяКолонкиРеквизита);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// НСИ
&НаКлиенте
Процедура ОбновлениеОформления()
	УстановитьОформлениеНаСервере();
	Элементы.Список.Обновить();
КонецПроцедуры

Процедура УстановитьОформлениеНаСервере()
	нсиБизнесПроцессы.УстановитьОформлениеЗадач(Список);
КонецПроцедуры

#КонецОбласти
