#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем ТекстЗаголовкаФормы;
	Если Параметры.Свойство("ЗаголовокФормы", ТекстЗаголовкаФормы) И
		НЕ ПустаяСтрока(ТекстЗаголовкаФормы) Тогда
		Заголовок = ТекстЗаголовкаФормы;
		АвтоЗаголовок = Ложь;
				
	КонецЕсли;
	
	Если Параметры.Свойство("БизнесПроцесс") Тогда
		СтрокаБизнесПроцесса = Параметры.БизнесПроцесс;
		СтрокаЗадачи = Параметры.Задача;
		Элементы.ГруппаЗаголовок.Видимость = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказыватьЗадачи") Тогда
		ПоказыватьЗадачи = Параметры.ПоказыватьЗадачи;
	Иначе
		ПоказыватьЗадачи = 2;
	КонецЕсли;
	
	Если Параметры.Свойство("ВидимостьОтборов") Тогда
		Элементы.ГруппаОтбор.Видимость = Параметры.ВидимостьОтборов;
	КонецЕсли;
	
	Если Параметры.Свойство("БлокировкаОкнаВладельца") Тогда
		РежимОткрытияОкна = Параметры.БлокировкаОкнаВладельца;
	КонецЕсли;	
		
	ПоАвтору = ПользователиКлиентСервер.ТекущийПользователь();
	
	Если Параметры.РасшифровкаОтчета Тогда 
		Элементы.ГруппаОтбор.Видимость = Ложь;
		Элементы.ГруппаСостояние.Видимость = Ложь;
		Элементы.БизнесПроцесс.Видимость = Ложь;
	КонецЕсли;
	
	УстановитьОтбор();
	
	нсиБизнесПроцессы.УстановитьОформлениеЗадач(Список);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗадачаВыполнена" ИЛИ ИмяСобытия = "ЗадачаИзменена" Тогда
		Элементы.Список.Обновить();
 	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	Если Параметры.Исполнитель<>Неопределено Тогда 
		ПоИсполнителю = Параметры.Исполнитель;
	КонецЕсли;
	Если Параметры.РасшифровкаОтчета Тогда 
		ПоказыватьЗадачи = 0;
		УстановитьОтбор();
	КонецЕсли;
	УстановитьОтборСписка(Список, Настройки);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИнтервалОбновления = нсиРаботаСФормамиСервер.ПолучитьИнтервалОбновленияСпискаЗадач();
	Если ИнтервалОбновления >= 1 Тогда 
		ПодключитьОбработчикОжидания("ОбновлениеОформления",ИнтервалОбновления);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОтключитьОбработчикОжидания("ОбновлениеОформления");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоИсполнителюПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ПоАвторуПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьЗадачиПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	БизнесПроцессыИЗадачиКлиент.СписокЗадачПередНачаломДобавления(ЭтаФорма, Элемент, Отказ, Копирование, 
		Родитель, Группа);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	нсиБизнесПроцессыИЗадачиКлиент.СписокЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	нсиБизнесПроцессыИЗадачиКлиент.СписокЗадачПередНачаломИзменения(Элемент, Отказ);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// НСИ

&НаКлиенте
Процедура СоздатьЗадание(Команда)
	БизнесПроцессыИЗадачиКлиент.СоздатьЗадание(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ВводНовогоЭлементаСправочника(Команда)
	ОткрытьФорму("БизнесПроцесс.нсиВводНовогоЭлементаСправочника.ФормаОбъекта", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеЭлементаСправочника(Команда)
	ОткрытьФорму("БизнесПроцесс.нсиИзменениеЭлементаСправочника.ФормаОбъекта", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура УдалениеЭлементаСправочника(Команда)
	ОткрытьФорму("БизнесПроцесс.нсиУдалениеЭлементаСправочника.ФормаОбъекта", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПакетныйВводЭлементовСправочника(Команда)
	ОткрытьФорму("БизнесПроцесс.нсиПакетныйВводЭлементовСправочника.ФормаОбъекта", , ЭтаФорма);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтбор()
	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("ПоАвтору", ПоАвтору);
	ПараметрыОтбора.Вставить("ПоИсполнителю", ПоИсполнителю);
	ПараметрыОтбора.Вставить("ПоказыватьЗадачи", ПоказыватьЗадачи);
	УстановитьОтборСписка(Список, ПараметрыОтбора);
КонецПроцедуры	

&НаСервере
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	Если ПараметрыОтбора["ПоАвтору"].Пустая() ИЛИ Параметры.РасшифровкаОтчета Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Автор");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор, "Автор", ПараметрыОтбора["ПоАвтору"]);
	КонецЕсли;
	
	Если ПараметрыОтбора["ПоИсполнителю"].Пустая() ИЛИ Параметры.РасшифровкаОтчета Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Исполнитель", NULL);
	Иначе	
		Список.Параметры.УстановитьЗначениеПараметра("Исполнитель", ПараметрыОтбора["ПоИсполнителю"]);
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ОтображениеРасшифровки", Параметры.РасшифровкаОтчета);

		
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Выполнена");
	Если ПараметрыОтбора["ПоказыватьЗадачи"] <> 0 И НЕ Параметры.РасшифровкаОтчета Тогда 
		
		Если ПараметрыОтбора["ПоказыватьЗадачи"] = 1 Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				Список.Отбор, "Выполнена", Истина);
		КонецЕсли;
		
		Если ПараметрыОтбора["ПоказыватьЗадачи"] = 2 Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				Список.Отбор, "Выполнена", Ложь);
		КонецЕсли;	
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеОформления()
	УстановитьОформлениеНаСервере();
	Элементы.Список.Обновить();
КонецПроцедуры

Процедура УстановитьОформлениеНаСервере()
	нсиБизнесПроцессы.УстановитьОформлениеЗадач(Список);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	Элементы.Список.Обновить();
КонецПроцедуры

#КонецОбласти

