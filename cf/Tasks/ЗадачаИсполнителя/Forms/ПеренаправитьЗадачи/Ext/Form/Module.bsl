#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекстЗаголовкаФормы = Параметры.ЗаголовокФормы;
	ЗаголовокПоУмолчанию = ПустаяСтрока(ТекстЗаголовкаФормы);
	Если НЕ ЗаголовокПоУмолчанию Тогда
		Заголовок = ТекстЗаголовкаФормы;
	КонецЕсли;
	
	ТекстЗаголовка = "";
	
	Если Параметры.КоличествоЗадач > 1 Тогда
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("en='%1 (%2)';ru='%1 (%2)'"),
			?(ЗаголовокПоУмолчанию, НСтр("en='Selected tasks';ru='Выбрано задач'"), ТекстЗаголовкаФормы),
			Строка(Параметры.КоличествоЗадач));
	ИначеЕсли Параметры.КоличествоЗадач = 1 Тогда
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("en='%1 %2';ru='%1 %2'"),
			?(ЗаголовокПоУмолчанию, НСтр("en='The selected task';ru='Выбранная задача'"), ТекстЗаголовкаФормы),
			Строка(Параметры.Задача));
	Иначе
		Элементы.ДекорацияЗаголовок.Видимость = Ложь;
	КонецЕсли;
	Элементы.ДекорацияЗаголовок.Заголовок = ТекстЗаголовка;
	
	УстановитьСостояниеЭлементов();
	
	нсиРаботаСФормами.УстановитьПараметрыВыбораИзМассива(
		Элементы.Исполнитель, 
		"Ссылка", 
		нсиБизнесПроцессы.ПолучитьВозможныхИсполнителейЗадач()
	);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ТипАдресации = 0 Тогда
		Если Исполнитель.Пустая() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("en='Unknown executor of the problem.';ru='Не указан исполнитель задачи.'"),,,
				"Исполнитель",
				Отказ);
		КонецЕсли;
		Возврат;
	Иначе
		Если СпособРаспределения.Пустая() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("en='Unknown method of allocation of tasks.';ru='Не указан способ распределения задач.'"),,,
				"СпособРаспределения",
				Отказ);
			Возврат;
		КонецЕсли;
		
		Если СпособРаспределения = Перечисления.нсиСпособыРаспределенияЗадач.ПоРоли Тогда 
			Если Роль.Пустая() Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("en='Executors Role does not specify for the task.';ru='Не указана роль исполнителей задачи.'"),,,
					"Роль",
					Отказ);
				Возврат;
			КонецЕсли;
		ИначеЕсли СпособРаспределения = Перечисления.нсиСпособыРаспределенияЗадач.ПоГруппеПользователейБП Тогда 
			Если ОсновнойОбъектАдресации.Пустая() Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("en='Unknown primary object addressing.';ru='Не указан основной объект адресации.'"),,,
					"ОсновнойОбъектАдресации",
					Отказ);
				Возврат;
			КонецЕсли;
		ИначеЕсли СпособРаспределения = Перечисления.нсиСпособыРаспределенияЗадач.ПоРолиИГруппеПользователейБП Тогда 
			Если Роль.Пустая() Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("en='Executors Role does not specify for the task.';ru='Не указана роль исполнителей задачи.'"),,,
					"Роль",
					Отказ);
				Возврат;
			КонецЕсли;
			Если ОсновнойОбъектАдресации.Пустая() Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("en='Unknown primary object addressing.';ru='Не указан основной объект адресации.'"),,,
					"ОсновнойОбъектАдресации",
					Отказ);
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	
	ЗаданыТипыОсновногоОбъектаАдресации = ИспользуетсяСОбъектамиАдресации
		И ЗначениеЗаполнено(ТипыОсновногоОбъектаАдресации);
	ЗаданыТипыДополнительногоОбъектаАдресации = ИспользуетсяСОбъектамиАдресации 
		И ЗначениеЗаполнено(ТипыДополнительногоОбъектаАдресации);
	
	Если ЗаданыТипыОсновногоОбъектаАдресации И ОсновнойОбъектАдресации = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("en='The field ""%1"" is not filled.';ru='Поле ""%1"" не заполнено.'"),
				Роль.ТипыОсновногоОбъектаАдресации.Наименование),,,
			"ОсновнойОбъектАдресации",
			Отказ);
		Возврат;
	ИначеЕсли ЗаданыТипыДополнительногоОбъектаАдресации И ДополнительныйОбъектАдресации = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("en='The field ""%1"" is not filled.';ru='Поле ""%1"" не заполнено.'"),
				Роль.ТипыДополнительногоОбъектаАдресации.Наименование),,,
			"ДополнительныйОбъектАдресации",
			Отказ);
		Возврат;
	КонецЕсли;
	
	Если НЕ ИгнорироватьПредупреждения И 
		НЕ нсиБизнесПроцессы.ЕстьИсполнителиРоли(Роль, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("en='On the specified role ithere are no assigned executors. (To ignore this warning, select the check box.)';ru='На указанную роль не назначено ни одного исполнителя. (Чтобы проигнорировать это предупреждение, установите флажок.)'"),,,
			"Роль",
			Отказ);
		Элементы.ИгнорироватьПредупреждения.Видимость = Истина;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура OK(Команда)
	
	ОчиститьСообщения();
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(ПараметрыЗакрытия());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипАдресацииПриИзменении(Элемент)
	Если ТипАдресации = 0 Тогда 
		ОсновнойОбъектАдресации = Неопределено;
		ДополнительныйОбъектАдресации = Неопределено;
		Роль = Неопределено;
		СпособРаспределения = Неопределено;
	Иначе
		Исполнитель = Неопределено;
	КонецЕсли;
	УстановитьСостояниеЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура СпособРаспределенияПриИзменении(Элемент)
	СпособРаспределенияПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСостояниеЭлементов()
	
	Если ТипАдресации = 0 Тогда 
		Элементы.ГруппаПараметрыГрупповойАдресации.Видимость = Ложь;
		Элементы.Исполнитель.Видимость = Истина;
	Иначе
		Элементы.ГруппаПараметрыГрупповойАдресации.Видимость = Истина;
		Элементы.Исполнитель.Видимость = Ложь;
		
		Если СпособРаспределения = Перечисления.нсиСпособыРаспределенияЗадач.ПоРоли Тогда 
			Элементы.Роль.Видимость = Истина;
			Элементы.ОсновнойОбъектАдресации.Видимость = Ложь;
		ИначеЕсли СпособРаспределения = Перечисления.нсиСпособыРаспределенияЗадач.ПоГруппеПользователейБП Тогда 
			Элементы.Роль.Видимость = Ложь;
			Элементы.ОсновнойОбъектАдресации.Видимость = Истина;
		ИначеЕсли СпособРаспределения = Перечисления.нсиСпособыРаспределенияЗадач.ПоРолиИГруппеПользователейБП Тогда 
			Элементы.Роль.Видимость = Истина;
			Элементы.ОсновнойОбъектАдресации.Видимость = Истина;
		Иначе
			Элементы.Роль.Видимость = Ложь;
			Элементы.ОсновнойОбъектАдресации.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыЗакрытия()
	
	Возврат Новый Структура("Исполнитель,РольИсполнителя,ОсновнойОбъектАдресации,ДополнительныйОбъектАдресации,СпособРаспределения,Комментарий",
		Исполнитель,
		Роль,
		?(ОсновнойОбъектАдресации <> Неопределено И НЕ ОсновнойОбъектАдресации.Пустая(), ОсновнойОбъектАдресации, Неопределено),
		?(ДополнительныйОбъектАдресации <> Неопределено И НЕ ДополнительныйОбъектАдресации.Пустая(), ДополнительныйОбъектАдресации, Неопределено),
		СпособРаспределения,
		Комментарий);
	
КонецФункции

&НаСервере
Процедура СпособРаспределенияПриИзмененииНаСервере()
	Если СпособРаспределения = Перечисления.нсиСпособыРаспределенияЗадач.ПоРоли Тогда 
		ОсновнойОбъектАдресации = Неопределено;
	ИначеЕсли СпособРаспределения = Перечисления.нсиСпособыРаспределенияЗадач.ПоГруппеПользователейБП Тогда 
		Роль = Неопределено;
	ИначеЕсли СпособРаспределения = Перечисления.нсиСпособыРаспределенияЗадач.ПоРолиИГруппеПользователейБП Тогда 
	Иначе
		ОсновнойОбъектАдресации = Неопределено;
		Роль = Неопределено;
	КонецЕсли;
	УстановитьСостояниеЭлементов();
КонецПроцедуры

#КонецОбласти
