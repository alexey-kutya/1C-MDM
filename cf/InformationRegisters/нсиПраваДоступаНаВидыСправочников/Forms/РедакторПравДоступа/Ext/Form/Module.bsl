#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Параметры.ВидСправочника) Тогда
		ВидСправочника = Параметры.ВидСправочника;
		Элементы.ВидыСправочников.Видимость = Ложь;
		Если ВидСправочника.ВидСправочника=Перечисления.нсиВидыСправочников.ТабличнаяЧасть Тогда
			ТолькоПросмотр = Истина;
			Элементы.НаборЗаписейЗаписать.Доступность = Ложь;
			Заголовок = "Права доступа: на табличную часть права не могут быть назначены";
		Иначе
			ПрочитатьНабор(Параметры.ВидСправочника);
			Заголовок = "Права доступа: "+ВидСправочника.Наименование;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Если Модифицированность Тогда
		ЗаписатьНабор();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	Если Модифицированность Тогда
		ЗаписатьНабор();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидыСправочниковПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбновитьНабор", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если ЗначениеЗаполнено(ВидСправочника) Тогда
		Элемент.ТекущиеДанные.ВидСправочника = ВидСправочника;
	Иначе
		Элемент.ТекущиеДанные.ВидСправочника = Элементы.ВидыСправочников.ТекущаяСтрока;
	КонецЕсли;
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущиеДанные.Пользователь = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрПриИзменении(Элемент)
	Запись = Элементы.НаборЗаписей.ТекущиеДанные;
	Если не Запись.Просмотр Тогда
		Запись.Добавление = Ложь;
		Запись.Редактирование = Ложь;
		Запись.ПометкаНаУдаление = Ложь;
		Запись.СнятиеПометкиНаУдаление = Ложь;
		Запись.Удаление = Ложь;
		Запись.УдалениеПомеченных = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеПриИзменении(Элемент)
	Запись = Элементы.НаборЗаписей.ТекущиеДанные;
	Если Запись.Добавление Тогда
		Запись.Просмотр = Истина;
		Запись.Редактирование = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеПриИзменении(Элемент)
	Запись = Элементы.НаборЗаписей.ТекущиеДанные;
	Если Запись.Редактирование Тогда
		Запись.Просмотр = Истина;
	Иначе
		Запись.Добавление = Ложь;
		Запись.ПометкаНаУдаление = Ложь;
		Запись.СнятиеПометкиНаУдаление = Ложь;
		Запись.Удаление = Ложь;
		Запись.УдалениеПомеченных = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПометкаНаУдалениеПриИзменении(Элемент)
	Запись = Элементы.НаборЗаписей.ТекущиеДанные;
	Если Запись.ПометкаНаУдаление Тогда
		Запись.Просмотр = Истина;
		Запись.Редактирование = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СнятиеПометкиНаУдалениеПриИзменении(Элемент)
	Запись = Элементы.НаборЗаписей.ТекущиеДанные;
	Если Запись.СнятиеПометкиНаУдаление Тогда
		Запись.Просмотр = Истина;
		Запись.Редактирование = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалениеПриИзменении(Элемент)
	Запись = Элементы.НаборЗаписей.ТекущиеДанные;
	Если Запись.Удаление Тогда
		Запись.Просмотр = Истина;
		Запись.Редактирование = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалениеПомеченныхПриИзменении(Элемент)
	Запись = Элементы.НаборЗаписей.ТекущиеДанные;
	Если Запись.УдалениеПомеченных Тогда
		Запись.Просмотр = Истина;
		Запись.Редактирование = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Запись = Элементы.НаборЗаписей.ТекущиеДанные;
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока", Запись.Пользователь);
	ПараметрыФормы.Вставить("ВыборГруппПользователей", Истина);
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, Элемент);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьНабор()
	Если Модифицированность Тогда
		ЗаписатьНабор();
	КонецЕсли;
	
	ТекСтрока = Элементы.ВидыСправочников.ТекущаяСтрока;
	НаборЗаписей.Очистить();
	Если ТекСтрока=Неопределено Тогда
		Элементы.НаборЗаписей.ТолькоПросмотр = Истина;
	Иначе
		Элементы.НаборЗаписей.ТолькоПросмотр = Ложь;
		ПрочитатьНабор(ТекСтрока);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНабор(Вид)
	Набор = РеквизитФормыВЗначение("НаборЗаписей");
	Набор.Отбор.ВидСправочника.Установить(Вид);
	Набор.Прочитать();
	ЗначениеВРеквизитФормы(Набор, "НаборЗаписей");
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНабор()
	Набор = РеквизитФормыВЗначение("НаборЗаписей");
	Записи = Новый Соответствие();
	КУдалению = Новый Массив();
	Для каждого Запись Из Набор Цикл
		Если не ЗначениеЗаполнено(Запись.Пользователь) Тогда
			КУдалению.Добавить(Запись);
			Продолжить;
		КонецЕсли;
		Найденная = Записи[Запись.Пользователь];
		Если Найденная=Неопределено Тогда
			Записи.Вставить(Запись.Пользователь, Запись);
		Иначе
			Для каждого МДРесурс Из Метаданные.РегистрыСведений.нсиПраваДоступаНаВидыСправочников.Ресурсы Цикл
				Найденная[МДРесурс.Имя] = Найденная[МДРесурс.Имя] или Запись[МДРесурс.Имя];
			КонецЦикла;
			КУдалению.Добавить(Запись);
		КонецЕсли;
	КонецЦикла;
	Для каждого Запись Из КУдалению Цикл
		Набор.Удалить(Запись);
	КонецЦикла;
	Набор.Записать();
	Модифицированность = Ложь;
КонецПроцедуры

#КонецОбласти
