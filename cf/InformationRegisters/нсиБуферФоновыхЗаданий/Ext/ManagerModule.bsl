#Область ПрограммныйИнтерфейс

// Процедура - записывает данные для признака, формирует УИН.
//
Процедура ЗаписьДанных(ПризнакДляСвязи, Данные) Экспорт
	
	ПризнакУникальности = Новый УникальныйИдентификатор;	
	
	НаборЗаписи = РегистрыСведений.нсиБуферФоновыхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписи.Отбор.ПризнакДляСвязи.Установить(ПризнакДляСвязи);
	НаборЗаписи.Отбор.ПризнакУникальности.Установить(ПризнакУникальности);
	
	ЗаписьВБуфер = НаборЗаписи.Добавить();
	ЗаписьВБуфер.ПризнакДляСвязи = ПризнакДляСвязи;
	ЗаписьВБуфер.ПризнакУникальности = ПризнакУникальности;
	ЗаписьВБуфер.Данные = Данные;
	
	Попытка
		НаборЗаписи.Записать(Истина);
	Исключение
		ЗаписьДанных(ПризнакДляСвязи, Данные);
	КонецПопытки;
	
КонецПроцедуры	

// Процедура - считывает данные по признаку.
//
Функция ПрочитатьДанные(ПризнакДляСвязи) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	нсиБуферФоновыхЗаданий.Данные КАК Данные
	|ИЗ
	|	РегистрСведений.нсиБуферФоновыхЗаданий КАК нсиБуферФоновыхЗаданий
	|ГДЕ
	|	нсиБуферФоновыхЗаданий.ПризнакДляСвязи = &ПризнакДляСвязи");
	
	Запрос.УстановитьПараметр("ПризнакДляСвязи", ПризнакДляСвязи);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Данные");
	
КонецФункции	

// Процедура - очищает данные по признаку.
//
Функция ОчиститьДанные(ПризнакДляСвязи) Экспорт
	
	НаборЗаписи = РегистрыСведений.нсиБуферФоновыхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписи.Отбор.ПризнакДляСвязи.Установить(ПризнакДляСвязи);
	
	НаборЗаписи.Записать(Истина);
	
КонецФункции	

#КонецОбласти