////////////////////////////////////////////////////////////////////////////////////////////////////
// Подсистема "Контактная информация".
// 
////////////////////////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Разбирает представление контактной информации и возвращает строку XML со значениями полей.
//
//  Параметры:
//      Текст        - Строка - XML
//      ОжидаемыйТип - СправочникСсылка.ВидыКонтактнойИнформации, ПеречислениеСсылка.ТипыКонтактнойИнформации - для
//                     контроля типов.
//
//  Возвращаемое значение:
//      Строка - XML
//
Функция КонтактнаяИнформацияXMLПоПредставлению(Знач Текст, Знач ОжидаемыйВид) Экспорт
	Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияXMLПоПредставлению(Текст, ОжидаемыйВид);
КонецФункции

// Возвращает строку состава из значения контактной информации.
//
//  Параметры:
//      XMLДанные - Строка - XML данных контактной информации.
//
//  Возвращаемое значение:
//      Строка - содержимое
//      Неопределено - если значение состава сложного типа.
//
Функция СтрокаСоставаКонтактнойИнформации(Знач XMLДанные) Экспорт;
	Возврат УправлениеКонтактнойИнформациейСлужебный.СтрокаСоставаКонтактнойИнформации(XMLДанные);
КонецФункции

// Преобразует все входящие форматы контактной информации в XML.
//
Функция ПривестиКонтактнуюИнформациюXML(Знач Данные) Экспорт
	Возврат УправлениеКонтактнойИнформациейСлужебный.ПривестиКонтактнуюИнформациюXML(Данные);
КонецФункции

// Возвращает список идентификаторов строк доступных для копирования в текущий адресов.
// 
Функция ДоступныеДляКопированияАдреса(Знач ЗначенияПолейДляАнализа, Знач ВидАдреса) Экспорт
	
	Возврат УправлениеКонтактнойИнформациейСлужебный.ДоступныеДляКопированияАдреса(ЗначенияПолейДляАнализа, ВидАдреса);
	
КонецФункции

// Возвращает найденную ссылку или создает новую страну мира и возвращает ссылку на нее.
//
Функция СтранаМираПоДаннымКлассификатора(Знач КодСтраны) Экспорт
	
	Возврат Справочники.СтраныМира.СсылкаПоДаннымКлассификатора(
		Новый Структура("Код", КодСтраны));
		
КонецФункции

// Заполняет коллекцию ссылками на найденные или созданные страны мира.
//
Процедура КоллекцияСтранМираПоДаннымКлассификатора(Коллекция) Экспорт
	
	Для Каждого КлючЗначение Из Коллекция Цикл
		Коллекция[КлючЗначение.Ключ] = Справочники.СтраныМира.СсылкаПоДаннымКлассификатора(
			Новый Структура("Код", КлючЗначение.Значение.Код));
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

//КутьяАА ITRR
Функция ПолучитьПредставлениеАдресаУПП(АдресУППСтруктура) Экспорт  

	ДомСокр = ПолучитьСокращениеУПП(АдресУППСтруктура.ТипДома);
	СтроениеСокр = ПолучитьСокращениеУПП(АдресУППСтруктура.ТипСтроения);
	ПомещениеСокр = ПолучитьСокращениеУПП(АдресУППСтруктура.ТипПомещения);
	
	ТекПредставление = "";
	
	ДополнитьПредставлениеАдреса(ТекПредставление, СокрЛП(АдресУППСтруктура.АдресУПП_Индекс_Поле1), ", ");
	ДополнитьПредставлениеАдреса(ТекПредставление, СокрЛП(АдресУППСтруктура.АдресУПП_Регион_Поле2), ", ");
	ДополнитьПредставлениеАдреса(ТекПредставление, СокрЛП(АдресУППСтруктура.АдресУПП_Округ), ", ");
	ДополнитьПредставлениеАдреса(ТекПредставление, СокрЛП(АдресУППСтруктура.АдресУПП_Район_Поле3), ", ");
	ДополнитьПредставлениеАдреса(ТекПредставление, СокрЛП(АдресУППСтруктура.АдресУПП_Город_Поле4), ", ");
	ДополнитьПредставлениеАдреса(ТекПредставление, СокрЛП(АдресУППСтруктура.АдресУПП_ВнутригородскойРайон), ", ");
	ДополнитьПредставлениеАдреса(ТекПредставление, СокрЛП(АдресУППСтруктура.АдресУПП_НаселенныйПункт_Поле5), ", ");
	ДополнитьПредставлениеАдреса(ТекПредставление, СокрЛП(АдресУППСтруктура.АдресУПП_Улица_Поле6), ", ");
	ДополнитьПредставлениеАдреса(ТекПредставление, СокрЛП(АдресУППСтруктура.АдресУПП_Дом_Поле7), ", "+ДомСокр); 
	ДополнитьПредставлениеАдреса(ТекПредставление, СокрЛП(АдресУППСтруктура.АдресУПП_Корпус_Поле8), ", "+СтроениеСокр);
	ДополнитьПредставлениеАдреса(ТекПредставление, СокрЛП(АдресУППСтруктура.АдресУПП_Квартира_Поле9), ", "+ПомещениеСокр);
	ДополнитьПредставлениеАдреса(ТекПредставление, СокрЛП(АдресУППСтруктура.АдресУПП_ДополнительнаяИнформация_Поле10), ", ");
	
	Если СтрДлина(ТекПредставление) > 2 Тогда
		ТекПредставление = Сред(ТекПредставление, 3);
	КонецЕсли; 
	
	Возврат ТекПредставление;

КонецФункции

Функция ПолучитьСокращениеУПП(НаименованиеТипаОбъекта)

	СокращениеУПП = "";
	
	КодСериализации = УправлениеКонтактнойИнформациейКлиентСервер.КодСериализацииОбъектаАдресации(НаименованиеТипаОбъекта);
	
	Если КодСериализации = Неопределено Тогда
		Возврат СокращениеУПП;
	КонецЕсли;
	
	СтруктураОбъектаАдресации = УправлениеКонтактнойИнформациейКлиентСервер.ТипОбъектаПоКодуСериализации(КодСериализации);
	
	Если СтруктураОбъектаАдресации = Неопределено Тогда
		Возврат СокращениеУПП;
	КонецЕсли;
	
	СтруктураОбъектаАдресации.Свойство("СокращениеУПП", СокращениеУПП);
	
	Возврат СокращениеУПП;

КонецФункции // ПолучитьСокращениеУПП()

//Процедура дополняет представление адреса строкой 
Процедура ДополнитьПредставлениеАдреса(ТекущееПредставление, Дополнение, СтрокаКонкатенации)
	
	Если Дополнение <> "" Тогда
		ТекущееПредставление = ТекущееПредставление + СтрокаКонкатенации + Дополнение;
	КонецЕсли;
  	
КонецПроцедуры

Функция ПолучитьАдресУПП(КонтактнаяИнформацияУПП) Экспорт 
	
	СтруктураАдреса = Новый Структура;
	
	СтруктураАдреса.Вставить("АдресУПП_Представление", КонтактнаяИнформацияУПП.Представление);
	СтруктураАдреса.Вставить("АдресУПП_Индекс_Поле1", КонтактнаяИнформацияУПП.Поле1);
	СтруктураАдреса.Вставить("АдресУПП_Регион_Поле2", КонтактнаяИнформацияУПП.Поле2);
	СтруктураАдреса.Вставить("АдресУПП_Район_Поле3", КонтактнаяИнформацияУПП.Поле3);
	СтруктураАдреса.Вставить("АдресУПП_Город_Поле4", КонтактнаяИнформацияУПП.Поле4);
	СтруктураАдреса.Вставить("АдресУПП_НаселенныйПункт_Поле5", КонтактнаяИнформацияУПП.Поле5);
	СтруктураАдреса.Вставить("АдресУПП_Улица_Поле6", КонтактнаяИнформацияУПП.Поле6);
	СтруктураАдреса.Вставить("АдресУПП_Дом_Поле7", КонтактнаяИнформацияУПП.Поле7);
	СтруктураАдреса.Вставить("АдресУПП_Корпус_Поле8", КонтактнаяИнформацияУПП.Поле8);
	СтруктураАдреса.Вставить("АдресУПП_Квартира_Поле9", КонтактнаяИнформацияУПП.Поле9);
	СтруктураАдреса.Вставить("АдресУПП_ДополнительнаяИнформация_Поле10", КонтактнаяИнформацияУПП.Поле10);
	СтруктураАдреса.Вставить("АдресУПП_Округ", КонтактнаяИнформацияУПП.Округ);
	СтруктураАдреса.Вставить("АдресУПП_ВнутригородскойРайон", КонтактнаяИнформацияУПП.ВнутригородскойРайон);
	СтруктураАдреса.Вставить("ТипДома", КонтактнаяИнформацияУПП.ТипДома);
	СтруктураАдреса.Вставить("ТипСтроения", КонтактнаяИнформацияУПП.ТипСтроения);
	СтруктураАдреса.Вставить("ТипПомещения", КонтактнаяИнформацияУПП.ТипПомещения);
	
	Возврат СтруктураАдреса;

КонецФункции


