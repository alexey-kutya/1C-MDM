#Область ПрограммныйИнтерфейс

// Выполняет фоновое задание
//
// Параметры:
//  ИмяПроцедуры - строка, имя процедуры выполняемой в фоновом задании.
//  мсвПараметры - массив, массив параметров.
//  КлючФоновогоЗадания - строка, уникальный идентификатор фонового залания.
//
Функция ВыполнитьФоновоеЗадание(ИмяПроцедуры, мсвПараметры = Неопределено, КлючФоновогоЗадания = "", ТолькоВФоне = Ложь) Экспорт
	
	Попытка
		Если МонопольныйРежим() Тогда 
			ВызватьИсключение НСтр("ru = 'Менеджер заданий не активен'");
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(КлючФоновогоЗадания) тогда
			КлючФоновогоЗадания = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;	
		ФоновоеЗадание = ФоновыеЗадания.Выполнить(ИмяПроцедуры, мсвПараметры, КлючФоновогоЗадания, ИмяПроцедуры);
		Возврат ФоновоеЗадание.УникальныйИдентификатор;
	Исключение
		стрОписание = ОписаниеОшибки();
		Если Найти(стрОписание, "Менеджер заданий не активен") И Не ТолькоВФоне тогда
			Если мсвПараметры = Неопределено тогда
				текСтрока = ИмяПроцедуры + "();";
			Иначе	
				текСтрока = ИмяПроцедуры + "(";
				Для Инд = 0 по мсвПараметры.ВГраница() цикл
					текСтрока = текСтрока + ?(Инд, ", ", "") + "мсвПараметры[" + Строка(Инд) + "]";
				КонецЦикла;
				текСтрока = текСтрока + ");";
			КонецЕсли;
			Выполнить(текСтрока);
		КонецЕсли;	
		Возврат Неопределено;
	КонецПопытки
КонецФункции //  ВыполнитьФоновоеЗадание()	

// Функция возвращает процент выполнения фонового задания и отображает сообщения пользователю.
//
Функция ПолучитьПроцентВыполненияФоновогоЗаданияИВывестиСообщения(ИдентификаторФоновогоЗадания, ЕстьСообщения, ИдентификаторФормы = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторФоновогоЗадания) Тогда 
		Возврат 100;
	КонецЕсли;
	
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторФоновогоЗадания);
	Если Задание = Неопределено Тогда 
		Возврат 100;
	КонецЕсли;
	
	Если Задание.Состояние <> СостояниеФоновогоЗадания.Активно Тогда 
		мсвСообшений = Задание.ПолучитьСообщенияПользователю(Истина);
		Если мсвСообшений <> Неопределено Тогда 
			Для Каждого текСообщение Из мсвСообшений Цикл
				Текст = текСообщение.Текст;
				Если Лев(Текст, 3) <> "###" Тогда 
					Если ЗначениеЗаполнено(ИдентификаторФормы) Тогда 
						текСообщение.ИдентификаторНазначения = ИдентификаторФормы;
					КонецЕсли;
					текСообщение.Сообщить();				
					
					ЕстьСообщения = Истина
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
		
		Возврат 100;
	КонецЕсли;
	Процент = 0;
	
	мсвСообшений = Задание.ПолучитьСообщенияПользователю(Истина);
	Если мсвСообшений <> Неопределено Тогда 
		Для Каждого текСообщение Из мсвСообшений Цикл
			Текст = текСообщение.Текст;
			Если Лев(Текст, 3) = "###" Тогда 
				КоличествоВыполнено = Число(СтрЗаменить(Текст, "###", ""));
				Процент = Макс(Процент, КоличествоВыполнено);
			Иначе
				Если ЗначениеЗаполнено(ИдентификаторФормы) Тогда 
					текСообщение.ИдентификаторНазначения = ИдентификаторФормы;
				КонецЕсли;
				текСообщение.Сообщить();				
				
				ЕстьСообщения = Истина
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	Возврат Процент;
	
КонецФункции

// Функция возвращает последнее фоновое задание с заданным ключом.
//
// Параметры:
//  Ключ       - Строка, ключ фонового задания.
//
// Возвращаемое значение:
//  Фоновое задание, Неопределено.
//
Функция ПолучитьПоследнееЗадание(Ключ) Экспорт
	
	мсвЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Ключ", Ключ));
	
	ПоследнееЗадание = Неопределено;
	Для Каждого текЗадание Из мсвЗаданий Цикл 
		Если ПоследнееЗадание = Неопределено Тогда 
			ПоследнееЗадание = текЗадание;
		ИначеЕсли текЗадание.Начало > ПоследнееЗадание.Начало Тогда 
			ПоследнееЗадание = текЗадание;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПоследнееЗадание;

КонецФункции // ПолучитьПоследнееЗадание()

#КонецОбласти

