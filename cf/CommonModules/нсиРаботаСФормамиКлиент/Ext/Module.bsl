#Область ПрограммныйИнтерфейс

// Процедура проверяет уникальность поля в таблице управляемой формы 
// в обработчике "ПередОкончаниемРедактированияСтроки"
// Параметры:
//	ТабличноеПоле - элемент управления - таблица;
//	ТабличнаяЧасть - коллекция данных формы, табличная часть реквизита формы;
//  Реквизит - строка, имя реквизита, уникальность которого проверяется в строках;
//	ОтменаРедактирования - булево, признак отмены редактирования строки;
//  Отказ - булево, через параметр возвращается Истина, если пользователь пытается
//		установить неуникальное значение реквизита.
//
Процедура ПроверитьУникальностьСтроки(ТабличноеПоле, ТабличнаяЧасть, Реквизит, ОтменаРедактирования, Отказ, Сообщение = Неопределено) Экспорт
	ТД = ТабличноеПоле.ТекущиеДанные;
	Строки = ТабличнаяЧасть.НайтиСтроки(новый Структура(Реквизит,ТД[Реквизит]));
	Для Каждого Строка Из Строки Цикл 
		Если Строка.НомерСтроки<>ТД.НомерСтроки Тогда 
			Если НЕ ОтменаРедактирования Тогда 
				Если Сообщение = Неопределено Тогда 
					ПоказатьПредупреждение(,"Такая строка уже есть!");
				Иначе
					ПоказатьПредупреждение(,Сообщение);
				КонецЕсли;
				ТД[Реквизит] = Неопределено;
				Отказ = Истина;
			Иначе
				ТД[Реквизит] = Неопределено;
			КонецЕсли;
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// функция возвращает раскрашенную форматированную строку по указанной визуализации
Функция ПолучитьСтрокуСВыделениемБукв(знач Текст, Цвета) Экспорт 
	Если ЗначениеЗаполнено(Текст) Тогда
	
		фсТекст = Новый ФорматированнаяСтрока("");
		
		Шрифт = Новый Шрифт;
		
		Для НомерСтроки = 1 По СтрЧислоСтрок(Текст) Цикл
			Строка = СтрПолучитьСтроку(Текст,НомерСтроки);
			Слова = СтрЗаменить(Строка," ",Символы.ПС);
			
			Для НомерСлова = 1 По СтрЧислоСтрок(Слова) Цикл
				Слово = СтрПолучитьСтроку(Слова,НомерСлова);
				
				
					Для инд = 1 По СтрДлина(Слово) Цикл 
						Буква = Сред(Слово,инд,1);
						
						Если ЭтоЛатинскаябуква(Буква) Тогда 
							фсТекст = ?(Цвета.Латиница = Неопределено,Новый ФорматированнаяСтрока(фсТекст, Буква), Новый ФорматированнаяСтрока(фсТекст, Новый ФорматированнаяСтрока(Буква, ,Цвета.Латиница.Цвет)));
						ИначеЕсли ЭтоРусскаяБуква(Буква) Тогда 
							фсТекст = ?(Цвета.Кириллица = Неопределено, Новый ФорматированнаяСтрока(фсТекст, Буква), Новый ФорматированнаяСтрока(фсТекст, Новый ФорматированнаяСтрока(Буква,,Цвета.Кириллица.Цвет)));
						ИначеЕсли ЭтоЦифра(Буква) Тогда
							фсТекст = ?(Цвета.Цифра = Неопределено, Новый ФорматированнаяСтрока(фсТекст, Буква), Новый ФорматированнаяСтрока(фсТекст, Новый ФорматированнаяСтрока(Буква,,Цвета.Цифра.Цвет)));
						Иначе
							фсТекст = Новый ФорматированнаяСтрока(фсТекст, Буква);
						КонецЕсли;
					КонецЦикла;
							
				Если НомерСлова<СтрЧислоСтрок(Слова) Тогда 
					фсТекст = Новый ФорматированнаяСтрока(фсТекст, " ");
				КонецЕсли;
			КонецЦикла;
			
			Если НомерСтроки<СтрЧислоСтрок(Текст) Тогда 
				фсТекст = Новый ФорматированнаяСтрока(фсТекст, Символы.ПС);
			КонецЕсли;
		КонецЦикла;
	Иначе
		фсТекст = Новый ФорматированнаяСтрока("");
	КонецЕсли;	
	
	Возврат (фсТекст);
КонецФункции

// функция проверяет принадлежность буквы к латинице
Функция ЭтоЛатинскаяБуква(Буква)
	Возврат (Найти("QWERTYUIOPASDFGHJKLZXCVBNM",ВРег(Буква)) <> 0);
КонецФункции

// функция проверяет принадлежность буквы к кириллице
Функция ЭтоРусскаяБуква(Буква)
	Возврат (Найти("ЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮЁ",ВРег(Буква)) <> 0);
КонецФункции

// функция проверяет принадлежность буквы к цифрам
Функция ЭтоЦифра(Буква)
	Возврат (Найти("0123456789",ВРег(Буква)) <> 0);
КонецФункции

#КонецОбласти
