
#Область ПрограммныйИнтерфейс

// Процедура - создается копия эталонной записи, устанавливается как эталон для выделенных.
//
Функция СоздатьЭталонНаСервере(ЭталоннаяЗапись, ВыделенныеСтроки, ИмяСправочника) Экспорт
	
	Если Не ЗначениеЗаполнено(ИмяСправочника) Тогда 
		Возврат Неопределено;
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ЭталоннаяЗапись) Тогда 
		Возврат Неопределено;
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ВыделенныеСтроки) Тогда 
		Возврат Неопределено;
	КонецЕсли;	
 
	// формируется источник данных - медленно, но ЗагрузитьКолонку не работает(((
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("Ссылка");
	СтрокаТЧ = ТаблицаЗначений.Добавить();
	СтрокаТЧ.Ссылка = ЭталоннаяЗапись;
	Для Каждого СтрокаСписка Из ВыделенныеСтроки Цикл 
		СтрокаТЧ = ТаблицаЗначений.Добавить();
		СтрокаТЧ.Ссылка = СтрокаСписка.Значение;		
	КонецЦикла;	
		
	// блокировка дублей
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Справочник."+ИмяСправочника);
	ЭлементБлокировки.ИсточникДанных = ТаблицаЗначений;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка","Ссылка");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать(); 
	
	// создание эталона
	НовыйЭлемент = ЭталоннаяЗапись.Скопировать();
	НовыйЭлемент.Записать();
	
	// перенос доп. данных (в том числе записей регистров)
	НовыйЭлемент.Заполнить(ЭталоннаяЗапись);    	
	НовыйЭлемент.ТипПозиции = Перечисления.нсиТипыПозицийСправочников.ЭталоннаяПозиция;
	НовыйЭлемент.ЭталоннаяПозиция = Неопределено;
	Если НовыйЭлемент.Метаданные().ТабличныеЧасти.Найти("ДополнительнаяКлассификация")<>Неопределено Тогда 
		НовыйЭлемент.ДополнительнаяКлассификация.Очистить();
	КонецЕсли;
	НовыйЭлемент.Записать();
	РегистрыСведений.нсиСтатусыОбработкиСправочников.УстановитьСтатусСправочника(НовыйЭлемент.Ссылка,
		Новый Структура("Пользователь,ОбработкаНачата", ПараметрыСеанса.ТекущийПользователь, Истина) );	
		
	// указание эталона в дублях
	ВыделенныйЭлемент = ЭталоннаяЗапись.ПолучитьОбъект();
	ВыделенныйЭлемент.ТипПозиции = Перечисления.нсиТипыПозицийСправочников.ДублирующаяПозиция;
	ВыделенныйЭлемент.ЭталоннаяПозиция = НовыйЭлемент.Ссылка;
	ВыделенныйЭлемент.Записать();
	Для Каждого СтрокаТЧ Из ВыделенныеСтроки Цикл 
		Если Не СтрокаТЧ.Значение = НовыйЭлемент.Ссылка Тогда 
			ВыделенныйЭлемент = СтрокаТЧ.Значение.ПолучитьОбъект();
			ВыделенныйЭлемент.ТипПозиции = Перечисления.нсиТипыПозицийСправочников.ДублирующаяПозиция;
			ВыделенныйЭлемент.ЭталоннаяПозиция = НовыйЭлемент.Ссылка;
			ВыделенныйЭлемент.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Возврат НовыйЭлемент.Ссылка;
	
КонецФункции

// Процедура - признает эталонную запись как эталон.
//
Процедура ПодтвердитьЭталонНаСервере(ЭталоннаяЗапись, ВыделенныеСтроки, ИмяСправочника) Экспорт
	
	Если Не ЗначениеЗаполнено(ИмяСправочника) Тогда 
		Возврат;
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ЭталоннаяЗапись) Тогда 
		Возврат;
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ВыделенныеСтроки) Тогда 
		Возврат;
	КонецЕсли;	
	Если ЭталоннаяЗапись.ТипПозиции = Перечисления.нсиТипыПозицийСправочников.ДублирующаяПозиция Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Эталонной выбрана дублирующая позиция.");
		Возврат;
	КонецЕсли;	
 
	// формируется источник данных - медленно, но ЗагрузитьКолонку не работает(((
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("Ссылка");
	СтрокаТЧ = ТаблицаЗначений.Добавить();
	СтрокаТЧ.Ссылка = ЭталоннаяЗапись;
	Для Каждого СтрокаСписка Из ВыделенныеСтроки Цикл 
		СтрокаТЧ = ТаблицаЗначений.Добавить();
		СтрокаТЧ.Ссылка = СтрокаСписка.Значение;		
	КонецЦикла;	
	
	НачатьТранзакцию();
	
	// блокировка записи
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Справочник."+ИмяСправочника);
	ЭлементБлокировки.УстановитьЗначение("Ссылка",ЭталоннаяЗапись);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	// блокировка дублей
	ЭлементБлокировки = Блокировка.Добавить("Справочник."+ИмяСправочника);
	ЭлементБлокировки.ИсточникДанных = ТаблицаЗначений;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка","Ссылка");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать(); 
	
	
	// указание эталона в дублях
	Для Каждого СтрокаТЧ Из ВыделенныеСтроки Цикл 
		Если Не СтрокаТЧ.Значение = ЭталоннаяЗапись Тогда 
			ВыделенныйЭлемент = СтрокаТЧ.Значение.ПолучитьОбъект();
			ВыделенныйЭлемент.ТипПозиции = Перечисления.нсиТипыПозицийСправочников.ДублирующаяПозиция;
			ВыделенныйЭлемент.ЭталоннаяПозиция = ЭталоннаяЗапись;
			ВыделенныйЭлемент.Записать();
			ВыделенныйЭлемент.ПеренестиДублиКНовомуЭталону();
		КонецЕсли;
	КонецЦикла;
	
	// указание записи как эталон
	НовыйЭлемент = ЭталоннаяЗапись.ПолучитьОбъект();
	НовыйЭлемент.ТипПозиции = Перечисления.нсиТипыПозицийСправочников.ЭталоннаяПозиция;
	НовыйЭлемент.ЭталоннаяПозиция = Неопределено;
	НовыйЭлемент.Записать();	
	
	ЗафиксироватьТранзакцию();
КонецПроцедуры

#КонецОбласти
