#Область ПрограммныйИнтерфейс

// Функция возвращает структуру ограничений.
// 	Параметры:
// 		СсылкаНаОбъект - ссылка на элемент справочника.
// 	Возвращает:
//		Таблица значений с ограничениями.
//
Функция ПолучитьСтруктуруОграничений(СсылкаНаОбъект) Экспорт
	УстановитьПривилегированныйРежим(Истина);	
	ВозврЗначение = Неопределено;
	ИмяОбъекта = ПолучитьИмяСправочника(СсылкаНаОбъект);
	ТекущаяБлокировка = Справочники.нсиБлокировкаРеквизитов.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗадачаИсполнителя.Ссылка,
		|	ЗадачаИсполнителя.ШагБП,
		|	ЗадачаИсполнителя.НомерЭтапаБП,
		|	ЗадачаИсполнителя.БизнесПроцесс,
		|	ЗадачаИсполнителя.Исполнитель
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|ГДЕ
		|	ЗадачаИсполнителя.Предмет = &Предмет
		|	И ЗадачаИсполнителя.Выполнена = ЛОЖЬ";

	Запрос.УстановитьПараметр("Предмет", СсылкаНаОбъект);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Если не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Исполнитель) Тогда
			Возврат "ТолькоПросмотр";
		КонецЕсли;
		Для каждого стр из ВыборкаДетальныеЗаписи.БизнесПроцесс.ПрохождениеЭтапов Цикл
			Если стр.Шаг = ВыборкаДетальныеЗаписи.ШагБП и стр.НомерЭтапа = ВыборкаДетальныеЗаписи.НомерЭтапаБП  Тогда
				ТекущаяБлокировка = стр.БлокировкаРеквизитов;
				Прервать;
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;

	Если не ТекущаяБлокировка = Справочники.нсиБлокировкаРеквизитов.ПустаяСсылка() Тогда
		Запрос = Новый Запрос();
		ТекстЗапроса = "ВЫБРАТЬ
		               |	нсиБлокировкаРеквизитовСправочники.ИД
		               |ПОМЕСТИТЬ Справочники
		               |ИЗ
		               |	Справочник.нсиБлокировкаРеквизитов.Справочники КАК нсиБлокировкаРеквизитовСправочники
		               |ГДЕ
		               |	нсиБлокировкаРеквизитовСправочники.Ссылка = &ЭлементБлокировки
		               |	И нсиБлокировкаРеквизитовСправочники.Наименование = &ИмяОбъекта
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	нсиБлокировкаРеквизитовРеквизиты.ИмяРеквизита,
		               |	нсиБлокировкаРеквизитовРеквизиты.ИДРек КАК ИДРек
		               |ПОМЕСТИТЬ Реквизиты
		               |ИЗ
		               |	Справочник.нсиБлокировкаРеквизитов.Реквизиты КАК нсиБлокировкаРеквизитовРеквизиты
		               |ГДЕ
		               |	нсиБлокировкаРеквизитовРеквизиты.Ссылка = &ЭлементБлокировки
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	ИДРек
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Реквизиты.ИмяРеквизита
		               |ИЗ
		               |	Справочники КАК Справочники
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		               |		ПО Справочники.ИД = Реквизиты.ИДРек";
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("ЭлементБлокировки", ТекущаяБлокировка);
		Запрос.УстановитьПараметр("ИмяОбъекта", ИмяОбъекта);
		
		Результат = Запрос.Выполнить().Выгрузить();
		
		Если Результат.Количество() > 0 Тогда
			ВозврЗначение = Результат;
		КонецЕсли;
	КонецЕсли;	
		
	Возврат ВозврЗначение;
	
КонецФункции

// Процедура обработки доступности элементов на форме.
//
Процедура ОбработатьРезультатБлокировкиРеквизитов(РезСтруктура, Форма) Экспорт
	
	Если РезСтруктура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	// Для формы элемента или группы справочника
	//
	Если ТипЗнч(РезСтруктура) = Тип("ТаблицаЗначений") Тогда
		Для Каждого ЭлементНаФорме Из Форма.Элементы Цикл
			Если РезСтруктура.Найти(ЭлементНаФорме.Имя,"ИмяРеквизита") = Неопределено Тогда 
				Попытка
					ЭлементНаФорме.ТолькоПросмотр = Истина;
				Исключение
					Попытка
						ЭлементНаФорме.Доступность = Ложь;
					Исключение
					КонецПопытки;
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// Функция возвращает имя справочника.
// 	Параметры:
// 		Ссылка - ссылка на элемент справочника.
// 	Возвращает:
//		Имя справочника.
//
Функция ПолучитьИмяСправочника(Ссылка) Экспорт
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.нсиУниверсальныйФункциональныйСправочник")
		ИЛИ ТипЗнч(Ссылка) = Тип("СправочникСсылка.нсиУниверсальныйКлассификатор") Тогда 
		Возврат Ссылка.Владелец;
	Иначе
		Возврат Ссылка.Метаданные().Имя;
	КонецЕсли;
	
КонецФункции

// Функция проверяет, является ли элемент группой.
// 	Параметры:
// 		Элемент - ссылка на элемент справочника.
// 	Возвращает:
//		Истина - элемент является группой.
//		Ложь - элемент не является группой.
//
Функция ПроверитьГруппуЭлемента(Элемент) Экспорт
	Возврат Элемент.ЭтоГруппа;
КонецФункции

// Процедура устанавливает оформление типа предмета.
// 	Параметры:
// 		Предмет - ссылка на элемент справочника.
// 		ЭлементФормы - элемент формы.
//
Процедура УстановитьТипПредмета(Предмет, ЭлементФормы) Экспорт
	УстановитьПривилегированныйРежим(Истина);	
	
	Если не ЗначениеЗаполнено(Предмет) Тогда
		ЭлементФормы.Заголовок = "";
		Возврат;
	КонецЕсли;
	
	ЦветТекстаЧерный = Новый Цвет(65, 48, 3);
	ЦветТекстаСерый = Новый Цвет(128, 128, 128);
	ЦветТекстаЗеленый = Новый Цвет(51, 153, 102);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	нсиСтатусыОбработкиСправочников.ВременныйЭлемент,
		|	нсиСтатусыОбработкиСправочников.СозданаЗаявка
		|ИЗ
		|	РегистрСведений.нсиСтатусыОбработкиСправочников КАК нсиСтатусыОбработкиСправочников
		|ГДЕ
		|	нсиСтатусыОбработкиСправочников.Объект = &Предмет";

	Запрос.УстановитьПараметр("Предмет", Предмет);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Если ВыборкаДетальныеЗаписи.ВременныйЭлемент Тогда
			ЭлементФормы.ЦветТекста = ЦветТекстаСерый;
//	ITRR Кутья АА Локализация	
//			ЭлементФормы.Заголовок = "(Временный элемент)";
			ЭлементФормы.Заголовок = НСтр("ru = '(Временный элемент)'; en = '(Temp item)'");
		ИначеЕсли ВыборкаДетальныеЗаписи.СозданаЗаявка Тогда
			ЭлементФормы.ЦветТекста = ЦветТекстаЗеленый;
//			ЭлементФормы.Заголовок = "(Создана заявка)";
			ЭлементФормы.Заголовок = НСтр("ru = '(Создана заявка)'; en = '(Request created)'");
		Иначе                                         
			ЭлементФормы.ЦветТекста = ЦветТекстаЧерный;
//			ЭлементФормы.Заголовок = "(Постоянный элемент)";
			ЭлементФормы.Заголовок = НСтр("ru = '(Постоянный элемент)'; en = '(Permanent item)'");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
