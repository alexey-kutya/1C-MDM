#Область ПрограммныйИнтерфейс

// Процедура обработки выбора задач.
//
Процедура СписокЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = НЕ ОткрытьФормуВыполненияЗадачи(ВыбраннаяСтрока);
КонецПроцедуры

// Процедура обработки задач перед началом изменения.
//
Процедура СписокЗадачПередНачаломИзменения(Элемент, Отказ) Экспорт
	Отказ = ОткрытьФормуВыполненияЗадачи(Элемент.ТекущаяСтрока);
КонецПроцедуры

// Открыть форму выполнения задачи, которую предоставляет бизнес-процесс.  
//
Функция ОткрытьФормуВыполненияЗадачи(Знач ЗадачаСсылка) Экспорт
	
	ПараметрыФормы = нсиБизнесПроцессы.ПолучитьФормуВыполненияЗадачи(ЗадачаСсылка);
	ИмяФормыВыполненияЗадачи = "";
	Результат = ПараметрыФормы.Свойство("ИмяФормы", ИмяФормыВыполненияЗадачи);
	Если Результат Тогда
		ОткрытьФорму(ИмяФормыВыполненияЗадачи, ПараметрыФормы.ПараметрыФормы);
	КонецЕсли; 
	Возврат Результат;
	
КонецФункции

// Открыть форму для перенаправления одной или нескольких задач другому исполнителю.
//
// Параметры
//  МассивЗадач  - Массив - список задач, которые необходимо перенаправить.
//  ВладелецФорма - УправляемаяФорма - форма, которая должна быть владельцем для открываемой
//                                     формы перенаправления задач.
//
Процедура ПеренаправитьЗадачи(МассивЗадач, ВладелецФорма) Экспорт

	Если МассивЗадач = Неопределено Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Не выбраны задачи.'"));
		Возврат;
	КонецЕсли;
		
	ЗадачиМогутБытьПеренаправлены = нсиБизнесПроцессы.ПеренаправитьЗадачи(МассивЗадач, Неопределено, Истина);
	Если НЕ ЗадачиМогутБытьПеренаправлены И МассивЗадач.Количество() = 1 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Невозможно перенаправить уже выполненную задачу.'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОбработкаЗакрытияФормыПеренаправленияЗадачи",
		ЭтотОбъект,
		новый Структура("МассивЗадач",МассивЗадач)
	);
	
	ОткрытьФорму("Задача.ЗадачаИсполнителя.Форма.ПеренаправитьЗадачи",
		Новый Структура("Задача,КоличествоЗадач,ЗаголовокФормы", 
		МассивЗадач[0], МассивЗадач.Количество(), 
		?(МассивЗадач.Количество() > 1, НСтр("ru = 'Перенаправить задачи'"), НСтр("ru = 'Перенаправить задачу'"))), 
		ВладелецФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

// Обработка закрытия формы для перенаправления одной или нескольких задач другому исполнителю.
//
Процедура ОбработкаЗакрытияФормыПеренаправленияЗадачи(Результат,ДополнительныеПараметры) Экспорт
	МассивЗадач = ДополнительныеПараметры.МассивЗадач;
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если МассивЗадач.Количество() > 10 Тогда
		Состояние(НСтр("ru = 'Перенаправление задач'"),, 
			НСтр("ru = 'Выполняется перенаправление задач...'"));
	КонецЕсли;
	МассивПеренаправленныхЗадач = Неопределено;
	ЗадачиПеренаправлены = нсиБизнесПроцессы.ПеренаправитьЗадачи(МассивЗадач, Результат, Ложь, МассивПеренаправленныхЗадач);
	Если МассивЗадач.Количество() > 1 Тогда
		Если ЗадачиПеренаправлены Тогда
			Состояние(НСтр("ru = 'Перенаправление задач'"),, 
				НСтр("ru = 'Задачи перенаправлены.'"));
		Иначе
			Состояние(НСтр("ru = 'Перенаправление задач'"),,
				НСтр("ru = 'Не все задачи перенаправлены. Пропущены задачи, отмеченные как выполненные.'"));
		КонецЕсли;
	Иначе
		Если МассивПеренаправленныхЗадач <> Неопределено Тогда 
			Задача = МассивПеренаправленныхЗадач[0];
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Задача перенаправлена'"),
				ПолучитьНавигационнуюСсылку(Задача),
				Строка(Задача));
		Иначе
			ПоказатьОповещениеПользователя(НСтр("ru = 'Ничего не перенаправлено'"),,);
		КонецЕсли;
	КонецЕсли;
	Оповестить("ЗадачаИзменена", МассивЗадач);
	Оповестить("ЗадачаПеренаправлена", МассивЗадач);
КонецПроцедуры

#КонецОбласти
