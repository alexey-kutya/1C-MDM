//ОБМЕН

// Точка входа для выполнения обмена данными по сценарию обмена регламентным заданием.
//
// Параметры:
//  КодСценарияОбмена - Строка - код элемента справочника "Сценарии обменов данными", для которого будет выполнен обмен
//                               данными.
// 
Процедура ВыполнитьОбменДанными_MDM_УПП() Экспорт
	
	ВыполнитьОбмен();

КонецПроцедуры

Процедура ВыполнитьОбмен()
	
	Запрос=Новый Запрос;
	МВТ=Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц=МВТ;
	Запрос.Текст= "ВЫБРАТЬ
	              |	Обмен_МДМ_УПП.Ссылка КАК Узел,
	              |	Обмен_МДМ_УПП.Организация.BaseID КАК BaseID
	              |ПОМЕСТИТЬ ДанныеУзла
	              |ИЗ
	              |	ПланОбмена.Обмен_МДМ_УПП КАК Обмен_МДМ_УПП
	              |ГДЕ
	              |	НЕ Обмен_МДМ_УПП.ЭтотУзел
	              |	И НЕ Обмен_МДМ_УПП.Организация.BaseID = """"";
	
	Результат=Запрос.Выполнить();
	
	ТЗ = MDMСервер.ПолучитьПараметрыПодключенияWS(Новый Массив);
	
	УзелMDM = ПланыОбмена.Обмен_МДМ_УПП.ЭтотУзел();
	Если Тип(ТЗ)<>Тип("ТаблицаЗначений") ИЛИ Не ЗначениеЗаполнено(ТЗ) Тогда
		ЗаписатьСведенияВЖурналОбмена(УзелMDM,,,,Истина, "Не удалось получить параметры соединения.");
		Возврат;
	КонецЕсли;
	
	//соединяем данные таблиц
	Запрос=Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МВТ;
	Запрос.Текст="ВЫБРАТЬ
	             |	ДанныеУзла.Узел,
	             |	ДанныеУзла.BaseID
	             |ПОМЕСТИТЬ ТаблицаУзлов
	             |ИЗ
	             |	ДанныеУзла КАК ДанныеУзла
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТЗ.BaseID,
	             |	ТЗ.LocationWSDL,
	             |	ТЗ.User,
	             |	ТЗ.Password
	             |ПОМЕСТИТЬ ТаблицаПодключений
	             |ИЗ
	             |	&ТЗ КАК ТЗ
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТаблицаУзлов.Узел,
	             |	ТаблицаПодключений.LocationWSDL,
	             |	ТаблицаПодключений.User,
	             |	ТаблицаПодключений.Password
	             |ИЗ
	             |	ТаблицаУзлов КАК ТаблицаУзлов
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПодключений КАК ТаблицаПодключений
	             |		ПО ТаблицаУзлов.BaseID = ТаблицаПодключений.BaseID";
	Запрос.УстановитьПараметр("ТЗ",ТЗ);
	Результат=Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		ЗаписатьСведенияВЖурналОбмена(УзелMDM,,,,Истина, "Не удалось получить узлы обмена.");
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ПараметрыВыгрузки = ВыгрузитьДанные(Выборка.Узел);
		
		Если ПараметрыВыгрузки = Неопределено 
			ИЛИ ПараметрыВыгрузки.ЧислоВыгруженныхОбъектов = 0 Тогда 
			Продолжить;
		КонецЕсли; 
		
		ПараметрыWS = Новый Структура("WSСсылка, WSПользователь, WSПароль");
		ПараметрыWS.WSСсылка = Выборка.LocationWSDL;
		ПараметрыWS.WSПользователь = Выборка.User;
		ПараметрыWS.WSПароль = Выборка.Password; 
		
		ПередатьДанные(ПараметрыВыгрузки.СтрокаXML, ПараметрыВыгрузки.ЧислоВыгруженныхОбъектов, Выборка.Узел, ПараметрыWS);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ВыгрузитьДанные(Узел) Экспорт
	
	ЗаписьПравилОбмена = РегистрыСведений.ПравилаОбмена.СоздатьМенеджерЗаписи();
	ЗаписьПравилОбмена.ПравилаОбмена = "ExchangeXML";
	ЗаписьПравилОбмена.Прочитать();
	
	Если НЕ ЗначениеЗаполнено(ЗаписьПравилОбмена.ПравилоВыгрузки) Тогда
		ЗаписатьСведенияВЖурналОбмена(Узел,,,,Истина, "Не найдено правило обмена ExchangeXML");
		Возврат Неопределено;
	КонецЕсли;
	
	ПравилаОбмена = ЗаписьПравилОбмена.ПравилоВыгрузки.Получить();
	
	// Инициализация
	Обмен = Обработки.УниверсальныйОбменДаннымиXML.Создать();
	Обмен.РежимОбмена = "Выгрузка";
	ИмяФайлаДанных = ПолучитьИмяВременногоФайла("xml");
	Обмен.ИмяФайлаОбмена = ИмяФайлаДанных;
	
	// Загрузка правил
	ИмяФайлаПравилОбмена = ПолучитьИмяВременногоФайла("xml");
	ЗаписьТекста = Новый ЗаписьТекста(ИмяФайлаПравилОбмена);
	ЗаписьТекста.Записать(ПравилаОбмена);
	ЗаписьТекста.Закрыть();
	Обмен.ИмяФайлаПравилОбмена = ИмяФайлаПравилОбмена;
	Обмен.ЗагрузитьПравилаОбмена();
	
	// Правила выгрузки данных
	
	// Сначала все отключаем 
	МассивИменПВД=Новый Массив;

	Для Каждого Строка из Обмен.ТаблицаПравилВыгрузки.Строки Цикл
		Строка.Включить = 0;
		Обмен.УстановитьПометкиПодчиненных(Строка, "Включить"); 
		//фыв++
		Подчиненные = Строка.Строки;
		Если Подчиненные.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого ТекСтрока Из Подчиненные Цикл
			МассивИменПВД.Добавить(ТекСтрока["Имя"]);
		КонецЦикла; //--
	КонецЦикла;
	
	Для каждого ИмяПВД Из МассивИменПВД Цикл
		СтрПравил = Обмен.ТаблицаПравилВыгрузки.Строки.Найти(ИмяПВД, "Имя", Истина);
		Если СтрПравил = Неопределено Тогда
			ВызватьИсключение "ПередатьНаСервере(): не удалось найти правило выгрузки "+ИмяПВД+" в правилах обмена.";
		КонецЕсли; 
		СтрПравил.Включить = 1;
		СтрПравил.СсылкаНаУзелОбмена = Узел;
		Обмен.УстановитьПометкиРодителей(СтрПравил, "Включить");
	КонецЦикла;
	
	// Выгрузка
	Обмен.ВыполнитьВыгрузку();	
	ЧтениеТекста = Новый ЧтениеТекста;
	ЧтениеТекста.Открыть(ИмяФайлаДанных, КодировкаТекста.UTF8);
	СтрокаXML = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	УдалитьФайлы(ИмяФайлаДанных);
	УдалитьФайлы(ИмяФайлаПравилОбмена);
	
	ПараметрыВозврата = Новый Структура("СтрокаXML, ЧислоВыгруженныхОбъектов");
	ПараметрыВозврата.СтрокаXML = СтрокаXML;
	ПараметрыВозврата.ЧислоВыгруженныхОбъектов = Обмен.мСчетчикВыгруженныхОбъектов;
	
	Возврат ПараметрыВозврата;
	
КонецФункции // ВыгрузитьКонтрагента()

Процедура ПередатьДанные(СтрокаXML, ЧислоВыгруженныхОбъектов, Узел, ПараметрыWS)

	Данные = Новый ХранилищеЗначения(СтрокаXML, Новый СжатиеДанных(9));
	
	Попытка
		Определения = Новый WSОпределения(ПараметрыWS.WSСсылка, ПараметрыWS.WSПользователь, ПараметрыWS.WSПароль);
	Исключение
		ЗаписатьСведенияВЖурналОбмена(Узел,,,,Истина, "Ошибка при создании WSОпределения: "+ОписаниеОшибки());
		Возврат;
	КонецПопытки; 
	
	Попытка
		Прокси = Новый WSПрокси(Определения, "http://www.rusalco.com/xtdo", "WebRusAlco", "WebRusAlcoSoap");
		Прокси.Пользователь = ПараметрыWS.WSПользователь;
		Прокси.Пароль = ПараметрыWS.WSПароль;
	Исключение
		ЗаписатьСведенияВЖурналОбмена(Узел,,,,Истина, "Ошибка при создании WSПрокси: "+ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	ТекстОшибки = "";
	Попытка
		ЗагруженоОбъектов = Прокси.ПринятьДанные(Данные, ТекстОшибки, Константы.ОбменДаннымиЗагрузка.Получить());
		Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
			ЗаписатьСведенияВЖурналОбмена(Узел,ЧислоВыгруженныхОбъектов,ЗагруженоОбъектов,Данные,Истина, "Ошибка загрузки данных: "+ТекстОшибки);
		Иначе
			Если ЧислоВыгруженныхОбъектов = ЗагруженоОбъектов Тогда
				ПланыОбмена.УдалитьРегистрациюИзменений(Узел);
			КонецЕсли; 
			ЗаписатьСведенияВЖурналОбмена(Узел, ЧислоВыгруженныхОбъектов, ЗагруженоОбъектов, Данные);
		КонецЕсли; 
	Исключение
		ЗаписатьСведенияВЖурналОбмена(Узел,ЧислоВыгруженныхОбъектов,,Данные,Истина, "Ошибка выполнения веб-сервиса: "+ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаписатьСведенияВЖурналОбмена(УзелОбмена, ВыгруженоОбъектов = 0, ЗагруженоОбъектов = 0, ПакетДанных = Неопределено, ОшибкаОбмена = Ложь, ОписаниеОшибкиОбмена = "")

	ЖурналОбменаMDM = РегистрыСведений.ЖурналОбменаMDM.СоздатьМенеджерЗаписи();
	ЖурналОбменаMDM.Период = ТекущаяДата();
	ЖурналОбменаMDM.УзелОбмена = УзелОбмена;
	ЖурналОбменаMDM.ВыгруженоОбъектов = ВыгруженоОбъектов;
	ЖурналОбменаMDM.ЗагруженоОбъектов = ЗагруженоОбъектов;
	ЖурналОбменаMDM.ПакетДанных = ПакетДанных;
	ЖурналОбменаMDM.ОшибкаОбмена = ОшибкаОбмена;
	ЖурналОбменаMDM.ОписаниеОшибкиОбмена = ОписаниеОшибкиОбмена;
	ЖурналОбменаMDM.Записать();
	
КонецПроцедуры // ЗаписатьСведенияВЖурналОбмена()

